var WhatsappAjaxManager={checkWhatsappVendor:function(a,c){return c=void 0!==c&&!0===c,$.ajax({url:"/vendor/whatsapp/check",async:c,data:{contactNumber:a}})},checkWhatsappUser:function(a,c){return c=void 0!==c&&!0===c,$.ajax({url:"/user/whatsapp/check",async:c,data:{contactNumber:a}})}};var WhatsappAuthorizeLayer=function(){function e(){this.authorizeCheckboxSelector=".app-layer-whatsapp-authorize",this.phoneInputSelector=".app-whatsapp-layer-mobile-phone",this.authorizeBtnSelector=".app-layer-vendor-whatsapp-btn",this.errorBoxMessageSelector=".app-whatsapp-phone-error",this.loaderSelector=".app-whatsapp-loader"}return e.prototype.init=function(){this._bindEvents()},e.prototype._bindEvents=function(){var o=this;$(document.body).on("change",this.authorizeCheckboxSelector,function(e){var t=$(this);o._onChangeAuthorizeCheckbox(t)}),$(document.body).on("click",this.authorizeBtnSelector,function(e){o._onClickAuthorizeBtn()})},e.prototype._onChangeAuthorizeCheckbox=function(e){var t=$(this.authorizeBtnSelector);if(e.is(":checked"))t.removeClass("disabled");else t.addClass("disabled")},e.prototype._onClickAuthorizeBtn=function(){var t=this;if($(this.authorizeCheckboxSelector).is(":checked")){var e=$(this.phoneInputSelector).val().trim().replace(/ /g,"");this._hidePhoneError(),this._showSpinner(),this._checkWhatsAppContact(e).done(function(e){if(e.status)t.close();else t._showPhoneError(e.errorMessage),t._hideSpinner()}).fail(function(){t._showPhoneError('There has been a mistake. Please, try again'),t._hideSpinner()})}},e.prototype._checkWhatsAppContact=function(e){return $.when().then(function(){return{status:!1}})},e.prototype.open=function(){},e.prototype.close=function(){},e.prototype._showSpinner=function(){$(this.loaderSelector).removeClass("dnone")},e.prototype._hideSpinner=function(){$(this.loaderSelector).addClass("dnone")},e.prototype._hidePhoneError=function(){$(this.errorBoxMessageSelector).css("display","none")},e.prototype._showPhoneError=function(e){var t=$(this.errorBoxMessageSelector);t.html(e),t.css("display","block")},e}(),WhatsappAuthorizeVendorLayer=function(e,t){function o(){e.call(this)}return((o.prototype=new e).constructor=o).prototype._checkWhatsAppContact=function(e){return t.checkWhatsappVendor(e,!0)},o.canOpen=function(){return document.body.classList.contains("app-show-whats-vendor-layer")},o}(WhatsappAuthorizeLayer,WhatsappAjaxManager),WhatsappAuthorizeUserLayer=function(e,t){function o(){e.call(this)}return((o.prototype=new e).constructor=o).prototype._checkWhatsAppContact=function(e){return t.checkWhatsappUser(e,!0)},o.canOpen=function(){return document.body.classList.contains("app-show-whats-user-layer")},o}(WhatsappAuthorizeLayer,WhatsappAjaxManager),WhatsappAuthorizeDesktopVendorLayer=function(e,t){function o(){e.call(this)}return((o.prototype=new e).constructor=o).prototype.open=function(){common_openLayer("/vendor/layer/whatsapp/enable-phone")},o.prototype.close=function(){t()},o.canOpen=function(){return e.canOpen()},o}(WhatsappAuthorizeVendorLayer,common_closeLayer),WhatsappAuthorizeDesktopUserLayer=function(e,t){function o(){e.call(this)}return((o.prototype=new e).constructor=o).prototype.open=function(){common_openLayer("/user/layer/whatsapp/enable-phone")},o.prototype.close=function(){t()},o.canOpen=function(){return e.canOpen()},o}(WhatsappAuthorizeUserLayer,common_closeLayer);$(document).ready(function(){if(WhatsappAuthorizeDesktopVendorLayer.canOpen()){var e=new WhatsappAuthorizeDesktopVendorLayer;e.init(),e.open()}if(WhatsappAuthorizeDesktopUserLayer.canOpen()){var t=new WhatsappAuthorizeDesktopUserLayer;t.init(),t.open()}});var geoXml,tooltip,overlay,marker,map="",markers=new Array,markersDirecciones=[],showingEmp=-1,showingidEmp=-1,LoadEmp=-1,LoadingMarker=!1,top_map=-1,bottom_map=-1,left_map=-1,right_map=-1;if(!tick)var tick=function(){};var boundSW,boundNE,Instalaciones=new Array,nInstalaciones=0,mapIcons=new Array,mapIcons2=new Array,mapIcons3=new Array;function initMaps(){for(i=0;i<50;i++)mapIcons[i]=new google.maps.MarkerImage(globals.subdomain_cdn_css+"/assets/img/maps/bg_marker.png",new google.maps.Size(30,30),new google.maps.Point(0,0),new google.maps.Point(7,38),new google.maps.Size(30,30));for(i=1;i<100;i++)if(17!==i&&18!==i&&19!==i)mapIcons2[i]=new google.maps.MarkerImage(globals.subdomain_cdn_css+"/assets/img/maps/bg_marker.png",new google.maps.Size(30,30),new google.maps.Point(0,0),new google.maps.Point(15,15),new google.maps.Size(30,30)),mapIcons3[i]=new google.maps.MarkerImage(globals.subdomain_cdn_css+"/assets/img/maps/bg_marker.png",new google.maps.Size(30,30),new google.maps.Point(0,0),new google.maps.Point(7,38),new google.maps.Size(30,30));mapIcons2[17]=new google.maps.MarkerImage(globals.subdomain_cdn_css+"/assets/img/maps/bg_marker-fav.png",new google.maps.Size(9,9),new google.maps.Point(0,0),new google.maps.Point(4.5,4.5),new google.maps.Size(9,9)),mapIcons3[17]=new google.maps.MarkerImage(globals.subdomain_cdn_css+"/assets/img/maps/bg_marker-events-fav.png",new google.maps.Size(11,11),new google.maps.Point(0,0),new google.maps.Point(15,15),new google.maps.Size(11,11)),mapIcons2[18]=new google.maps.MarkerImage(globals.subdomain_cdn_css+"/assets/img/maps/bg_marked.png",new google.maps.Size(9,9),new google.maps.Point(0,0),new google.maps.Point(4.5,4.5),new google.maps.Size(9,9)),mapIcons2[19]=new google.maps.MarkerImage(globals.subdomain_cdn_css+"/assets/img/maps/bg_marker.png",new google.maps.Size(30,30),new google.maps.Point(0,0),new google.maps.Point(15,15),new google.maps.Size(30,30))}function showTooltip(e){tooltip.innerHTML=e.tooltip,projection=overlay.getProjection();var o=projection.fromLatLngToDivPixel(projection.fromDivPixelToLatLng(new google.maps.Point(0,0))),t=projection.fromLatLngToDivPixel(e.getPosition()),a=e.getIcon().anchor,i=e.getIcon().size.width;tooltip.style.left=t.x-o.x-a.x+i+"px",tooltip.style.top=t.y-o.y-Math.round(a.y/2)+0+"px",tooltip.style.visibility="visible"}var map_mini="";function GLoadMapMini(){if(""===map_mini)map_mini=new google.maps.Map(document.getElementById("map_mini"))}function GShowMiniEmp(e,o,t){GLoadMapMini();var a=new google.maps.LatLng(e,o),i={center:a,zoom:t,mapTypeId:google.maps.MapTypeId.ROADMAP};map_mini.setOptions(i);var n=new google.maps.MarkerImage(globals.subdomain_cdn_css+"/assets/img/maps/bg_marker.png",null,null,null,new google.maps.Size(29,29));new google.maps.Marker({position:a,map:map_mini,icon:n})}function GLoad(e){map=new google.maps.Map(document.getElementById(e))}function GLoadMap(){if(""===map)GLoad("map")}function GShowEmp(e,o,t,a,i){GLoadMap();var n=new google.maps.LatLng(o,t),p={center:n,zoom:a,mapTypeId:google.maps.MapTypeId.ROADMAP};map.setOptions(p);var m=new google.maps.MarkerImage(globals.subdomain_cdn_css+"/assets/img/maps/bg_marker.png",null,null,null,new google.maps.Size(29,29)),r=new google.maps.Marker({position:n,map:map,icon:m}),s=new google.maps.InfoWindow;google.maps.event.addListener(r,"click",function(){s.setContent(e),s.open(map,r)})}function GShowCustomEmp(e,o,t,a,i,n,p){GLoadMap();var m=new google.maps.LatLng(i,n),r={center:m,zoom:p,mapTypeId:google.maps.MapTypeId.ROADMAP};map.setOptions(r),map.centeredMode=!0,overlay=new google.maps.OverlayView;var s=new google.maps.MarkerImage(globals.subdomain_cdn_css+"/assets/img/maps/bg_marker.png",new google.maps.Size(30,30),null,new google.maps.Point(15,15),new google.maps.Size(30,30)),l=new google.maps.Marker({position:m,map:map,icon:s,idEmpresa:e,idEscaparate:o,idSector:a,Nombre:"emp"});if(null!==e)google.maps.event.addListener(l,"click",function(){showMarker(l)}),google.maps.event.addListenerOnce(map,"idle",function(){showMarker(l)})}function GShowDirecciones(e){GLoadMap();var o=new google.maps.LatLng(e.latitude,e.longitude),t={center:o,zoom:e.zoom,mapTypeId:google.maps.MapTypeId.ROADMAP};map.setOptions(t),overlay=new google.maps.OverlayView;var a=new google.maps.MarkerImage(globals.subdomain_cdn_css+"/assets/img/maps/bg_marker.png",new google.maps.Size(30,30),null,new google.maps.Point(15,15),new google.maps.Size(30,30)),i=new google.maps.Marker({position:o,map:map,icon:a,idEmpresa:e.idEmpresa,idEscaparate:"",idDireccion:e.idDireccion,Nombre:"emp"});if(markersDirecciones.push({idDireccion:e.idDireccion,marker:i}),null!==e.idEmpresa)google.maps.event.addListener(i,"click",function(){map.setCenter(i.getPosition()),showMarker(i,e.idDireccion)}),google.maps.event.addListenerOnce(map,"idle",function(){showMarker(i,e.idDireccion)});if(e.main)new google.maps.event.trigger(i,"click")}function initializeVendorsResultsMap(){initMaps(),GLoadMap();var e={mapTypeId:google.maps.MapTypeId.ROADMAP,gestureHandling:"greedy"};function o(e){this.setMap(e)}map.setOptions(e),map.centeredMode=!0,(tooltip=document.createElement("div")).style.position="absolute",tooltip.style.visibility="hidden",(o.prototype=new google.maps.OverlayView).onAdd=function(){},o.prototype.onRemove=function(){},o.prototype.draw=function(){},overlay=new o(map),google.maps.event.addListener(map,"idle",function(){overlay.getPanes().floatPane.appendChild(tooltip)})}function createMarkersFromHTML(e){if(document.LoadedMarkers)for(var o=0;o<document.LoadedMarkers.length;o++)document.LoadedMarkers[o].setMap(null);var t=$(e).find("marker"),a=new Array,i=0;top_map=-1;for(o=t.length-1;0<=o;o--)if("0"!=t[o].getAttribute("tipo")&&"-1"!=t[o].getAttribute("tipo")){var n="emp",p=t[o].getAttribute("idEmpresa"),m=t[o].getAttribute("idEscaparate"),r=t[o].getAttribute("idSector"),s=t[o].getAttribute("tipo"),l=unescape(t[o].getAttribute("nombre")),c=createMarker(new google.maps.LatLng(parseFloat(t[o].getAttribute("lat")),parseFloat(t[o].getAttribute("lng"))),n,p,m,r,o,s,l);if(a[i]=c,ylatitud=parseFloat(t[o].getAttribute("lat")),xlongitude=parseFloat(t[o].getAttribute("lng")),-1==top_map)top_map=ylatitud,bottom_map=ylatitud,left_map=xlongitude,right_map=xlongitude;if(top_map>ylatitud)top_map=ylatitud;if(bottom_map<ylatitud)bottom_map=ylatitud;if(left_map>xlongitude)left_map=xlongitude;if(right_map<xlongitude)right_map=xlongitude;i++}for(o=0;o<t.length;o++)if("0"==t[o].getAttribute("tipo")){n="emp",p=t[o].getAttribute("idEmpresa"),m=t[o].getAttribute("idEscaparate"),r=t[o].getAttribute("idSector"),s=t[o].getAttribute("tipo"),l=unescape(t[o].getAttribute("nombre")),c=createMarker(new google.maps.LatLng(parseFloat(t[o].getAttribute("lat")),parseFloat(t[o].getAttribute("lng"))),n,p,m,r,o,s,l);if(a[i]=c,ylatitud=parseFloat(t[o].getAttribute("lat")),xlongitude=parseFloat(t[o].getAttribute("lng")),-1==top_map)top_map=ylatitud,bottom_map=ylatitud,left_map=xlongitude,right_map=xlongitude;if(top_map>ylatitud)top_map=ylatitud;if(bottom_map<ylatitud)bottom_map=ylatitud;if(left_map>xlongitude)left_map=xlongitude;if(right_map<xlongitude)right_map=xlongitude;i++}for(o=0;o<t.length&&o<500;o++)if("-1"==t[o].getAttribute("tipo")){n="emp",p=t[o].getAttribute("idEmpresa"),m=t[o].getAttribute("idEscaparate"),r=t[o].getAttribute("idSector"),s=t[o].getAttribute("tipo"),l=unescape(t[o].getAttribute("nombre")),c=createMarker(new google.maps.LatLng(parseFloat(t[o].getAttribute("lat")),parseFloat(t[o].getAttribute("lng"))),n,p,m,r,o,s,l);if(a[i]=c,ylatitud=parseFloat(t[o].getAttribute("lat")),xlongitude=parseFloat(t[o].getAttribute("lng")),-1==top_map)top_map=ylatitud,bottom_map=ylatitud,left_map=xlongitude,right_map=xlongitude;if(top_map>ylatitud)top_map=ylatitud;if(bottom_map<ylatitud)bottom_map=ylatitud;if(left_map>xlongitude)left_map=xlongitude;if(right_map<xlongitude)right_map=xlongitude;i++}if(boundSW=new google.maps.LatLng(bottom_map,left_map),boundNE=new google.maps.LatLng(top_map,right_map),bounds=new google.maps.LatLngBounds(boundSW,boundNE),map.fitBounds(afinarZoom(bounds)),map.getZoom()>parseInt(globals.Request_Map_Zoom_Max))map.setZoom(parseInt(globals.Request_Map_Zoom_Max));addMarkers(a,0),document.LoadedMarkers=a}function afinarZoom(e){var o=e.getSouthWest(),t=e.getNorthEast(),a=o.lat(),i=o.lng(),n=t.lat(),p=t.lng(),m=(i-p)/2,r=(a-n)/2,s=(i+p)/2,l=(a+n)/2;return i=s+m/1,p=s-m/1,a=l+r/1,n=l-r/1,o=new google.maps.LatLng(a,i),t=new google.maps.LatLng(n,p),new google.maps.LatLngBounds(o,t)}function addMarkers(e,o,t){var a=o,i=!1,n=Math.min(o+10,e.length);if(t<5&&200<o)i=!0;else if(t<8&&400<o)i=!0;if(!i){for(o=a;o<n;o++)e[o].setMap(map);if(o<e.length)setTimeout(function(){addMarkers(e,o,t)},0)}}function createMarker(e,o,t,a,i,n,p,m){var r;if("0"==p)r={position:e,map:map,zIndex:1,icon:mapIcons2[17],tooltip:m};else if("-1"==p)r={position:e,map:map,zIndex:0,icon:mapIcons2[18],tooltip:m};else if("-2"==p)r={position:e,map:map,zIndex:0,icon:mapIcons2[19],tooltip:m};else r={position:e,map:map,zIndex:9999999999,icon:mapIcons2[p],tooltip:m};var s=new google.maps.Marker(r);return s.idEmpresa=t,s.idEscaparate=a,s.idSector=i,s.Nombre=o,s.tooltip='<div class="tooltip"><nobr>'+m+"</nobr></div>",markers[n]=s,google.maps.event.addListener(s,"click",function(){showMarker(s)}),google.maps.event.addListener(s,"mouseover",function(){showTooltip(s)}),google.maps.event.addListener(s,"mouseout",function(){tooltip.style.visibility="hidden"}),s}function showMarker(e,o){if(null!==e)LoadEmpMarker(e,o)}function showMarkerEvento(e){if(null!=document.getElementById("esl_"+e.idEmpresa))obj=document.getElementById("esl_"+e.idEmpresa),leh(obj);LoadEmpMarkerEvento(e)}function LoadEmpMarker(e,o){var t=document.getElementById("map"),a="/list-LoadMarker.php?idEscaparate="+e.idEscaparate+"&id_empresa="+e.idEmpresa;if(void 0!==o)a=a+"&idDireccion="+o;gmaps_openLayerFunc(a,"capaListEmp",t,e)}function gmaps_openLayerFunc(e,c,d,g){$("#"+c).remove();var u=map.centeredMode,t=document.createElement("div");t.setAttribute("id",c),t.style.display="none",d.appendChild(t);function a(e){if(0!=e)e=!0;var o=document.getElementById(c);if(null!==o){o.style.visibility="hidden",o.style.display="";var t,a,i=gmaps_getPositionByMarker(g),n=d.offsetWidth,p=(d.offsetHeight,g.getIcon()),m=o.offsetHeight+20;if(void 0===p.size)p.size={width:29,height:29};if(u)if(9==p.size.width)t=-2,a=-4;else t=-2,a=6;else t=Math.round(p.size.width/2),a=Math.round(p.size.height);var r=0,s=0;if(!e){if(i.x-125<10)r=Math.round(i.x-125)-20;if(i.y-m<40)s=Math.round(i.y-m)-40;if(i.x+125+10>n)r=Math.round(125-(n-i.x))+10;var l=!1;if(0!==r||0!==s)l=!0,map.panBy(r,s),o.style.display="none"}if(30<=p.size.width&&!u)r-=10;if(o.style.top=i.y-s-m-a+"px",o.style.left=i.x-r-Math.round(125)-t+(u?0:15)+"px",o.style.zIndex=10,o.style.position="absolute",!l)o.style.visibility="visible"}}google.maps.event.clearListeners(map,"drag"),google.maps.event.clearListeners(map,"idle"),google.maps.event.addListener(map,"drag",a),google.maps.event.addListener(map,"idle",a),$.ajax({url:e,success:function(e){$(t).html(e);var o=$("#"+c);t.onclick=function(e){if(void 0!==e&&"layer-map"==e.target.className)o.remove()},a(!1)}})}function gmaps_openSmallLayerFunc(e,s,l,c){$("#"+s).remove();var t=document.createElement("div");t.setAttribute("id",s),t.style.display="none",$(t).appendTo("body");function a(){var e,o;e=l.offsetLeft,o=l.offsetTop;var t=document.getElementById(s);if(null!==t){t.style.visibility="hidden",t.style.display="";var a=gmaps_getPositionByMarker(c),i=l.offsetWidth,n=l.offsetHeight,p=c.getIcon(),m=Math.round(p.size.width/2),r=Math.round(p.size.height/2);if(!(a.x<0||a.x>i||a.y<0||a.y>n)){if(30<=p.size.width)m=Math.round(p.size.width/4),r=Math.round(3*p.size.height/4);t.style.top=a.y+o-135-r+"px",t.style.left=a.x+e-Math.round(135)-m+"px",t.style.zIndex=10,t.style.position="absolute",t.style.display="",t.style.visibility="visible"}else t.style.display="none"}}google.maps.event.clearListeners(map,"drag"),google.maps.event.clearListeners(map,"idle"),google.maps.event.addListener(map,"drag",a),google.maps.event.addListener(map,"idle",a),$.ajax({url:e,success:function(e){$(t).html(e);var o=$("#"+s);t.onclick=function(e){if(void 0!==e&&"layer-map"==e.target.className)o.remove()},a()}})}function gmaps_getPositionByMarker(e){var o=Math.pow(2,map.getZoom()),t=new google.maps.LatLng(map.getBounds().getNorthEast().lat(),map.getBounds().getSouthWest().lng()),a=map.getProjection().fromLatLngToPoint(t),i=map.getProjection().fromLatLngToPoint(e.getPosition());return new google.maps.Point(Math.floor((i.x-a.x)*o),Math.floor((i.y-a.y)*o))}function LoadEmpMarkerEvento(e){if(0==e.propia)window.location="/emp-ShowEvento.php?id_empresa="+e.idEmpresa+"&id_evento="+e.idEvento;else if(1==e.propia)window.location="/eventos-Show.php?id_evento="+e.idEvento}function closeEmpMarker(e){e.className=""}function GShow(e,o,t,a,i){var n;if(null==i)n=document.frmEmpresa;else n=document.getElementById(i);GLoadMap();var p=new google.maps.LatLng(o,t),m={center:p,zoom:a,mapTypeId:google.maps.MapTypeId.ROADMAP};map.setOptions(m),marker=new google.maps.Marker({position:p,map:map,draggable:!0}),google.maps.event.addListener(marker,"dragend",function(){n.latitud.value=marker.getPosition().lat(),n.longitud.value=marker.getPosition().lng()});var r=new google.maps.InfoWindow;google.maps.event.addListener(marker,"click",function(){r.setContent(e),r.open(map,marker)})}function showDireccionSuggest(e){if("select"===e.Pais.type)showAddress(e,e.Direccion.value,e.txtStrPoblacion.value," ","",e.Pais.options[e.Pais.selectedIndex].text);else showAddress(e,e.Direccion.value,e.txtStrPoblacion.value," ","",e.Pais.value)}function showDireccionSuggestEvento(e){showAddressEvento(e,e.Direccion.value,e.txtStrPoblacion.value," ","",globals.REQUEST_COUNTRY)}function showDireccion(){if(-1!=document.frmEmpresa.Provincia.options[document.frmEmpresa.Provincia.selectedIndex].value&&-1!=document.frmEmpresa.Poblacion.options[document.frmEmpresa.Poblacion.selectedIndex].value)showAddress(document.frmEmpresa,document.frmEmpresa.Direccion.value,document.frmEmpresa.Poblacion.options[document.frmEmpresa.Poblacion.selectedIndex].text,document.frmEmpresa.Provincia.options[document.frmEmpresa.Provincia.selectedIndex].text,document.frmEmpresa.Pais.options[document.frmEmpresa.Pais.selectedIndex].text,"")}function showDireccionEmp(){if(-1!=document.frmEmpresa.Provincia.options[document.frmEmpresa.Provincia.selectedIndex].value&&-1!=document.frmEmpresa.Poblacion.options[document.frmEmpresa.Poblacion.selectedIndex].value)showAddress(document.frmEmpresa,document.frmEmpresa.Direccion.value,document.frmEmpresa.Poblacion.options[document.frmEmpresa.Poblacion.selectedIndex].text,document.frmEmpresa.Provincia.options[document.frmEmpresa.Provincia.selectedIndex].text,document.frmEmpresa.Pais.options[document.frmEmpresa.Pais.selectedIndex].text,"")}function showDireccionSuggestDirecciones(e){showAddressDirecciones(e,e.address1.value,e.txtStrPoblacion.value,$(e).find("select[name=country] option:selected").text())}function showAddressDirecciones(e,o,t,a){if(direccionCompletatmp="",GLoadMap(),""!==o)direccionCompletatmp=direccionCompletatmp.concat(o);if(""!==t)direccionCompletatmp=direccionCompletatmp.concat(","),direccionCompletatmp=direccionCompletatmp.concat(t);if(""!==a)direccionCompletatmp=direccionCompletatmp.concat(","),direccionCompletatmp=direccionCompletatmp.concat(a);console.log(direccionCompletatmp),Geolocalizacion(direccionCompletatmp,e)}function showAddress(e,o,t,a,i,n){if(direccionCompletatmp="",GLoadMap(),""!==o)direccionCompletatmp=direccionCompletatmp.concat(o);if(""!==t)direccionCompletatmp=direccionCompletatmp.concat(","),direccionCompletatmp=direccionCompletatmp.concat(t);if(""!==a)direccionCompletatmp=direccionCompletatmp.concat(","),direccionCompletatmp=direccionCompletatmp.concat(a);if(""!==i)direccionCompletatmp=direccionCompletatmp.concat(","),direccionCompletatmp=direccionCompletatmp.concat(i);if(""!==n)direccionCompletatmp=direccionCompletatmp.concat(","),direccionCompletatmp=direccionCompletatmp.concat(n);Geolocalizacion(direccionCompletatmp,e)}function showAddressEvento(e,o,t,a,n,p){if(direccionCompletatmp="",GLoadMap(),""!==o){for(i=0;i<o.length;i++)if(c=o.charAt(i),"0"<=c&&c<="9"||","==c){indiceNumero=i;break}direccion_limpia=o.substr(0,i),direccionCompletatmp=direccionCompletatmp.concat(direccion_limpia)}if(""!==t)direccionCompletatmp=direccionCompletatmp.concat(","),direccionCompletatmp=direccionCompletatmp.concat(t);if(""!==a)direccionCompletatmp=direccionCompletatmp.concat(","),direccionCompletatmp=direccionCompletatmp.concat(a);if(""!==n)direccionCompletatmp=direccionCompletatmp.concat(","),direccionCompletatmp=direccionCompletatmp.concat(n);if(""!==p)direccionCompletatmp=direccionCompletatmp.concat(","),direccionCompletatmp=direccionCompletatmp.concat(p);Geolocalizacion(direccionCompletatmp,e)}function Geolocalizacion(a,i){var e={address:a};(new google.maps.Geocoder).geocode(e,function(e,o){if(o==google.maps.GeocoderStatus.OK){if(map.setCenter(e[0].geometry.location,10),marker&&marker.setMap)marker.setMap(null);if(marker=new google.maps.Marker({position:e[0].geometry.location}),GShow(a,marker.getPosition().lat(),marker.getPosition().lng(),16,i.name),null!=i.countryCode&&null!=e[0])for(var t=0;t<e[0].address_components.length;t++)if(address_component=e[0].address_components[t],"country"==address_component.types[0])i.countryCode.value=address_component.short_name;i.latitud.value=marker.getPosition().lat(),i.longitud.value=marker.getPosition().lng()}else alert(a+" "+'not found')})}function LoadPoblaciones(){ajaxpage("/utils-ShowLoading.php","BuscarPoblacion"),ajaxpage("/emp-LoadPoblaciones.php?id_provincia="+document.frmEmpresa.Provincia.value+"&cod_postal="+document.frmEmpresa.CodigoPostal.value,"BuscarPoblacion")}function LoadProvinciasCom(e){if(ajaxpage("/utils-ShowLoading.php","BuscarPoblacion"),1)ajaxpage("/emp-LoadProvincias.php?id_pais="+document.frmComunidad.Pais.value+"&id_prov="+e,"BuscarProvincia");else ajaxpage("/emp-LoadProvincias.php?id_pais="+document.frmComunidad.Pais.value,"BuscarProvincia")}function LoadPoblacionesCom(){ajaxpage("/utils-ShowLoading.php","BuscarPoblacion"),ajaxpage("/emp-LoadPoblaciones.php?id_provincia="+document.frmComunidad.Provincia.value+"&cod_postal="+document.frmComunidad.CodigoPostal.value,"BuscarPoblacion")}function is_array(e){return"object"==typeof e&&e instanceof Array}function GLoadSite(e){if(!is_array(marker))marker=new Array;GLoad(e)}function GShowSite(e,o,t,a,i,n){GLoadSite(e);var p=new google.maps.LatLng(t,a),m={center:p,zoom:i,mapTypeId:google.maps.MapTypeId.ROADMAP,mapTypeControl:!1};map.setOptions(m),marker[n]=new google.maps.Marker({position:p,map:map,draggable:!0});var r=new google.maps.InfoWindow;google.maps.event.addListener(marker[n],"click",function(){r.setContent(o),r.open(map,marker[n])})}function GShowSiteWebsite(e,o,t,a){GLoadSite(e);var i=new google.maps.LatLng(o,t),n={center:i,zoom:a,mapTypeId:google.maps.MapTypeId.ROADMAP,mapTypeControl:!1};map.setOptions(n);var p=new google.maps.MarkerImage(globals.subdomain_cdn_css+"/assets/img/maps/bg_marker.png",null,null,null,new google.maps.Size(29,29));new google.maps.Marker({position:i,map:map,icon:p,draggable:!0})}function GShowEvento(e,o,t,a){GLoad("map");var i=new google.maps.LatLng(o,t),n={center:i,zoom:a,mapTypeId:google.maps.MapTypeId.ROADMAP};map.setOptions(n),marker=new google.maps.Marker({position:i,map:map,draggable:!0});var p=new google.maps.InfoWindow;google.maps.event.addListener(marker,"dragend",function(){document.formEventos.latitud.value=marker.getPosition().lat(),document.formEventos.longitud.value=marker.getPosition().lng()}),google.maps.event.addListener(marker,"click",function(){p.setContent(e),p.open(map,marker)})}function GShowMX(e,o,t,a){GLoad(e);var i=new google.maps.LatLng(o,t),n={center:i,zoom:a,mapTypeId:google.maps.MapTypeId.ROADMAP};map.setOptions(n),marker=new google.maps.Marker({position:i,map:map,draggable:!0})}function GShowQuienesSomos(e,o,t,a){GLoadMap();var i=new google.maps.LatLng(o,t),n={center:i,zoom:a,mapTypeId:google.maps.MapTypeId.ROADMAP,disableDefaultUI:!0};map.setOptions(n);var p=new google.maps.MarkerImage(globals.subdomain_cdn_css+"/assets/img/maps/bg_marker.png",null,null,null,new google.maps.Size(29,29)),m=new google.maps.Marker({position:i,map:map,icon:p}),r=new google.maps.InfoWindow;google.maps.event.addListener(m,"click",function(){r.setContent(e),r.open(map,m)})}function gmaps_showEmpLayerStaticMap(e,t){$.ajax({url:"/list-LoadMarker.php?id_empresa="+e+"&layout=storefront",success:function(e){$("#capaListEmp").remove();var o=$("<div/>",{id:"capaListEmp"});o.html(e),o.prependTo(t),o.show()}})}function initializeStaticGmapOnDemand(e,o){var t,a=$("#"+e),i=a.position().top-a.height()-$(window).height();a.css({height:"auto"});var n=function(){if(null==t)t=window.setTimeout(function(){if(Math.round(i-$(window).scrollTop())<400){if(window.clearTimeout(t),window.removeEventListener("scroll",n),initializeStaticGmap(),null!=o)o()}else window.clearTimeout(t),t=null},100)};window.addEventListener("scroll",n,!1),n()}function initializeStaticGmap(){object=document.getElementById("staticmap"),object.src=object.getAttribute("data-src")}/**
 * Swiper 4.2.6
 * Most modern mobile touch slider and framework with hardware accelerated transitions
 * http://www.idangero.us/swiper/
 *
 * Copyright 2014-2018 Vladimir Kharlampidi
 *
 * Released under the MIT License
 *
 * Released on: May 1, 2018
 */

(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :
  typeof define === 'function' && define.amd ? define(factory) :
  (global.Swiper = factory());
}(this, (function () { 'use strict';

  /**
   * SSR Window 1.0.0
   * Better handling for window object in SSR environment
   * https://github.com/nolimits4web/ssr-window
   *
   * Copyright 2018, Vladimir Kharlampidi
   *
   * Licensed under MIT
   *
   * Released on: February 10, 2018
   */
  var d;
  if (typeof document === 'undefined') {
    d = {
      body: {},
      addEventListener: function addEventListener() {},
      removeEventListener: function removeEventListener() {},
      activeElement: {
        blur: function blur() {},
        nodeName: '',
      },
      querySelector: function querySelector() {
        return null;
      },
      querySelectorAll: function querySelectorAll() {
        return [];
      },
      getElementById: function getElementById() {
        return null;
      },
      createEvent: function createEvent() {
        return {
          initEvent: function initEvent() {},
        };
      },
      createElement: function createElement() {
        return {
          children: [],
          childNodes: [],
          style: {},
          setAttribute: function setAttribute() {},
          getElementsByTagName: function getElementsByTagName() {
            return [];
          },
        };
      },
      location: { hash: '' },
    };
  } else {
    // eslint-disable-next-line
    d = document;
  }

  var doc = d;

  var w;
  if (typeof window === 'undefined') {
    w = {
      document: doc,
      navigator: {
        userAgent: '',
      },
      location: {},
      history: {},
      CustomEvent: function CustomEvent() {
        return this;
      },
      addEventListener: function addEventListener() {},
      removeEventListener: function removeEventListener() {},
      getComputedStyle: function getComputedStyle() {
        return {
          getPropertyValue: function getPropertyValue() {
            return '';
          },
        };
      },
      Image: function Image() {},
      Date: function Date() {},
      screen: {},
      setTimeout: function setTimeout() {},
      clearTimeout: function clearTimeout() {},
    };
  } else {
    // eslint-disable-next-line
    w = window;
  }

  var win = w;

  /**
   * Dom7 2.0.5
   * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API
   * http://framework7.io/docs/dom.html
   *
   * Copyright 2018, Vladimir Kharlampidi
   * The iDangero.us
   * http://www.idangero.us/
   *
   * Licensed under MIT
   *
   * Released on: April 20, 2018
   */

  var Dom7 = function Dom7(arr) {
    var self = this;
    // Create array-like object
    for (var i = 0; i < arr.length; i += 1) {
      self[i] = arr[i];
    }
    self.length = arr.length;
    // Return collection with methods
    return this;
  };

  function $(selector, context) {
    var arr = [];
    var i = 0;
    if (selector && !context) {
      if (selector instanceof Dom7) {
        return selector;
      }
    }
    if (selector) {
        // String
      if (typeof selector === 'string') {
        var els;
        var tempParent;
        var html = selector.trim();
        if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {
          var toCreate = 'div';
          if (html.indexOf('<li') === 0) { toCreate = 'ul'; }
          if (html.indexOf('<tr') === 0) { toCreate = 'tbody'; }
          if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) { toCreate = 'tr'; }
          if (html.indexOf('<tbody') === 0) { toCreate = 'table'; }
          if (html.indexOf('<option') === 0) { toCreate = 'select'; }
          tempParent = doc.createElement(toCreate);
          tempParent.innerHTML = html;
          for (i = 0; i < tempParent.childNodes.length; i += 1) {
            arr.push(tempParent.childNodes[i]);
          }
        } else {
          if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {
            // Pure ID selector
            els = [doc.getElementById(selector.trim().split('#')[1])];
          } else {
            // Other selectors
            els = (context || doc).querySelectorAll(selector.trim());
          }
          for (i = 0; i < els.length; i += 1) {
            if (els[i]) { arr.push(els[i]); }
          }
        }
      } else if (selector.nodeType || selector === win || selector === doc) {
        // Node/element
        arr.push(selector);
      } else if (selector.length > 0 && selector[0].nodeType) {
        // Array of elements or instance of Dom
        for (i = 0; i < selector.length; i += 1) {
          arr.push(selector[i]);
        }
      }
    }
    return new Dom7(arr);
  }

  $.fn = Dom7.prototype;
  $.Class = Dom7;
  $.Dom7 = Dom7;

  function unique(arr) {
    var uniqueArray = [];
    for (var i = 0; i < arr.length; i += 1) {
      if (uniqueArray.indexOf(arr[i]) === -1) { uniqueArray.push(arr[i]); }
    }
    return uniqueArray;
  }

  // Classes and attributes
  function addClass(className) {
    var this$1 = this;

    if (typeof className === 'undefined') {
      return this;
    }
    var classes = className.split(' ');
    for (var i = 0; i < classes.length; i += 1) {
      for (var j = 0; j < this.length; j += 1) {
        if (typeof this$1[j].classList !== 'undefined') { this$1[j].classList.add(classes[i]); }
      }
    }
    return this;
  }
  function removeClass(className) {
    var this$1 = this;

    var classes = className.split(' ');
    for (var i = 0; i < classes.length; i += 1) {
      for (var j = 0; j < this.length; j += 1) {
        if (typeof this$1[j].classList !== 'undefined') { this$1[j].classList.remove(classes[i]); }
      }
    }
    return this;
  }
  function hasClass(className) {
    if (!this[0]) { return false; }
    return this[0].classList.contains(className);
  }
  function toggleClass(className) {
    var this$1 = this;

    var classes = className.split(' ');
    for (var i = 0; i < classes.length; i += 1) {
      for (var j = 0; j < this.length; j += 1) {
        if (typeof this$1[j].classList !== 'undefined') { this$1[j].classList.toggle(classes[i]); }
      }
    }
    return this;
  }
  function attr(attrs, value) {
    var arguments$1 = arguments;
    var this$1 = this;

    if (arguments.length === 1 && typeof attrs === 'string') {
      // Get attr
      if (this[0]) { return this[0].getAttribute(attrs); }
      return undefined;
    }

    // Set attrs
    for (var i = 0; i < this.length; i += 1) {
      if (arguments$1.length === 2) {
        // String
        this$1[i].setAttribute(attrs, value);
      } else {
        // Object
        // eslint-disable-next-line
        for (var attrName in attrs) {
          this$1[i][attrName] = attrs[attrName];
          this$1[i].setAttribute(attrName, attrs[attrName]);
        }
      }
    }
    return this;
  }
  // eslint-disable-next-line
  function removeAttr(attr) {
    var this$1 = this;

    for (var i = 0; i < this.length; i += 1) {
      this$1[i].removeAttribute(attr);
    }
    return this;
  }
  function data(key, value) {
    var this$1 = this;

    var el;
    if (typeof value === 'undefined') {
      el = this[0];
      // Get value
      if (el) {
        if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {
          return el.dom7ElementDataStorage[key];
        }

        var dataKey = el.getAttribute(("data-" + key));
        if (dataKey) {
          return dataKey;
        }
        return undefined;
      }
      return undefined;
    }

    // Set value
    for (var i = 0; i < this.length; i += 1) {
      el = this$1[i];
      if (!el.dom7ElementDataStorage) { el.dom7ElementDataStorage = {}; }
      el.dom7ElementDataStorage[key] = value;
    }
    return this;
  }
  // Transforms
  // eslint-disable-next-line
  function transform(transform) {
    var this$1 = this;

    for (var i = 0; i < this.length; i += 1) {
      var elStyle = this$1[i].style;
      elStyle.webkitTransform = transform;
      elStyle.transform = transform;
    }
    return this;
  }
  function transition(duration) {
    var this$1 = this;

    if (typeof duration !== 'string') {
      duration = duration + "ms"; // eslint-disable-line
    }
    for (var i = 0; i < this.length; i += 1) {
      var elStyle = this$1[i].style;
      elStyle.webkitTransitionDuration = duration;
      elStyle.transitionDuration = duration;
    }
    return this;
  }
  // Events
  function on() {
    var this$1 = this;
    var assign;

    var args = [], len = arguments.length;
    while ( len-- ) args[ len ] = arguments[ len ];
    var eventType = args[0];
    var targetSelector = args[1];
    var listener = args[2];
    var capture = args[3];
    if (typeof args[1] === 'function') {
      (assign = args, eventType = assign[0], listener = assign[1], capture = assign[2]);
      targetSelector = undefined;
    }
    if (!capture) { capture = false; }

    function handleLiveEvent(e) {
      var target = e.target;
      if (!target) { return; }
      var eventData = e.target.dom7EventData || [];
      if (eventData.indexOf(e) < 0) {
        eventData.unshift(e);
      }
      if ($(target).is(targetSelector)) { listener.apply(target, eventData); }
      else {
        var parents = $(target).parents(); // eslint-disable-line
        for (var k = 0; k < parents.length; k += 1) {
          if ($(parents[k]).is(targetSelector)) { listener.apply(parents[k], eventData); }
        }
      }
    }
    function handleEvent(e) {
      var eventData = e && e.target ? e.target.dom7EventData || [] : [];
      if (eventData.indexOf(e) < 0) {
        eventData.unshift(e);
      }
      listener.apply(this, eventData);
    }
    var events = eventType.split(' ');
    var j;
    for (var i = 0; i < this.length; i += 1) {
      var el = this$1[i];
      if (!targetSelector) {
        for (j = 0; j < events.length; j += 1) {
          var event = events[j];
          if (!el.dom7Listeners) { el.dom7Listeners = {}; }
          if (!el.dom7Listeners[event]) { el.dom7Listeners[event] = []; }
          el.dom7Listeners[event].push({
            listener: listener,
            proxyListener: handleEvent,
          });
          el.addEventListener(event, handleEvent, capture);
        }
      } else {
        // Live events
        for (j = 0; j < events.length; j += 1) {
          var event$1 = events[j];
          if (!el.dom7LiveListeners) { el.dom7LiveListeners = {}; }
          if (!el.dom7LiveListeners[event$1]) { el.dom7LiveListeners[event$1] = []; }
          el.dom7LiveListeners[event$1].push({
            listener: listener,
            proxyListener: handleLiveEvent,
          });
          el.addEventListener(event$1, handleLiveEvent, capture);
        }
      }
    }
    return this;
  }
  function off() {
    var this$1 = this;
    var assign;

    var args = [], len = arguments.length;
    while ( len-- ) args[ len ] = arguments[ len ];
    var eventType = args[0];
    var targetSelector = args[1];
    var listener = args[2];
    var capture = args[3];
    if (typeof args[1] === 'function') {
      (assign = args, eventType = assign[0], listener = assign[1], capture = assign[2]);
      targetSelector = undefined;
    }
    if (!capture) { capture = false; }

    var events = eventType.split(' ');
    for (var i = 0; i < events.length; i += 1) {
      var event = events[i];
      for (var j = 0; j < this.length; j += 1) {
        var el = this$1[j];
        var handlers = (void 0);
        if (!targetSelector && el.dom7Listeners) {
          handlers = el.dom7Listeners[event];
        } else if (targetSelector && el.dom7LiveListeners) {
          handlers = el.dom7LiveListeners[event];
        }
        for (var k = handlers.length - 1; k >= 0; k -= 1) {
          var handler = handlers[k];
          if (listener && handler.listener === listener) {
            el.removeEventListener(event, handler.proxyListener, capture);
            handlers.splice(k, 1);
          } else if (!listener) {
            el.removeEventListener(event, handler.proxyListener, capture);
            handlers.splice(k, 1);
          }
        }
      }
    }
    return this;
  }
  function trigger() {
    var this$1 = this;
    var args = [], len = arguments.length;
    while ( len-- ) args[ len ] = arguments[ len ];

    var events = args[0].split(' ');
    var eventData = args[1];
    for (var i = 0; i < events.length; i += 1) {
      var event = events[i];
      for (var j = 0; j < this.length; j += 1) {
        var el = this$1[j];
        var evt = (void 0);
        try {
          evt = new win.CustomEvent(event, {
            detail: eventData,
            bubbles: true,
            cancelable: true,
          });
        } catch (e) {
          evt = doc.createEvent('Event');
          evt.initEvent(event, true, true);
          evt.detail = eventData;
        }
        // eslint-disable-next-line
        el.dom7EventData = args.filter(function (data, dataIndex) { return dataIndex > 0; });
        el.dispatchEvent(evt);
        el.dom7EventData = [];
        delete el.dom7EventData;
      }
    }
    return this;
  }
  function transitionEnd(callback) {
    var events = ['webkitTransitionEnd', 'transitionend'];
    var dom = this;
    var i;
    function fireCallBack(e) {
      /* jshint validthis:true */
      if (e.target !== this) { return; }
      callback.call(this, e);
      for (i = 0; i < events.length; i += 1) {
        dom.off(events[i], fireCallBack);
      }
    }
    if (callback) {
      for (i = 0; i < events.length; i += 1) {
        dom.on(events[i], fireCallBack);
      }
    }
    return this;
  }
  function outerWidth(includeMargins) {
    if (this.length > 0) {
      if (includeMargins) {
        // eslint-disable-next-line
        var styles = this.styles();
        return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));
      }
      return this[0].offsetWidth;
    }
    return null;
  }
  function outerHeight(includeMargins) {
    if (this.length > 0) {
      if (includeMargins) {
        // eslint-disable-next-line
        var styles = this.styles();
        return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));
      }
      return this[0].offsetHeight;
    }
    return null;
  }
  function offset() {
    if (this.length > 0) {
      var el = this[0];
      var box = el.getBoundingClientRect();
      var body = doc.body;
      var clientTop = el.clientTop || body.clientTop || 0;
      var clientLeft = el.clientLeft || body.clientLeft || 0;
      var scrollTop = el === win ? win.scrollY : el.scrollTop;
      var scrollLeft = el === win ? win.scrollX : el.scrollLeft;
      return {
        top: (box.top + scrollTop) - clientTop,
        left: (box.left + scrollLeft) - clientLeft,
      };
    }

    return null;
  }
  function styles() {
    if (this[0]) { return win.getComputedStyle(this[0], null); }
    return {};
  }
  function css(props, value) {
    var this$1 = this;

    var i;
    if (arguments.length === 1) {
      if (typeof props === 'string') {
        if (this[0]) { return win.getComputedStyle(this[0], null).getPropertyValue(props); }
      } else {
        for (i = 0; i < this.length; i += 1) {
          // eslint-disable-next-line
          for (var prop in props) {
            this$1[i].style[prop] = props[prop];
          }
        }
        return this;
      }
    }
    if (arguments.length === 2 && typeof props === 'string') {
      for (i = 0; i < this.length; i += 1) {
        this$1[i].style[props] = value;
      }
      return this;
    }
    return this;
  }
  // Iterate over the collection passing elements to `callback`
  function each(callback) {
    var this$1 = this;

    // Don't bother continuing without a callback
    if (!callback) { return this; }
    // Iterate over the current collection
    for (var i = 0; i < this.length; i += 1) {
      // If the callback returns false
      if (callback.call(this$1[i], i, this$1[i]) === false) {
        // End the loop early
        return this$1;
      }
    }
    // Return `this` to allow chained DOM operations
    return this;
  }
  // eslint-disable-next-line
  function html(html) {
    var this$1 = this;

    if (typeof html === 'undefined') {
      return this[0] ? this[0].innerHTML : undefined;
    }

    for (var i = 0; i < this.length; i += 1) {
      this$1[i].innerHTML = html;
    }
    return this;
  }
  // eslint-disable-next-line
  function text(text) {
    var this$1 = this;

    if (typeof text === 'undefined') {
      if (this[0]) {
        return this[0].textContent.trim();
      }
      return null;
    }

    for (var i = 0; i < this.length; i += 1) {
      this$1[i].textContent = text;
    }
    return this;
  }
  function is(selector) {
    var el = this[0];
    var compareWith;
    var i;
    if (!el || typeof selector === 'undefined') { return false; }
    if (typeof selector === 'string') {
      if (el.matches) { return el.matches(selector); }
      else if (el.webkitMatchesSelector) { return el.webkitMatchesSelector(selector); }
      else if (el.msMatchesSelector) { return el.msMatchesSelector(selector); }

      compareWith = $(selector);
      for (i = 0; i < compareWith.length; i += 1) {
        if (compareWith[i] === el) { return true; }
      }
      return false;
    } else if (selector === doc) { return el === doc; }
    else if (selector === win) { return el === win; }

    if (selector.nodeType || selector instanceof Dom7) {
      compareWith = selector.nodeType ? [selector] : selector;
      for (i = 0; i < compareWith.length; i += 1) {
        if (compareWith[i] === el) { return true; }
      }
      return false;
    }
    return false;
  }
  function index() {
    var child = this[0];
    var i;
    if (child) {
      i = 0;
      // eslint-disable-next-line
      while ((child = child.previousSibling) !== null) {
        if (child.nodeType === 1) { i += 1; }
      }
      return i;
    }
    return undefined;
  }
  // eslint-disable-next-line
  function eq(index) {
    if (typeof index === 'undefined') { return this; }
    var length = this.length;
    var returnIndex;
    if (index > length - 1) {
      return new Dom7([]);
    }
    if (index < 0) {
      returnIndex = length + index;
      if (returnIndex < 0) { return new Dom7([]); }
      return new Dom7([this[returnIndex]]);
    }
    return new Dom7([this[index]]);
  }
  function append() {
    var this$1 = this;
    var args = [], len = arguments.length;
    while ( len-- ) args[ len ] = arguments[ len ];

    var newChild;

    for (var k = 0; k < args.length; k += 1) {
      newChild = args[k];
      for (var i = 0; i < this.length; i += 1) {
        if (typeof newChild === 'string') {
          var tempDiv = doc.createElement('div');
          tempDiv.innerHTML = newChild;
          while (tempDiv.firstChild) {
            this$1[i].appendChild(tempDiv.firstChild);
          }
        } else if (newChild instanceof Dom7) {
          for (var j = 0; j < newChild.length; j += 1) {
            this$1[i].appendChild(newChild[j]);
          }
        } else {
          this$1[i].appendChild(newChild);
        }
      }
    }

    return this;
  }
  function prepend(newChild) {
    var this$1 = this;

    var i;
    var j;
    for (i = 0; i < this.length; i += 1) {
      if (typeof newChild === 'string') {
        var tempDiv = doc.createElement('div');
        tempDiv.innerHTML = newChild;
        for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {
          this$1[i].insertBefore(tempDiv.childNodes[j], this$1[i].childNodes[0]);
        }
      } else if (newChild instanceof Dom7) {
        for (j = 0; j < newChild.length; j += 1) {
          this$1[i].insertBefore(newChild[j], this$1[i].childNodes[0]);
        }
      } else {
        this$1[i].insertBefore(newChild, this$1[i].childNodes[0]);
      }
    }
    return this;
  }
  function next(selector) {
    if (this.length > 0) {
      if (selector) {
        if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {
          return new Dom7([this[0].nextElementSibling]);
        }
        return new Dom7([]);
      }

      if (this[0].nextElementSibling) { return new Dom7([this[0].nextElementSibling]); }
      return new Dom7([]);
    }
    return new Dom7([]);
  }
  function nextAll(selector) {
    var nextEls = [];
    var el = this[0];
    if (!el) { return new Dom7([]); }
    while (el.nextElementSibling) {
      var next = el.nextElementSibling; // eslint-disable-line
      if (selector) {
        if ($(next).is(selector)) { nextEls.push(next); }
      } else { nextEls.push(next); }
      el = next;
    }
    return new Dom7(nextEls);
  }
  function prev(selector) {
    if (this.length > 0) {
      var el = this[0];
      if (selector) {
        if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {
          return new Dom7([el.previousElementSibling]);
        }
        return new Dom7([]);
      }

      if (el.previousElementSibling) { return new Dom7([el.previousElementSibling]); }
      return new Dom7([]);
    }
    return new Dom7([]);
  }
  function prevAll(selector) {
    var prevEls = [];
    var el = this[0];
    if (!el) { return new Dom7([]); }
    while (el.previousElementSibling) {
      var prev = el.previousElementSibling; // eslint-disable-line
      if (selector) {
        if ($(prev).is(selector)) { prevEls.push(prev); }
      } else { prevEls.push(prev); }
      el = prev;
    }
    return new Dom7(prevEls);
  }
  function parent(selector) {
    var this$1 = this;

    var parents = []; // eslint-disable-line
    for (var i = 0; i < this.length; i += 1) {
      if (this$1[i].parentNode !== null) {
        if (selector) {
          if ($(this$1[i].parentNode).is(selector)) { parents.push(this$1[i].parentNode); }
        } else {
          parents.push(this$1[i].parentNode);
        }
      }
    }
    return $(unique(parents));
  }
  function parents(selector) {
    var this$1 = this;

    var parents = []; // eslint-disable-line
    for (var i = 0; i < this.length; i += 1) {
      var parent = this$1[i].parentNode; // eslint-disable-line
      while (parent) {
        if (selector) {
          if ($(parent).is(selector)) { parents.push(parent); }
        } else {
          parents.push(parent);
        }
        parent = parent.parentNode;
      }
    }
    return $(unique(parents));
  }
  function closest(selector) {
    var closest = this; // eslint-disable-line
    if (typeof selector === 'undefined') {
      return new Dom7([]);
    }
    if (!closest.is(selector)) {
      closest = closest.parents(selector).eq(0);
    }
    return closest;
  }
  function find(selector) {
    var this$1 = this;

    var foundElements = [];
    for (var i = 0; i < this.length; i += 1) {
      var found = this$1[i].querySelectorAll(selector);
      for (var j = 0; j < found.length; j += 1) {
        foundElements.push(found[j]);
      }
    }
    return new Dom7(foundElements);
  }
  function children(selector) {
    var this$1 = this;

    var children = []; // eslint-disable-line
    for (var i = 0; i < this.length; i += 1) {
      var childNodes = this$1[i].childNodes;

      for (var j = 0; j < childNodes.length; j += 1) {
        if (!selector) {
          if (childNodes[j].nodeType === 1) { children.push(childNodes[j]); }
        } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {
          children.push(childNodes[j]);
        }
      }
    }
    return new Dom7(unique(children));
  }
  function remove() {
    var this$1 = this;

    for (var i = 0; i < this.length; i += 1) {
      if (this$1[i].parentNode) { this$1[i].parentNode.removeChild(this$1[i]); }
    }
    return this;
  }
  function add() {
    var args = [], len = arguments.length;
    while ( len-- ) args[ len ] = arguments[ len ];

    var dom = this;
    var i;
    var j;
    for (i = 0; i < args.length; i += 1) {
      var toAdd = $(args[i]);
      for (j = 0; j < toAdd.length; j += 1) {
        dom[dom.length] = toAdd[j];
        dom.length += 1;
      }
    }
    return dom;
  }

  var Methods = {
    addClass: addClass,
    removeClass: removeClass,
    hasClass: hasClass,
    toggleClass: toggleClass,
    attr: attr,
    removeAttr: removeAttr,
    data: data,
    transform: transform,
    transition: transition,
    on: on,
    off: off,
    trigger: trigger,
    transitionEnd: transitionEnd,
    outerWidth: outerWidth,
    outerHeight: outerHeight,
    offset: offset,
    css: css,
    each: each,
    html: html,
    text: text,
    is: is,
    index: index,
    eq: eq,
    append: append,
    prepend: prepend,
    next: next,
    nextAll: nextAll,
    prev: prev,
    prevAll: prevAll,
    parent: parent,
    parents: parents,
    closest: closest,
    find: find,
    children: children,
    remove: remove,
    add: add,
    styles: styles,
  };

  Object.keys(Methods).forEach(function (methodName) {
    $.fn[methodName] = Methods[methodName];
  });

  var Utils = {
    deleteProps: function deleteProps(obj) {
      var object = obj;
      Object.keys(object).forEach(function (key) {
        try {
          object[key] = null;
        } catch (e) {
          // no getter for object
        }
        try {
          delete object[key];
        } catch (e) {
          // something got wrong
        }
      });
    },
    nextTick: function nextTick(callback, delay) {
      if ( delay === void 0 ) delay = 0;

      return setTimeout(callback, delay);
    },
    now: function now() {
      return Date.now();
    },
    getTranslate: function getTranslate(el, axis) {
      if ( axis === void 0 ) axis = 'x';

      var matrix;
      var curTransform;
      var transformMatrix;

      var curStyle = win.getComputedStyle(el, null);

      if (win.WebKitCSSMatrix) {
        curTransform = curStyle.transform || curStyle.webkitTransform;
        if (curTransform.split(',').length > 6) {
          curTransform = curTransform.split(', ').map(function (a) { return a.replace(',', '.'); }).join(', ');
        }
        // Some old versions of Webkit choke when 'none' is passed; pass
        // empty string instead in this case
        transformMatrix = new win.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);
      } else {
        transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');
        matrix = transformMatrix.toString().split(',');
      }

      if (axis === 'x') {
        // Latest Chrome and webkits Fix
        if (win.WebKitCSSMatrix) { curTransform = transformMatrix.m41; }
        // Crazy IE10 Matrix
        else if (matrix.length === 16) { curTransform = parseFloat(matrix[12]); }
        // Normal Browsers
        else { curTransform = parseFloat(matrix[4]); }
      }
      if (axis === 'y') {
        // Latest Chrome and webkits Fix
        if (win.WebKitCSSMatrix) { curTransform = transformMatrix.m42; }
        // Crazy IE10 Matrix
        else if (matrix.length === 16) { curTransform = parseFloat(matrix[13]); }
        // Normal Browsers
        else { curTransform = parseFloat(matrix[5]); }
      }
      return curTransform || 0;
    },
    parseUrlQuery: function parseUrlQuery(url) {
      var query = {};
      var urlToParse = url || win.location.href;
      var i;
      var params;
      var param;
      var length;
      if (typeof urlToParse === 'string' && urlToParse.length) {
        urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\S*\?/, '') : '';
        params = urlToParse.split('&').filter(function (paramsPart) { return paramsPart !== ''; });
        length = params.length;

        for (i = 0; i < length; i += 1) {
          param = params[i].replace(/#\S+/g, '').split('=');
          query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';
        }
      }
      return query;
    },
    isObject: function isObject(o) {
      return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;
    },
    extend: function extend() {
      var args = [], len$1 = arguments.length;
      while ( len$1-- ) args[ len$1 ] = arguments[ len$1 ];

      var to = Object(args[0]);
      for (var i = 1; i < args.length; i += 1) {
        var nextSource = args[i];
        if (nextSource !== undefined && nextSource !== null) {
          var keysArray = Object.keys(Object(nextSource));
          for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {
            var nextKey = keysArray[nextIndex];
            var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);
            if (desc !== undefined && desc.enumerable) {
              if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {
                Utils.extend(to[nextKey], nextSource[nextKey]);
              } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {
                to[nextKey] = {};
                Utils.extend(to[nextKey], nextSource[nextKey]);
              } else {
                to[nextKey] = nextSource[nextKey];
              }
            }
          }
        }
      }
      return to;
    },
  };

  var Support = (function Support() {
    var testDiv = doc.createElement('div');
    return {
      touch: (win.Modernizr && win.Modernizr.touch === true) || (function checkTouch() {
        return !!(('ontouchstart' in win) || (win.DocumentTouch && doc instanceof win.DocumentTouch));
      }()),

      pointerEvents: !!(win.navigator.pointerEnabled || win.PointerEvent),
      prefixedPointerEvents: !!win.navigator.msPointerEnabled,

      transition: (function checkTransition() {
        var style = testDiv.style;
        return ('transition' in style || 'webkitTransition' in style || 'MozTransition' in style);
      }()),
      transforms3d: (win.Modernizr && win.Modernizr.csstransforms3d === true) || (function checkTransforms3d() {
        var style = testDiv.style;
        return ('webkitPerspective' in style || 'MozPerspective' in style || 'OPerspective' in style || 'MsPerspective' in style || 'perspective' in style);
      }()),

      flexbox: (function checkFlexbox() {
        var style = testDiv.style;
        var styles = ('alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient').split(' ');
        for (var i = 0; i < styles.length; i += 1) {
          if (styles[i] in style) { return true; }
        }
        return false;
      }()),

      observer: (function checkObserver() {
        return ('MutationObserver' in win || 'WebkitMutationObserver' in win);
      }()),

      passiveListener: (function checkPassiveListener() {
        var supportsPassive = false;
        try {
          var opts = Object.defineProperty({}, 'passive', {
            // eslint-disable-next-line
            get: function get() {
              supportsPassive = true;
            },
          });
          win.addEventListener('testPassiveListener', null, opts);
        } catch (e) {
          // No support
        }
        return supportsPassive;
      }()),

      gestures: (function checkGestures() {
        return 'ongesturestart' in win;
      }()),
    };
  }());

  var SwiperClass = function SwiperClass(params) {
    if ( params === void 0 ) params = {};

    var self = this;
    self.params = params;

    // Events
    self.eventsListeners = {};

    if (self.params && self.params.on) {
      Object.keys(self.params.on).forEach(function (eventName) {
        self.on(eventName, self.params.on[eventName]);
      });
    }
  };

  var staticAccessors = { components: { configurable: true } };
  SwiperClass.prototype.on = function on (events, handler, priority) {
    var self = this;
    if (typeof handler !== 'function') { return self; }
    var method = priority ? 'unshift' : 'push';
    events.split(' ').forEach(function (event) {
      if (!self.eventsListeners[event]) { self.eventsListeners[event] = []; }
      self.eventsListeners[event][method](handler);
    });
    return self;
  };
  SwiperClass.prototype.once = function once (events, handler, priority) {
    var self = this;
    if (typeof handler !== 'function') { return self; }
    function onceHandler() {
        var args = [], len = arguments.length;
        while ( len-- ) args[ len ] = arguments[ len ];

      handler.apply(self, args);
      self.off(events, onceHandler);
    }
    return self.on(events, onceHandler, priority);
  };
  SwiperClass.prototype.off = function off (events, handler) {
    var self = this;
    if (!self.eventsListeners) { return self; }
    events.split(' ').forEach(function (event) {
      if (typeof handler === 'undefined') {
        self.eventsListeners[event] = [];
      } else {
        self.eventsListeners[event].forEach(function (eventHandler, index) {
          if (eventHandler === handler) {
            self.eventsListeners[event].splice(index, 1);
          }
        });
      }
    });
    return self;
  };
  SwiperClass.prototype.emit = function emit () {
      var args = [], len = arguments.length;
      while ( len-- ) args[ len ] = arguments[ len ];

    var self = this;
    if (!self.eventsListeners) { return self; }
    var events;
    var data;
    var context;
    if (typeof args[0] === 'string' || Array.isArray(args[0])) {
      events = args[0];
      data = args.slice(1, args.length);
      context = self;
    } else {
      events = args[0].events;
      data = args[0].data;
      context = args[0].context || self;
    }
    var eventsArray = Array.isArray(events) ? events : events.split(' ');
    eventsArray.forEach(function (event) {
      if (self.eventsListeners && self.eventsListeners[event]) {
        var handlers = [];
        self.eventsListeners[event].forEach(function (eventHandler) {
          handlers.push(eventHandler);
        });
        handlers.forEach(function (eventHandler) {
          eventHandler.apply(context, data);
        });
      }
    });
    return self;
  };
  SwiperClass.prototype.useModulesParams = function useModulesParams (instanceParams) {
    var instance = this;
    if (!instance.modules) { return; }
    Object.keys(instance.modules).forEach(function (moduleName) {
      var module = instance.modules[moduleName];
      // Extend params
      if (module.params) {
        Utils.extend(instanceParams, module.params);
      }
    });
  };
  SwiperClass.prototype.useModules = function useModules (modulesParams) {
      if ( modulesParams === void 0 ) modulesParams = {};

    var instance = this;
    if (!instance.modules) { return; }
    Object.keys(instance.modules).forEach(function (moduleName) {
      var module = instance.modules[moduleName];
      var moduleParams = modulesParams[moduleName] || {};
      // Extend instance methods and props
      if (module.instance) {
        Object.keys(module.instance).forEach(function (modulePropName) {
          var moduleProp = module.instance[modulePropName];
          if (typeof moduleProp === 'function') {
            instance[modulePropName] = moduleProp.bind(instance);
          } else {
            instance[modulePropName] = moduleProp;
          }
        });
      }
      // Add event listeners
      if (module.on && instance.on) {
        Object.keys(module.on).forEach(function (moduleEventName) {
          instance.on(moduleEventName, module.on[moduleEventName]);
        });
      }

      // Module create callback
      if (module.create) {
        module.create.bind(instance)(moduleParams);
      }
    });
  };
  staticAccessors.components.set = function (components) {
    var Class = this;
    if (!Class.use) { return; }
    Class.use(components);
  };
  SwiperClass.installModule = function installModule (module) {
      var params = [], len = arguments.length - 1;
      while ( len-- > 0 ) params[ len ] = arguments[ len + 1 ];

    var Class = this;
    if (!Class.prototype.modules) { Class.prototype.modules = {}; }
    var name = module.name || (((Object.keys(Class.prototype.modules).length) + "_" + (Utils.now())));
    Class.prototype.modules[name] = module;
    // Prototype
    if (module.proto) {
      Object.keys(module.proto).forEach(function (key) {
        Class.prototype[key] = module.proto[key];
      });
    }
    // Class
    if (module.static) {
      Object.keys(module.static).forEach(function (key) {
        Class[key] = module.static[key];
      });
    }
    // Callback
    if (module.install) {
      module.install.apply(Class, params);
    }
    return Class;
  };
  SwiperClass.use = function use (module) {
      var params = [], len = arguments.length - 1;
      while ( len-- > 0 ) params[ len ] = arguments[ len + 1 ];

    var Class = this;
    if (Array.isArray(module)) {
      module.forEach(function (m) { return Class.installModule(m); });
      return Class;
    }
    return Class.installModule.apply(Class, [ module ].concat( params ));
  };

  Object.defineProperties( SwiperClass, staticAccessors );

  function updateSize () {
    var swiper = this;
    var width;
    var height;
    var $el = swiper.$el;
    if (typeof swiper.params.width !== 'undefined') {
      width = swiper.params.width;
    } else {
      width = $el[0].clientWidth;
    }
    if (typeof swiper.params.height !== 'undefined') {
      height = swiper.params.height;
    } else {
      height = $el[0].clientHeight;
    }
    if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {
      return;
    }

    // Subtract paddings
    width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);
    height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);

    Utils.extend(swiper, {
      width: width,
      height: height,
      size: swiper.isHorizontal() ? width : height,
    });
  }

  function updateSlides () {
    var swiper = this;
    var params = swiper.params;

    var $wrapperEl = swiper.$wrapperEl;
    var swiperSize = swiper.size;
    var rtl = swiper.rtlTranslate;
    var wrongRTL = swiper.wrongRTL;
    var slides = $wrapperEl.children(("." + (swiper.params.slideClass)));
    var isVirtual = swiper.virtual && params.virtual.enabled;
    var slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;
    var snapGrid = [];
    var slidesGrid = [];
    var slidesSizesGrid = [];

    var offsetBefore = params.slidesOffsetBefore;
    if (typeof offsetBefore === 'function') {
      offsetBefore = params.slidesOffsetBefore.call(swiper);
    }

    var offsetAfter = params.slidesOffsetAfter;
    if (typeof offsetAfter === 'function') {
      offsetAfter = params.slidesOffsetAfter.call(swiper);
    }

    var previousSlidesLength = slidesLength;
    var previousSnapGridLength = swiper.snapGrid.length;
    var previousSlidesGridLength = swiper.snapGrid.length;

    var spaceBetween = params.spaceBetween;
    var slidePosition = -offsetBefore;
    var prevSlideSize = 0;
    var index = 0;
    if (typeof swiperSize === 'undefined') {
      return;
    }
    if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {
      spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;
    }

    swiper.virtualSize = -spaceBetween;

    // reset margins
    if (rtl) { slides.css({ marginLeft: '', marginTop: '' }); }
    else { slides.css({ marginRight: '', marginBottom: '' }); }

    var slidesNumberEvenToRows;
    if (params.slidesPerColumn > 1) {
      if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {
        slidesNumberEvenToRows = slidesLength;
      } else {
        slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;
      }
      if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {
        slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);
      }
    }

    // Calc slides
    var slideSize;
    var slidesPerColumn = params.slidesPerColumn;
    var slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;
    var numFullColumns = slidesPerRow - ((params.slidesPerColumn * slidesPerRow) - slidesLength);
    for (var i = 0; i < slidesLength; i += 1) {
      slideSize = 0;
      var slide = slides.eq(i);
      if (params.slidesPerColumn > 1) {
        // Set slides order
        var newSlideOrderIndex = (void 0);
        var column = (void 0);
        var row = (void 0);
        if (params.slidesPerColumnFill === 'column') {
          column = Math.floor(i / slidesPerColumn);
          row = i - (column * slidesPerColumn);
          if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {
            row += 1;
            if (row >= slidesPerColumn) {
              row = 0;
              column += 1;
            }
          }
          newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);
          slide
            .css({
              '-webkit-box-ordinal-group': newSlideOrderIndex,
              '-moz-box-ordinal-group': newSlideOrderIndex,
              '-ms-flex-order': newSlideOrderIndex,
              '-webkit-order': newSlideOrderIndex,
              order: newSlideOrderIndex,
            });
        } else {
          row = Math.floor(i / slidesPerRow);
          column = i - (row * slidesPerRow);
        }
        slide
          .css(
            ("margin-" + (swiper.isHorizontal() ? 'top' : 'left')),
            (row !== 0 && params.spaceBetween) && (((params.spaceBetween) + "px"))
          )
          .attr('data-swiper-column', column)
          .attr('data-swiper-row', row);
      }
      if (slide.css('display') === 'none') { continue; } // eslint-disable-line

      if (params.slidesPerView === 'auto') {
        var slideStyles = win.getComputedStyle(slide[0], null);
        var currentTransform = slide[0].style.transform;
        if (currentTransform) {
          slide[0].style.transform = 'none';
        }
        if (swiper.isHorizontal()) {
          slideSize = slide[0].getBoundingClientRect().width +
            parseFloat(slideStyles.getPropertyValue('margin-left')) +
            parseFloat(slideStyles.getPropertyValue('margin-right'));
        } else {
          slideSize = slide[0].getBoundingClientRect().height +
            parseFloat(slideStyles.getPropertyValue('margin-top')) +
            parseFloat(slideStyles.getPropertyValue('margin-bottom'));
        }
        if (currentTransform) {
          slide[0].style.transform = currentTransform;
        }
        if (params.roundLengths) { slideSize = Math.floor(slideSize); }
      } else {
        slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;
        if (params.roundLengths) { slideSize = Math.floor(slideSize); }

        if (slides[i]) {
          if (swiper.isHorizontal()) {
            slides[i].style.width = slideSize + "px";
          } else {
            slides[i].style.height = slideSize + "px";
          }
        }
      }
      if (slides[i]) {
        slides[i].swiperSlideSize = slideSize;
      }
      slidesSizesGrid.push(slideSize);


      if (params.centeredSlides) {
        slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;
        if (prevSlideSize === 0 && i !== 0) { slidePosition = slidePosition - (swiperSize / 2) - spaceBetween; }
        if (i === 0) { slidePosition = slidePosition - (swiperSize / 2) - spaceBetween; }
        if (Math.abs(slidePosition) < 1 / 1000) { slidePosition = 0; }
        if ((index) % params.slidesPerGroup === 0) { snapGrid.push(slidePosition); }
        slidesGrid.push(slidePosition);
      } else {
        if ((index) % params.slidesPerGroup === 0) { snapGrid.push(slidePosition); }
        slidesGrid.push(slidePosition);
        slidePosition = slidePosition + slideSize + spaceBetween;
      }

      swiper.virtualSize += slideSize + spaceBetween;

      prevSlideSize = slideSize;

      index += 1;
    }
    swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;
    var newSlidesGrid;

    if (
      rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {
      $wrapperEl.css({ width: ((swiper.virtualSize + params.spaceBetween) + "px") });
    }
    if (!Support.flexbox || params.setWrapperSize) {
      if (swiper.isHorizontal()) { $wrapperEl.css({ width: ((swiper.virtualSize + params.spaceBetween) + "px") }); }
      else { $wrapperEl.css({ height: ((swiper.virtualSize + params.spaceBetween) + "px") }); }
    }

    if (params.slidesPerColumn > 1) {
      swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;
      swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;
      if (swiper.isHorizontal()) { $wrapperEl.css({ width: ((swiper.virtualSize + params.spaceBetween) + "px") }); }
      else { $wrapperEl.css({ height: ((swiper.virtualSize + params.spaceBetween) + "px") }); }
      if (params.centeredSlides) {
        newSlidesGrid = [];
        for (var i$1 = 0; i$1 < snapGrid.length; i$1 += 1) {
          if (snapGrid[i$1] < swiper.virtualSize + snapGrid[0]) { newSlidesGrid.push(snapGrid[i$1]); }
        }
        snapGrid = newSlidesGrid;
      }
    }

    // Remove last grid elements depending on width
    if (!params.centeredSlides) {
      newSlidesGrid = [];
      for (var i$2 = 0; i$2 < snapGrid.length; i$2 += 1) {
        if (snapGrid[i$2] <= swiper.virtualSize - swiperSize) {
          newSlidesGrid.push(snapGrid[i$2]);
        }
      }
      snapGrid = newSlidesGrid;
      if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {
        snapGrid.push(swiper.virtualSize - swiperSize);
      }
    }
    if (snapGrid.length === 0) { snapGrid = [0]; }

    if (params.spaceBetween !== 0) {
      if (swiper.isHorizontal()) {
        if (rtl) { slides.css({ marginLeft: (spaceBetween + "px") }); }
        else { slides.css({ marginRight: (spaceBetween + "px") }); }
      } else { slides.css({ marginBottom: (spaceBetween + "px") }); }
    }

    Utils.extend(swiper, {
      slides: slides,
      snapGrid: snapGrid,
      slidesGrid: slidesGrid,
      slidesSizesGrid: slidesSizesGrid,
    });

    if (slidesLength !== previousSlidesLength) {
      swiper.emit('slidesLengthChange');
    }
    if (snapGrid.length !== previousSnapGridLength) {
      if (swiper.params.watchOverflow) { swiper.checkOverflow(); }
      swiper.emit('snapGridLengthChange');
    }
    if (slidesGrid.length !== previousSlidesGridLength) {
      swiper.emit('slidesGridLengthChange');
    }

    if (params.watchSlidesProgress || params.watchSlidesVisibility) {
      swiper.updateSlidesOffset();
    }
  }

  function updateAutoHeight (speed) {
    var swiper = this;
    var activeSlides = [];
    var newHeight = 0;
    var i;
    if (typeof speed === 'number') {
      swiper.setTransition(speed);
    } else if (speed === true) {
      swiper.setTransition(swiper.params.speed);
    }
    // Find slides currently in view
    if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {
      for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {
        var index = swiper.activeIndex + i;
        if (index > swiper.slides.length) { break; }
        activeSlides.push(swiper.slides.eq(index)[0]);
      }
    } else {
      activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);
    }

    // Find new height from highest slide in view
    for (i = 0; i < activeSlides.length; i += 1) {
      if (typeof activeSlides[i] !== 'undefined') {
        var height = activeSlides[i].offsetHeight;
        newHeight = height > newHeight ? height : newHeight;
      }
    }

    // Update Height
    if (newHeight) { swiper.$wrapperEl.css('height', (newHeight + "px")); }
  }

  function updateSlidesOffset () {
    var swiper = this;
    var slides = swiper.slides;
    for (var i = 0; i < slides.length; i += 1) {
      slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;
    }
  }

  function updateSlidesProgress (translate) {
    if ( translate === void 0 ) translate = (this && this.translate) || 0;

    var swiper = this;
    var params = swiper.params;

    var slides = swiper.slides;
    var rtl = swiper.rtlTranslate;

    if (slides.length === 0) { return; }
    if (typeof slides[0].swiperSlideOffset === 'undefined') { swiper.updateSlidesOffset(); }

    var offsetCenter = -translate;
    if (rtl) { offsetCenter = translate; }

    // Visible Slides
    slides.removeClass(params.slideVisibleClass);

    for (var i = 0; i < slides.length; i += 1) {
      var slide = slides[i];
      var slideProgress =
        (
          (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide.swiperSlideOffset
        ) / (slide.swiperSlideSize + params.spaceBetween);
      if (params.watchSlidesVisibility) {
        var slideBefore = -(offsetCenter - slide.swiperSlideOffset);
        var slideAfter = slideBefore + swiper.slidesSizesGrid[i];
        var isVisible =
                  (slideBefore >= 0 && slideBefore < swiper.size) ||
                  (slideAfter > 0 && slideAfter <= swiper.size) ||
                  (slideBefore <= 0 && slideAfter >= swiper.size);
        if (isVisible) {
          slides.eq(i).addClass(params.slideVisibleClass);
        }
      }
      slide.progress = rtl ? -slideProgress : slideProgress;
    }
  }

  function updateProgress (translate) {
    if ( translate === void 0 ) translate = (this && this.translate) || 0;

    var swiper = this;
    var params = swiper.params;

    var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();
    var progress = swiper.progress;
    var isBeginning = swiper.isBeginning;
    var isEnd = swiper.isEnd;
    var wasBeginning = isBeginning;
    var wasEnd = isEnd;
    if (translatesDiff === 0) {
      progress = 0;
      isBeginning = true;
      isEnd = true;
    } else {
      progress = (translate - swiper.minTranslate()) / (translatesDiff);
      isBeginning = progress <= 0;
      isEnd = progress >= 1;
    }
    Utils.extend(swiper, {
      progress: progress,
      isBeginning: isBeginning,
      isEnd: isEnd,
    });

    if (params.watchSlidesProgress || params.watchSlidesVisibility) { swiper.updateSlidesProgress(translate); }

    if (isBeginning && !wasBeginning) {
      swiper.emit('reachBeginning toEdge');
    }
    if (isEnd && !wasEnd) {
      swiper.emit('reachEnd toEdge');
    }
    if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {
      swiper.emit('fromEdge');
    }

    swiper.emit('progress', progress);
  }

  function updateSlidesClasses () {
    var swiper = this;

    var slides = swiper.slides;
    var params = swiper.params;
    var $wrapperEl = swiper.$wrapperEl;
    var activeIndex = swiper.activeIndex;
    var realIndex = swiper.realIndex;
    var isVirtual = swiper.virtual && params.virtual.enabled;

    slides.removeClass(((params.slideActiveClass) + " " + (params.slideNextClass) + " " + (params.slidePrevClass) + " " + (params.slideDuplicateActiveClass) + " " + (params.slideDuplicateNextClass) + " " + (params.slideDuplicatePrevClass)));

    var activeSlide;
    if (isVirtual) {
      activeSlide = swiper.$wrapperEl.find(("." + (params.slideClass) + "[data-swiper-slide-index=\"" + activeIndex + "\"]"));
    } else {
      activeSlide = slides.eq(activeIndex);
    }

    // Active classes
    activeSlide.addClass(params.slideActiveClass);

    if (params.loop) {
      // Duplicate to all looped slides
      if (activeSlide.hasClass(params.slideDuplicateClass)) {
        $wrapperEl
          .children(("." + (params.slideClass) + ":not(." + (params.slideDuplicateClass) + ")[data-swiper-slide-index=\"" + realIndex + "\"]"))
          .addClass(params.slideDuplicateActiveClass);
      } else {
        $wrapperEl
          .children(("." + (params.slideClass) + "." + (params.slideDuplicateClass) + "[data-swiper-slide-index=\"" + realIndex + "\"]"))
          .addClass(params.slideDuplicateActiveClass);
      }
    }
    // Next Slide
    var nextSlide = activeSlide.nextAll(("." + (params.slideClass))).eq(0).addClass(params.slideNextClass);
    if (params.loop && nextSlide.length === 0) {
      nextSlide = slides.eq(0);
      nextSlide.addClass(params.slideNextClass);
    }
    // Prev Slide
    var prevSlide = activeSlide.prevAll(("." + (params.slideClass))).eq(0).addClass(params.slidePrevClass);
    if (params.loop && prevSlide.length === 0) {
      prevSlide = slides.eq(-1);
      prevSlide.addClass(params.slidePrevClass);
    }
    if (params.loop) {
      // Duplicate to all looped slides
      if (nextSlide.hasClass(params.slideDuplicateClass)) {
        $wrapperEl
          .children(("." + (params.slideClass) + ":not(." + (params.slideDuplicateClass) + ")[data-swiper-slide-index=\"" + (nextSlide.attr('data-swiper-slide-index')) + "\"]"))
          .addClass(params.slideDuplicateNextClass);
      } else {
        $wrapperEl
          .children(("." + (params.slideClass) + "." + (params.slideDuplicateClass) + "[data-swiper-slide-index=\"" + (nextSlide.attr('data-swiper-slide-index')) + "\"]"))
          .addClass(params.slideDuplicateNextClass);
      }
      if (prevSlide.hasClass(params.slideDuplicateClass)) {
        $wrapperEl
          .children(("." + (params.slideClass) + ":not(." + (params.slideDuplicateClass) + ")[data-swiper-slide-index=\"" + (prevSlide.attr('data-swiper-slide-index')) + "\"]"))
          .addClass(params.slideDuplicatePrevClass);
      } else {
        $wrapperEl
          .children(("." + (params.slideClass) + "." + (params.slideDuplicateClass) + "[data-swiper-slide-index=\"" + (prevSlide.attr('data-swiper-slide-index')) + "\"]"))
          .addClass(params.slideDuplicatePrevClass);
      }
    }
  }

  function updateActiveIndex (newActiveIndex) {
    var swiper = this;
    var translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;
    var slidesGrid = swiper.slidesGrid;
    var snapGrid = swiper.snapGrid;
    var params = swiper.params;
    var previousIndex = swiper.activeIndex;
    var previousRealIndex = swiper.realIndex;
    var previousSnapIndex = swiper.snapIndex;
    var activeIndex = newActiveIndex;
    var snapIndex;
    if (typeof activeIndex === 'undefined') {
      for (var i = 0; i < slidesGrid.length; i += 1) {
        if (typeof slidesGrid[i + 1] !== 'undefined') {
          if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {
            activeIndex = i;
          } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {
            activeIndex = i + 1;
          }
        } else if (translate >= slidesGrid[i]) {
          activeIndex = i;
        }
      }
      // Normalize slideIndex
      if (params.normalizeSlideIndex) {
        if (activeIndex < 0 || typeof activeIndex === 'undefined') { activeIndex = 0; }
      }
    }
    if (snapGrid.indexOf(translate) >= 0) {
      snapIndex = snapGrid.indexOf(translate);
    } else {
      snapIndex = Math.floor(activeIndex / params.slidesPerGroup);
    }
    if (snapIndex >= snapGrid.length) { snapIndex = snapGrid.length - 1; }
    if (activeIndex === previousIndex) {
      if (snapIndex !== previousSnapIndex) {
        swiper.snapIndex = snapIndex;
        swiper.emit('snapIndexChange');
      }
      return;
    }

    // Get real index
    var realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);

    Utils.extend(swiper, {
      snapIndex: snapIndex,
      realIndex: realIndex,
      previousIndex: previousIndex,
      activeIndex: activeIndex,
    });
    swiper.emit('activeIndexChange');
    swiper.emit('snapIndexChange');
    if (previousRealIndex !== realIndex) {
      swiper.emit('realIndexChange');
    }
    swiper.emit('slideChange');
  }

  function updateClickedSlide (e) {
    var swiper = this;
    var params = swiper.params;
    var slide = $(e.target).closest(("." + (params.slideClass)))[0];
    var slideFound = false;
    if (slide) {
      for (var i = 0; i < swiper.slides.length; i += 1) {
        if (swiper.slides[i] === slide) { slideFound = true; }
      }
    }

    if (slide && slideFound) {
      swiper.clickedSlide = slide;
      if (swiper.virtual && swiper.params.virtual.enabled) {
        swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);
      } else {
        swiper.clickedIndex = $(slide).index();
      }
    } else {
      swiper.clickedSlide = undefined;
      swiper.clickedIndex = undefined;
      return;
    }
    if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {
      swiper.slideToClickedSlide();
    }
  }

  var update = {
    updateSize: updateSize,
    updateSlides: updateSlides,
    updateAutoHeight: updateAutoHeight,
    updateSlidesOffset: updateSlidesOffset,
    updateSlidesProgress: updateSlidesProgress,
    updateProgress: updateProgress,
    updateSlidesClasses: updateSlidesClasses,
    updateActiveIndex: updateActiveIndex,
    updateClickedSlide: updateClickedSlide,
  };

  function getTranslate (axis) {
    if ( axis === void 0 ) axis = this.isHorizontal() ? 'x' : 'y';

    var swiper = this;

    var params = swiper.params;
    var rtl = swiper.rtlTranslate;
    var translate = swiper.translate;
    var $wrapperEl = swiper.$wrapperEl;

    if (params.virtualTranslate) {
      return rtl ? -translate : translate;
    }

    var currentTranslate = Utils.getTranslate($wrapperEl[0], axis);
    if (rtl) { currentTranslate = -currentTranslate; }

    return currentTranslate || 0;
  }

  function setTranslate (translate, byController) {
    var swiper = this;
    var rtl = swiper.rtlTranslate;
    var params = swiper.params;
    var $wrapperEl = swiper.$wrapperEl;
    var progress = swiper.progress;
    var x = 0;
    var y = 0;
    var z = 0;

    if (swiper.isHorizontal()) {
      x = rtl ? -translate : translate;
    } else {
      y = translate;
    }

    if (params.roundLengths) {
      x = Math.floor(x);
      y = Math.floor(y);
    }

    if (!params.virtualTranslate) {
      if (Support.transforms3d) { $wrapperEl.transform(("translate3d(" + x + "px, " + y + "px, " + z + "px)")); }
      else { $wrapperEl.transform(("translate(" + x + "px, " + y + "px)")); }
    }

    swiper.translate = swiper.isHorizontal() ? x : y;

    // Check if we need to update progress
    var newProgress;
    var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();
    if (translatesDiff === 0) {
      newProgress = 0;
    } else {
      newProgress = (translate - swiper.minTranslate()) / (translatesDiff);
    }
    if (newProgress !== progress) {
      swiper.updateProgress(translate);
    }

    swiper.emit('setTranslate', swiper.translate, byController);
  }

  function minTranslate () {
    return (-this.snapGrid[0]);
  }

  function maxTranslate () {
    return (-this.snapGrid[this.snapGrid.length - 1]);
  }

  var translate = {
    getTranslate: getTranslate,
    setTranslate: setTranslate,
    minTranslate: minTranslate,
    maxTranslate: maxTranslate,
  };

  function setTransition (duration, byController) {
    var swiper = this;

    swiper.$wrapperEl.transition(duration);

    swiper.emit('setTransition', duration, byController);
  }

  function transitionStart (runCallbacks, direction) {
    if ( runCallbacks === void 0 ) runCallbacks = true;

    var swiper = this;
    var activeIndex = swiper.activeIndex;
    var params = swiper.params;
    var previousIndex = swiper.previousIndex;
    if (params.autoHeight) {
      swiper.updateAutoHeight();
    }

    var dir = direction;
    if (!dir) {
      if (activeIndex > previousIndex) { dir = 'next'; }
      else if (activeIndex < previousIndex) { dir = 'prev'; }
      else { dir = 'reset'; }
    }

    swiper.emit('transitionStart');

    if (runCallbacks && activeIndex !== previousIndex) {
      if (dir === 'reset') {
        swiper.emit('slideResetTransitionStart');
        return;
      }
      swiper.emit('slideChangeTransitionStart');
      if (dir === 'next') {
        swiper.emit('slideNextTransitionStart');
      } else {
        swiper.emit('slidePrevTransitionStart');
      }
    }
  }

  function transitionEnd$1 (runCallbacks, direction) {
    if ( runCallbacks === void 0 ) runCallbacks = true;

    var swiper = this;
    var activeIndex = swiper.activeIndex;
    var previousIndex = swiper.previousIndex;
    swiper.animating = false;
    swiper.setTransition(0);

    var dir = direction;
    if (!dir) {
      if (activeIndex > previousIndex) { dir = 'next'; }
      else if (activeIndex < previousIndex) { dir = 'prev'; }
      else { dir = 'reset'; }
    }

    swiper.emit('transitionEnd');

    if (runCallbacks && activeIndex !== previousIndex) {
      if (dir === 'reset') {
        swiper.emit('slideResetTransitionEnd');
        return;
      }
      swiper.emit('slideChangeTransitionEnd');
      if (dir === 'next') {
        swiper.emit('slideNextTransitionEnd');
      } else {
        swiper.emit('slidePrevTransitionEnd');
      }
    }
  }

  var transition$1 = {
    setTransition: setTransition,
    transitionStart: transitionStart,
    transitionEnd: transitionEnd$1,
  };

  function slideTo (index, speed, runCallbacks, internal) {
    if ( index === void 0 ) index = 0;
    if ( speed === void 0 ) speed = this.params.speed;
    if ( runCallbacks === void 0 ) runCallbacks = true;

    var swiper = this;
    var slideIndex = index;
    if (slideIndex < 0) { slideIndex = 0; }

    var params = swiper.params;
    var snapGrid = swiper.snapGrid;
    var slidesGrid = swiper.slidesGrid;
    var previousIndex = swiper.previousIndex;
    var activeIndex = swiper.activeIndex;
    var rtl = swiper.rtlTranslate;
    if (swiper.animating && params.preventIntercationOnTransition) {
      return false;
    }

    var snapIndex = Math.floor(slideIndex / params.slidesPerGroup);
    if (snapIndex >= snapGrid.length) { snapIndex = snapGrid.length - 1; }

    if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {
      swiper.emit('beforeSlideChangeStart');
    }

    var translate = -snapGrid[snapIndex];

    // Update progress
    swiper.updateProgress(translate);

    // Normalize slideIndex
    if (params.normalizeSlideIndex) {
      for (var i = 0; i < slidesGrid.length; i += 1) {
        if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {
          slideIndex = i;
        }
      }
    }
    // Directions locks
    if (swiper.initialized && slideIndex !== activeIndex) {
      if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {
        return false;
      }
      if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {
        if ((activeIndex || 0) !== slideIndex) { return false; }
      }
    }

    var direction;
    if (slideIndex > activeIndex) { direction = 'next'; }
    else if (slideIndex < activeIndex) { direction = 'prev'; }
    else { direction = 'reset'; }


    // Update Index
    if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {
      swiper.updateActiveIndex(slideIndex);
      // Update Height
      if (params.autoHeight) {
        swiper.updateAutoHeight();
      }
      swiper.updateSlidesClasses();
      if (params.effect !== 'slide') {
        swiper.setTranslate(translate);
      }
      if (direction !== 'reset') {
        swiper.transitionStart(runCallbacks, direction);
        swiper.transitionEnd(runCallbacks, direction);
      }
      return false;
    }

    if (speed === 0 || !Support.transition) {
      swiper.setTransition(0);
      swiper.setTranslate(translate);
      swiper.updateActiveIndex(slideIndex);
      swiper.updateSlidesClasses();
      swiper.emit('beforeTransitionStart', speed, internal);
      swiper.transitionStart(runCallbacks, direction);
      swiper.transitionEnd(runCallbacks, direction);
    } else {
      swiper.setTransition(speed);
      swiper.setTranslate(translate);
      swiper.updateActiveIndex(slideIndex);
      swiper.updateSlidesClasses();
      swiper.emit('beforeTransitionStart', speed, internal);
      swiper.transitionStart(runCallbacks, direction);
      if (!swiper.animating) {
        swiper.animating = true;
        if (!swiper.onSlideToWrapperTransitionEnd) {
          swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {
            if (!swiper || swiper.destroyed) { return; }
            if (e.target !== this) { return; }
            swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);
            swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);
            swiper.transitionEnd(runCallbacks, direction);
          };
        }
        swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);
        swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);
      }
    }

    return true;
  }

  function slideToLoop (index, speed, runCallbacks, internal) {
    if ( index === void 0 ) index = 0;
    if ( speed === void 0 ) speed = this.params.speed;
    if ( runCallbacks === void 0 ) runCallbacks = true;

    var swiper = this;
    var newIndex = index;
    if (swiper.params.loop) {
      newIndex += swiper.loopedSlides;
    }

    return swiper.slideTo(newIndex, speed, runCallbacks, internal);
  }

  /* eslint no-unused-vars: "off" */
  function slideNext (speed, runCallbacks, internal) {
    if ( speed === void 0 ) speed = this.params.speed;
    if ( runCallbacks === void 0 ) runCallbacks = true;

    var swiper = this;
    var params = swiper.params;
    var animating = swiper.animating;
    if (params.loop) {
      if (animating) { return false; }
      swiper.loopFix();
      // eslint-disable-next-line
      swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;
      return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);
    }
    return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);
  }

  /* eslint no-unused-vars: "off" */
  function slidePrev (speed, runCallbacks, internal) {
    if ( speed === void 0 ) speed = this.params.speed;
    if ( runCallbacks === void 0 ) runCallbacks = true;

    var swiper = this;
    var params = swiper.params;
    var animating = swiper.animating;
    var snapGrid = swiper.snapGrid;
    var slidesGrid = swiper.slidesGrid;
    var rtlTranslate = swiper.rtlTranslate;

    if (params.loop) {
      if (animating) { return false; }
      swiper.loopFix();
      // eslint-disable-next-line
      swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;
    }
    var translate = rtlTranslate ? swiper.translate : -swiper.translate;
    var currentSnap = snapGrid[snapGrid.indexOf(translate)];
    var prevSnap = snapGrid[snapGrid.indexOf(translate) - 1];
    var prevIndex;

    if (prevSnap) {
      prevIndex = slidesGrid.indexOf(prevSnap);
      if (prevIndex < 0) { prevIndex = swiper.activeIndex - 1; }
    }
    return swiper.slideTo(prevIndex, speed, runCallbacks, internal);
  }

  /* eslint no-unused-vars: "off" */
  function slideReset (speed, runCallbacks, internal) {
    if ( speed === void 0 ) speed = this.params.speed;
    if ( runCallbacks === void 0 ) runCallbacks = true;

    var swiper = this;
    return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);
  }

  /* eslint no-unused-vars: "off" */
  function slideToClosest (speed, runCallbacks, internal) {
    if ( speed === void 0 ) speed = this.params.speed;
    if ( runCallbacks === void 0 ) runCallbacks = true;

    var swiper = this;
    var index = swiper.activeIndex;
    var snapIndex = Math.floor(index / swiper.params.slidesPerGroup);

    if (snapIndex < swiper.snapGrid.length - 1) {
      var translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;

      var currentSnap = swiper.snapGrid[snapIndex];
      var nextSnap = swiper.snapGrid[snapIndex + 1];

      if ((translate - currentSnap) > (nextSnap - currentSnap) / 2) {
        index = swiper.params.slidesPerGroup;
      }
    }

    return swiper.slideTo(index, speed, runCallbacks, internal);
  }

  function slideToClickedSlide () {
    var swiper = this;
    var params = swiper.params;
    var $wrapperEl = swiper.$wrapperEl;

    var slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;
    var slideToIndex = swiper.clickedIndex;
    var realIndex;
    if (params.loop) {
      if (swiper.animating) { return; }
      realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);
      if (params.centeredSlides) {
        if (
          (slideToIndex < swiper.loopedSlides - (slidesPerView / 2)) ||
          (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))
        ) {
          swiper.loopFix();
          slideToIndex = $wrapperEl
            .children(("." + (params.slideClass) + "[data-swiper-slide-index=\"" + realIndex + "\"]:not(." + (params.slideDuplicateClass) + ")"))
            .eq(0)
            .index();

          Utils.nextTick(function () {
            swiper.slideTo(slideToIndex);
          });
        } else {
          swiper.slideTo(slideToIndex);
        }
      } else if (slideToIndex > swiper.slides.length - slidesPerView) {
        swiper.loopFix();
        slideToIndex = $wrapperEl
          .children(("." + (params.slideClass) + "[data-swiper-slide-index=\"" + realIndex + "\"]:not(." + (params.slideDuplicateClass) + ")"))
          .eq(0)
          .index();

        Utils.nextTick(function () {
          swiper.slideTo(slideToIndex);
        });
      } else {
        swiper.slideTo(slideToIndex);
      }
    } else {
      swiper.slideTo(slideToIndex);
    }
  }

  var slide = {
    slideTo: slideTo,
    slideToLoop: slideToLoop,
    slideNext: slideNext,
    slidePrev: slidePrev,
    slideReset: slideReset,
    slideToClosest: slideToClosest,
    slideToClickedSlide: slideToClickedSlide,
  };

  function loopCreate () {
    var swiper = this;
    var params = swiper.params;
    var $wrapperEl = swiper.$wrapperEl;
    // Remove duplicated slides
    $wrapperEl.children(("." + (params.slideClass) + "." + (params.slideDuplicateClass))).remove();

    var slides = $wrapperEl.children(("." + (params.slideClass)));

    if (params.loopFillGroupWithBlank) {
      var blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);
      if (blankSlidesNum !== params.slidesPerGroup) {
        for (var i = 0; i < blankSlidesNum; i += 1) {
          var blankNode = $(doc.createElement('div')).addClass(((params.slideClass) + " " + (params.slideBlankClass)));
          $wrapperEl.append(blankNode);
        }
        slides = $wrapperEl.children(("." + (params.slideClass)));
      }
    }

    if (params.slidesPerView === 'auto' && !params.loopedSlides) { params.loopedSlides = slides.length; }

    swiper.loopedSlides = parseInt(params.loopedSlides || params.slidesPerView, 10);
    swiper.loopedSlides += params.loopAdditionalSlides;
    if (swiper.loopedSlides > slides.length) {
      swiper.loopedSlides = slides.length;
    }

    var prependSlides = [];
    var appendSlides = [];
    slides.each(function (index, el) {
      var slide = $(el);
      if (index < swiper.loopedSlides) { appendSlides.push(el); }
      if (index < slides.length && index >= slides.length - swiper.loopedSlides) { prependSlides.push(el); }
      slide.attr('data-swiper-slide-index', index);
    });
    for (var i$1 = 0; i$1 < appendSlides.length; i$1 += 1) {
      $wrapperEl.append($(appendSlides[i$1].cloneNode(true)).addClass(params.slideDuplicateClass));
    }
    for (var i$2 = prependSlides.length - 1; i$2 >= 0; i$2 -= 1) {
      $wrapperEl.prepend($(prependSlides[i$2].cloneNode(true)).addClass(params.slideDuplicateClass));
    }
  }

  function loopFix () {
    var swiper = this;
    var params = swiper.params;
    var activeIndex = swiper.activeIndex;
    var slides = swiper.slides;
    var loopedSlides = swiper.loopedSlides;
    var allowSlidePrev = swiper.allowSlidePrev;
    var allowSlideNext = swiper.allowSlideNext;
    var snapGrid = swiper.snapGrid;
    var rtl = swiper.rtlTranslate;
    var newIndex;
    swiper.allowSlidePrev = true;
    swiper.allowSlideNext = true;

    var snapTranslate = -snapGrid[activeIndex];
    var diff = snapTranslate - swiper.getTranslate();


    // Fix For Negative Oversliding
    if (activeIndex < loopedSlides) {
      newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;
      newIndex += loopedSlides;
      var slideChanged = swiper.slideTo(newIndex, 0, false, true);
      if (slideChanged && diff !== 0) {
        swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);
      }
    } else if ((params.slidesPerView === 'auto' && activeIndex >= loopedSlides * 2) || (activeIndex > slides.length - (params.slidesPerView * 2))) {
      // Fix For Positive Oversliding
      newIndex = -slides.length + activeIndex + loopedSlides;
      newIndex += loopedSlides;
      var slideChanged$1 = swiper.slideTo(newIndex, 0, false, true);
      if (slideChanged$1 && diff !== 0) {
        swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);
      }
    }
    swiper.allowSlidePrev = allowSlidePrev;
    swiper.allowSlideNext = allowSlideNext;
  }

  function loopDestroy () {
    var swiper = this;
    var $wrapperEl = swiper.$wrapperEl;
    var params = swiper.params;
    var slides = swiper.slides;
    $wrapperEl.children(("." + (params.slideClass) + "." + (params.slideDuplicateClass))).remove();
    slides.removeAttr('data-swiper-slide-index');
  }

  var loop = {
    loopCreate: loopCreate,
    loopFix: loopFix,
    loopDestroy: loopDestroy,
  };

  function setGrabCursor (moving) {
    var swiper = this;
    if (Support.touch || !swiper.params.simulateTouch || (swiper.params.watchOverflow && swiper.isLocked)) { return; }
    var el = swiper.el;
    el.style.cursor = 'move';
    el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';
    el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';
    el.style.cursor = moving ? 'grabbing' : 'grab';
  }

  function unsetGrabCursor () {
    var swiper = this;
    if (Support.touch || (swiper.params.watchOverflow && swiper.isLocked)) { return; }
    swiper.el.style.cursor = '';
  }

  var grabCursor = {
    setGrabCursor: setGrabCursor,
    unsetGrabCursor: unsetGrabCursor,
  };

  function appendSlide (slides) {
    var swiper = this;
    var $wrapperEl = swiper.$wrapperEl;
    var params = swiper.params;
    if (params.loop) {
      swiper.loopDestroy();
    }
    if (typeof slides === 'object' && 'length' in slides) {
      for (var i = 0; i < slides.length; i += 1) {
        if (slides[i]) { $wrapperEl.append(slides[i]); }
      }
    } else {
      $wrapperEl.append(slides);
    }
    if (params.loop) {
      swiper.loopCreate();
    }
    if (!(params.observer && Support.observer)) {
      swiper.update();
    }
  }

  function prependSlide (slides) {
    var swiper = this;
    var params = swiper.params;
    var $wrapperEl = swiper.$wrapperEl;
    var activeIndex = swiper.activeIndex;

    if (params.loop) {
      swiper.loopDestroy();
    }
    var newActiveIndex = activeIndex + 1;
    if (typeof slides === 'object' && 'length' in slides) {
      for (var i = 0; i < slides.length; i += 1) {
        if (slides[i]) { $wrapperEl.prepend(slides[i]); }
      }
      newActiveIndex = activeIndex + slides.length;
    } else {
      $wrapperEl.prepend(slides);
    }
    if (params.loop) {
      swiper.loopCreate();
    }
    if (!(params.observer && Support.observer)) {
      swiper.update();
    }
    swiper.slideTo(newActiveIndex, 0, false);
  }

  function removeSlide (slidesIndexes) {
    var swiper = this;
    var params = swiper.params;
    var $wrapperEl = swiper.$wrapperEl;
    var activeIndex = swiper.activeIndex;

    if (params.loop) {
      swiper.loopDestroy();
      swiper.slides = $wrapperEl.children(("." + (params.slideClass)));
    }
    var newActiveIndex = activeIndex;
    var indexToRemove;

    if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {
      for (var i = 0; i < slidesIndexes.length; i += 1) {
        indexToRemove = slidesIndexes[i];
        if (swiper.slides[indexToRemove]) { swiper.slides.eq(indexToRemove).remove(); }
        if (indexToRemove < newActiveIndex) { newActiveIndex -= 1; }
      }
      newActiveIndex = Math.max(newActiveIndex, 0);
    } else {
      indexToRemove = slidesIndexes;
      if (swiper.slides[indexToRemove]) { swiper.slides.eq(indexToRemove).remove(); }
      if (indexToRemove < newActiveIndex) { newActiveIndex -= 1; }
      newActiveIndex = Math.max(newActiveIndex, 0);
    }

    if (params.loop) {
      swiper.loopCreate();
    }

    if (!(params.observer && Support.observer)) {
      swiper.update();
    }
    if (params.loop) {
      swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);
    } else {
      swiper.slideTo(newActiveIndex, 0, false);
    }
  }

  function removeAllSlides () {
    var swiper = this;

    var slidesIndexes = [];
    for (var i = 0; i < swiper.slides.length; i += 1) {
      slidesIndexes.push(i);
    }
    swiper.removeSlide(slidesIndexes);
  }

  var manipulation = {
    appendSlide: appendSlide,
    prependSlide: prependSlide,
    removeSlide: removeSlide,
    removeAllSlides: removeAllSlides,
  };

  var Device = (function Device() {
    var ua = win.navigator.userAgent;

    var device = {
      ios: false,
      android: false,
      androidChrome: false,
      desktop: false,
      windows: false,
      iphone: false,
      ipod: false,
      ipad: false,
      cordova: win.cordova || win.phonegap,
      phonegap: win.cordova || win.phonegap,
    };

    var windows = ua.match(/(Windows Phone);?[\s\/]+([\d.]+)?/); // eslint-disable-line
    var android = ua.match(/(Android);?[\s\/]+([\d.]+)?/); // eslint-disable-line
    var ipad = ua.match(/(iPad).*OS\s([\d_]+)/);
    var ipod = ua.match(/(iPod)(.*OS\s([\d_]+))?/);
    var iphone = !ipad && ua.match(/(iPhone\sOS|iOS)\s([\d_]+)/);


    // Windows
    if (windows) {
      device.os = 'windows';
      device.osVersion = windows[2];
      device.windows = true;
    }
    // Android
    if (android && !windows) {
      device.os = 'android';
      device.osVersion = android[2];
      device.android = true;
      device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;
    }
    if (ipad || iphone || ipod) {
      device.os = 'ios';
      device.ios = true;
    }
    // iOS
    if (iphone && !ipod) {
      device.osVersion = iphone[2].replace(/_/g, '.');
      device.iphone = true;
    }
    if (ipad) {
      device.osVersion = ipad[2].replace(/_/g, '.');
      device.ipad = true;
    }
    if (ipod) {
      device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;
      device.iphone = true;
    }
    // iOS 8+ changed UA
    if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {
      if (device.osVersion.split('.')[0] === '10') {
        device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];
      }
    }

    // Desktop
    device.desktop = !(device.os || device.android || device.webView);

    // Webview
    device.webView = (iphone || ipad || ipod) && ua.match(/.*AppleWebKit(?!.*Safari)/i);

    // Minimal UI
    if (device.os && device.os === 'ios') {
      var osVersionArr = device.osVersion.split('.');
      var metaViewport = doc.querySelector('meta[name="viewport"]');
      device.minimalUi =
        !device.webView &&
        (ipod || iphone) &&
        (osVersionArr[0] * 1 === 7 ? osVersionArr[1] * 1 >= 1 : osVersionArr[0] * 1 > 7) &&
        metaViewport && metaViewport.getAttribute('content').indexOf('minimal-ui') >= 0;
    }

    // Pixel Ratio
    device.pixelRatio = win.devicePixelRatio || 1;

    // Export object
    return device;
  }());

  function onTouchStart (event) {
    var swiper = this;
    var data = swiper.touchEventsData;
    var params = swiper.params;
    var touches = swiper.touches;
    if (swiper.animating && params.preventIntercationOnTransition) {
      return;
    }
    var e = event;
    if (e.originalEvent) { e = e.originalEvent; }
    data.isTouchEvent = e.type === 'touchstart';
    if (!data.isTouchEvent && 'which' in e && e.which === 3) { return; }
    if (data.isTouched && data.isMoved) { return; }
    if (params.noSwiping && $(e.target).closest(params.noSwipingSelector ? params.noSwipingSelector : ("." + (params.noSwipingClass)))[0]) {
      swiper.allowClick = true;
      return;
    }
    if (params.swipeHandler) {
      if (!$(e).closest(params.swipeHandler)[0]) { return; }
    }

    touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;
    touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;
    var startX = touches.currentX;
    var startY = touches.currentY;

    // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore

    if (
      Device.ios &&
      !Device.cordova &&
      params.iOSEdgeSwipeDetection &&
      (startX <= params.iOSEdgeSwipeThreshold) &&
      (startX >= win.screen.width - params.iOSEdgeSwipeThreshold)
    ) {
      return;
    }

    Utils.extend(data, {
      isTouched: true,
      isMoved: false,
      allowTouchCallbacks: true,
      isScrolling: undefined,
      startMoving: undefined,
    });

    touches.startX = startX;
    touches.startY = startY;
    data.touchStartTime = Utils.now();
    swiper.allowClick = true;
    swiper.updateSize();
    swiper.swipeDirection = undefined;
    if (params.threshold > 0) { data.allowThresholdMove = false; }
    if (e.type !== 'touchstart') {
      var preventDefault = true;
      if ($(e.target).is(data.formElements)) { preventDefault = false; }
      if (
        doc.activeElement &&
        $(doc.activeElement).is(data.formElements) &&
        doc.activeElement !== e.target
      ) {
        doc.activeElement.blur();
      }
      if (preventDefault && swiper.allowTouchMove) {
        e.preventDefault();
      }
    }
    swiper.emit('touchStart', e);
  }

  function onTouchMove (event) {
    var swiper = this;
    var data = swiper.touchEventsData;
    var params = swiper.params;
    var touches = swiper.touches;
    var rtl = swiper.rtlTranslate;
    var e = event;
    if (e.originalEvent) { e = e.originalEvent; }
    if (!data.isTouched) {
      if (data.startMoving && data.isScrolling) {
        swiper.emit('touchMoveOpposite', e);
      }
      return;
    }
    if (data.isTouchEvent && e.type === 'mousemove') { return; }
    var pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;
    var pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;
    if (e.preventedByNestedSwiper) {
      touches.startX = pageX;
      touches.startY = pageY;
      return;
    }
    if (!swiper.allowTouchMove) {
      // isMoved = true;
      swiper.allowClick = false;
      if (data.isTouched) {
        Utils.extend(touches, {
          startX: pageX,
          startY: pageY,
          currentX: pageX,
          currentY: pageY,
        });
        data.touchStartTime = Utils.now();
      }
      return;
    }
    if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {
      if (swiper.isVertical()) {
        // Vertical
        if (
          (pageY < touches.startY && swiper.translate <= swiper.maxTranslate()) ||
          (pageY > touches.startY && swiper.translate >= swiper.minTranslate())
        ) {
          data.isTouched = false;
          data.isMoved = false;
          return;
        }
      } else if (
        (pageX < touches.startX && swiper.translate <= swiper.maxTranslate()) ||
        (pageX > touches.startX && swiper.translate >= swiper.minTranslate())
      ) {
        return;
      }
    }
    if (data.isTouchEvent && doc.activeElement) {
      if (e.target === doc.activeElement && $(e.target).is(data.formElements)) {
        data.isMoved = true;
        swiper.allowClick = false;
        return;
      }
    }
    if (data.allowTouchCallbacks) {
      swiper.emit('touchMove', e);
    }
    if (e.targetTouches && e.targetTouches.length > 1) { return; }

    touches.currentX = pageX;
    touches.currentY = pageY;

    var diffX = touches.currentX - touches.startX;
    var diffY = touches.currentY - touches.startY;

    if (typeof data.isScrolling === 'undefined') {
      var touchAngle;
      if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {
        data.isScrolling = false;
      } else {
        // eslint-disable-next-line
        if ((diffX * diffX) + (diffY * diffY) >= 25) {
          touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;
          data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);
        }
      }
    }
    if (data.isScrolling) {
      swiper.emit('touchMoveOpposite', e);
    }
    if (typeof startMoving === 'undefined') {
      if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {
        data.startMoving = true;
      }
    }
    if (data.isScrolling) {
      data.isTouched = false;
      return;
    }
    if (!data.startMoving) {
      return;
    }
    swiper.allowClick = false;
    e.preventDefault();
    if (params.touchMoveStopPropagation && !params.nested) {
      e.stopPropagation();
    }

    if (!data.isMoved) {
      if (params.loop) {
        swiper.loopFix();
      }
      data.startTranslate = swiper.getTranslate();
      swiper.setTransition(0);
      if (swiper.animating) {
        swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');
      }
      data.allowMomentumBounce = false;
      // Grab Cursor
      if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {
        swiper.setGrabCursor(true);
      }
      swiper.emit('sliderFirstMove', e);
    }
    swiper.emit('sliderMove', e);
    data.isMoved = true;

    var diff = swiper.isHorizontal() ? diffX : diffY;
    touches.diff = diff;

    diff *= params.touchRatio;
    if (rtl) { diff = -diff; }

    swiper.swipeDirection = diff > 0 ? 'prev' : 'next';
    data.currentTranslate = diff + data.startTranslate;

    var disableParentSwiper = true;
    var resistanceRatio = params.resistanceRatio;
    if (params.touchReleaseOnEdges) {
      resistanceRatio = 0;
    }
    if ((diff > 0 && data.currentTranslate > swiper.minTranslate())) {
      disableParentSwiper = false;
      if (params.resistance) { data.currentTranslate = (swiper.minTranslate() - 1) + (Math.pow( (-swiper.minTranslate() + data.startTranslate + diff), resistanceRatio )); }
    } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {
      disableParentSwiper = false;
      if (params.resistance) { data.currentTranslate = (swiper.maxTranslate() + 1) - (Math.pow( (swiper.maxTranslate() - data.startTranslate - diff), resistanceRatio )); }
    }

    if (disableParentSwiper) {
      e.preventedByNestedSwiper = true;
    }

    // Directions locks
    if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {
      data.currentTranslate = data.startTranslate;
    }
    if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {
      data.currentTranslate = data.startTranslate;
    }


    // Threshold
    if (params.threshold > 0) {
      if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {
        if (!data.allowThresholdMove) {
          data.allowThresholdMove = true;
          touches.startX = touches.currentX;
          touches.startY = touches.currentY;
          data.currentTranslate = data.startTranslate;
          touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;
          return;
        }
      } else {
        data.currentTranslate = data.startTranslate;
        return;
      }
    }

    if (!params.followFinger) { return; }

    // Update active index in free mode
    if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {
      swiper.updateActiveIndex();
      swiper.updateSlidesClasses();
    }
    if (params.freeMode) {
      // Velocity
      if (data.velocities.length === 0) {
        data.velocities.push({
          position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],
          time: data.touchStartTime,
        });
      }
      data.velocities.push({
        position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],
        time: Utils.now(),
      });
    }
    // Update progress
    swiper.updateProgress(data.currentTranslate);
    // Update translate
    swiper.setTranslate(data.currentTranslate);
  }

  function onTouchEnd (event) {
    var swiper = this;
    var data = swiper.touchEventsData;

    var params = swiper.params;
    var touches = swiper.touches;
    var rtl = swiper.rtlTranslate;
    var $wrapperEl = swiper.$wrapperEl;
    var slidesGrid = swiper.slidesGrid;
    var snapGrid = swiper.snapGrid;
    var e = event;
    if (e.originalEvent) { e = e.originalEvent; }
    if (data.allowTouchCallbacks) {
      swiper.emit('touchEnd', e);
    }
    data.allowTouchCallbacks = false;
    if (!data.isTouched) {
      if (data.isMoved && params.grabCursor) {
        swiper.setGrabCursor(false);
      }
      data.isMoved = false;
      data.startMoving = false;
      return;
    }
    // Return Grab Cursor
    if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {
      swiper.setGrabCursor(false);
    }

    // Time diff
    var touchEndTime = Utils.now();
    var timeDiff = touchEndTime - data.touchStartTime;

    // Tap, doubleTap, Click
    if (swiper.allowClick) {
      swiper.updateClickedSlide(e);
      swiper.emit('tap', e);
      if (timeDiff < 300 && (touchEndTime - data.lastClickTime) > 300) {
        if (data.clickTimeout) { clearTimeout(data.clickTimeout); }
        data.clickTimeout = Utils.nextTick(function () {
          if (!swiper || swiper.destroyed) { return; }
          swiper.emit('click', e);
        }, 300);
      }
      if (timeDiff < 300 && (touchEndTime - data.lastClickTime) < 300) {
        if (data.clickTimeout) { clearTimeout(data.clickTimeout); }
        swiper.emit('doubleTap', e);
      }
    }

    data.lastClickTime = Utils.now();
    Utils.nextTick(function () {
      if (!swiper.destroyed) { swiper.allowClick = true; }
    });

    if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {
      data.isTouched = false;
      data.isMoved = false;
      data.startMoving = false;
      return;
    }
    data.isTouched = false;
    data.isMoved = false;
    data.startMoving = false;

    var currentPos;
    if (params.followFinger) {
      currentPos = rtl ? swiper.translate : -swiper.translate;
    } else {
      currentPos = -data.currentTranslate;
    }

    if (params.freeMode) {
      if (currentPos < -swiper.minTranslate()) {
        swiper.slideTo(swiper.activeIndex);
        return;
      } else if (currentPos > -swiper.maxTranslate()) {
        if (swiper.slides.length < snapGrid.length) {
          swiper.slideTo(snapGrid.length - 1);
        } else {
          swiper.slideTo(swiper.slides.length - 1);
        }
        return;
      }

      if (params.freeModeMomentum) {
        if (data.velocities.length > 1) {
          var lastMoveEvent = data.velocities.pop();
          var velocityEvent = data.velocities.pop();

          var distance = lastMoveEvent.position - velocityEvent.position;
          var time = lastMoveEvent.time - velocityEvent.time;
          swiper.velocity = distance / time;
          swiper.velocity /= 2;
          if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {
            swiper.velocity = 0;
          }
          // this implies that the user stopped moving a finger then released.
          // There would be no events with distance zero, so the last event is stale.
          if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {
            swiper.velocity = 0;
          }
        } else {
          swiper.velocity = 0;
        }
        swiper.velocity *= params.freeModeMomentumVelocityRatio;

        data.velocities.length = 0;
        var momentumDuration = 1000 * params.freeModeMomentumRatio;
        var momentumDistance = swiper.velocity * momentumDuration;

        var newPosition = swiper.translate + momentumDistance;
        if (rtl) { newPosition = -newPosition; }

        var doBounce = false;
        var afterBouncePosition;
        var bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;
        var needsLoopFix;
        if (newPosition < swiper.maxTranslate()) {
          if (params.freeModeMomentumBounce) {
            if (newPosition + swiper.maxTranslate() < -bounceAmount) {
              newPosition = swiper.maxTranslate() - bounceAmount;
            }
            afterBouncePosition = swiper.maxTranslate();
            doBounce = true;
            data.allowMomentumBounce = true;
          } else {
            newPosition = swiper.maxTranslate();
          }
          if (params.loop && params.centeredSlides) { needsLoopFix = true; }
        } else if (newPosition > swiper.minTranslate()) {
          if (params.freeModeMomentumBounce) {
            if (newPosition - swiper.minTranslate() > bounceAmount) {
              newPosition = swiper.minTranslate() + bounceAmount;
            }
            afterBouncePosition = swiper.minTranslate();
            doBounce = true;
            data.allowMomentumBounce = true;
          } else {
            newPosition = swiper.minTranslate();
          }
          if (params.loop && params.centeredSlides) { needsLoopFix = true; }
        } else if (params.freeModeSticky) {
          var nextSlide;
          for (var j = 0; j < snapGrid.length; j += 1) {
            if (snapGrid[j] > -newPosition) {
              nextSlide = j;
              break;
            }
          }

          if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {
            newPosition = snapGrid[nextSlide];
          } else {
            newPosition = snapGrid[nextSlide - 1];
          }
          newPosition = -newPosition;
        }
        if (needsLoopFix) {
          swiper.once('transitionEnd', function () {
            swiper.loopFix();
          });
        }
        // Fix duration
        if (swiper.velocity !== 0) {
          if (rtl) {
            momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);
          } else {
            momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);
          }
        } else if (params.freeModeSticky) {
          swiper.slideToClosest();
          return;
        }

        if (params.freeModeMomentumBounce && doBounce) {
          swiper.updateProgress(afterBouncePosition);
          swiper.setTransition(momentumDuration);
          swiper.setTranslate(newPosition);
          swiper.transitionStart(true, swiper.swipeDirection);
          swiper.animating = true;
          $wrapperEl.transitionEnd(function () {
            if (!swiper || swiper.destroyed || !data.allowMomentumBounce) { return; }
            swiper.emit('momentumBounce');

            swiper.setTransition(params.speed);
            swiper.setTranslate(afterBouncePosition);
            $wrapperEl.transitionEnd(function () {
              if (!swiper || swiper.destroyed) { return; }
              swiper.transitionEnd();
            });
          });
        } else if (swiper.velocity) {
          swiper.updateProgress(newPosition);
          swiper.setTransition(momentumDuration);
          swiper.setTranslate(newPosition);
          swiper.transitionStart(true, swiper.swipeDirection);
          if (!swiper.animating) {
            swiper.animating = true;
            $wrapperEl.transitionEnd(function () {
              if (!swiper || swiper.destroyed) { return; }
              swiper.transitionEnd();
            });
          }
        } else {
          swiper.updateProgress(newPosition);
        }

        swiper.updateActiveIndex();
        swiper.updateSlidesClasses();
      } else if (params.freeModeSticky) {
        swiper.slideToClosest();
        return;
      }

      if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {
        swiper.updateProgress();
        swiper.updateActiveIndex();
        swiper.updateSlidesClasses();
      }
      return;
    }

    // Find current slide
    var stopIndex = 0;
    var groupSize = swiper.slidesSizesGrid[0];
    for (var i = 0; i < slidesGrid.length; i += params.slidesPerGroup) {
      if (typeof slidesGrid[i + params.slidesPerGroup] !== 'undefined') {
        if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + params.slidesPerGroup]) {
          stopIndex = i;
          groupSize = slidesGrid[i + params.slidesPerGroup] - slidesGrid[i];
        }
      } else if (currentPos >= slidesGrid[i]) {
        stopIndex = i;
        groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];
      }
    }

    // Find current slide size
    var ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;

    if (timeDiff > params.longSwipesMs) {
      // Long touches
      if (!params.longSwipes) {
        swiper.slideTo(swiper.activeIndex);
        return;
      }
      if (swiper.swipeDirection === 'next') {
        if (ratio >= params.longSwipesRatio) { swiper.slideTo(stopIndex + params.slidesPerGroup); }
        else { swiper.slideTo(stopIndex); }
      }
      if (swiper.swipeDirection === 'prev') {
        if (ratio > (1 - params.longSwipesRatio)) { swiper.slideTo(stopIndex + params.slidesPerGroup); }
        else { swiper.slideTo(stopIndex); }
      }
    } else {
      // Short swipes
      if (!params.shortSwipes) {
        swiper.slideTo(swiper.activeIndex);
        return;
      }
      if (swiper.swipeDirection === 'next') {
        swiper.slideTo(stopIndex + params.slidesPerGroup);
      }
      if (swiper.swipeDirection === 'prev') {
        swiper.slideTo(stopIndex);
      }
    }
  }

  function onResize () {
    var swiper = this;

    var params = swiper.params;
    var el = swiper.el;

    if (el && el.offsetWidth === 0) { return; }

    // Breakpoints
    if (params.breakpoints) {
      swiper.setBreakpoint();
    }

    // Save locks
    var allowSlideNext = swiper.allowSlideNext;
    var allowSlidePrev = swiper.allowSlidePrev;
    var snapGrid = swiper.snapGrid;

    // Disable locks on resize
    swiper.allowSlideNext = true;
    swiper.allowSlidePrev = true;

    swiper.updateSize();
    swiper.updateSlides();

    if (params.freeMode) {
      var newTranslate = Math.min(Math.max(swiper.translate, swiper.maxTranslate()), swiper.minTranslate());
      swiper.setTranslate(newTranslate);
      swiper.updateActiveIndex();
      swiper.updateSlidesClasses();

      if (params.autoHeight) {
        swiper.updateAutoHeight();
      }
    } else {
      swiper.updateSlidesClasses();
      if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {
        swiper.slideTo(swiper.slides.length - 1, 0, false, true);
      } else {
        swiper.slideTo(swiper.activeIndex, 0, false, true);
      }
    }
    // Return locks after resize
    swiper.allowSlidePrev = allowSlidePrev;
    swiper.allowSlideNext = allowSlideNext;

    if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {
      swiper.checkOverflow();
    }
  }

  function onClick (e) {
    var swiper = this;
    if (!swiper.allowClick) {
      if (swiper.params.preventClicks) { e.preventDefault(); }
      if (swiper.params.preventClicksPropagation && swiper.animating) {
        e.stopPropagation();
        e.stopImmediatePropagation();
      }
    }
  }

  function attachEvents() {
    var swiper = this;
    var params = swiper.params;
    var touchEvents = swiper.touchEvents;
    var el = swiper.el;
    var wrapperEl = swiper.wrapperEl;

    {
      swiper.onTouchStart = onTouchStart.bind(swiper);
      swiper.onTouchMove = onTouchMove.bind(swiper);
      swiper.onTouchEnd = onTouchEnd.bind(swiper);
    }

    swiper.onClick = onClick.bind(swiper);

    var target = params.touchEventsTarget === 'container' ? el : wrapperEl;
    var capture = !!params.nested;

    // Touch Events
    {
      if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {
        target.addEventListener(touchEvents.start, swiper.onTouchStart, false);
        doc.addEventListener(touchEvents.move, swiper.onTouchMove, capture);
        doc.addEventListener(touchEvents.end, swiper.onTouchEnd, false);
      } else {
        if (Support.touch) {
          var passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;
          target.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);
          target.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture: capture } : capture);
          target.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);
        }
        if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {
          target.addEventListener('mousedown', swiper.onTouchStart, false);
          doc.addEventListener('mousemove', swiper.onTouchMove, capture);
          doc.addEventListener('mouseup', swiper.onTouchEnd, false);
        }
      }
      // Prevent Links Clicks
      if (params.preventClicks || params.preventClicksPropagation) {
        target.addEventListener('click', swiper.onClick, true);
      }
    }

    // Resize handler
    swiper.on('resize observerUpdate', onResize, true);
  }

  function detachEvents() {
    var swiper = this;

    var params = swiper.params;
    var touchEvents = swiper.touchEvents;
    var el = swiper.el;
    var wrapperEl = swiper.wrapperEl;

    var target = params.touchEventsTarget === 'container' ? el : wrapperEl;
    var capture = !!params.nested;

    // Touch Events
    {
      if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {
        target.removeEventListener(touchEvents.start, swiper.onTouchStart, false);
        doc.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);
        doc.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);
      } else {
        if (Support.touch) {
          var passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;
          target.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);
          target.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);
          target.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);
        }
        if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {
          target.removeEventListener('mousedown', swiper.onTouchStart, false);
          doc.removeEventListener('mousemove', swiper.onTouchMove, capture);
          doc.removeEventListener('mouseup', swiper.onTouchEnd, false);
        }
      }
      // Prevent Links Clicks
      if (params.preventClicks || params.preventClicksPropagation) {
        target.removeEventListener('click', swiper.onClick, true);
      }
    }

    // Resize handler
    swiper.off('resize observerUpdate', onResize);
  }

  var events = {
    attachEvents: attachEvents,
    detachEvents: detachEvents,
  };

  function setBreakpoint () {
    var swiper = this;
    var activeIndex = swiper.activeIndex;
    var initialized = swiper.initialized;
    var loopedSlides = swiper.loopedSlides; if ( loopedSlides === void 0 ) loopedSlides = 0;
    var params = swiper.params;
    var breakpoints = params.breakpoints;
    if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) { return; }
    // Set breakpoint for window width and update parameters
    var breakpoint = swiper.getBreakpoint(breakpoints);
    if (breakpoint && swiper.currentBreakpoint !== breakpoint) {
      var breakPointsParams = breakpoint in breakpoints ? breakpoints[breakpoint] : swiper.originalParams;
      var needsReLoop = params.loop && (breakPointsParams.slidesPerView !== params.slidesPerView);

      Utils.extend(swiper.params, breakPointsParams);

      Utils.extend(swiper, {
        allowTouchMove: swiper.params.allowTouchMove,
        allowSlideNext: swiper.params.allowSlideNext,
        allowSlidePrev: swiper.params.allowSlidePrev,
      });

      swiper.currentBreakpoint = breakpoint;

      if (needsReLoop && initialized) {
        swiper.loopDestroy();
        swiper.loopCreate();
        swiper.updateSlides();
        swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);
      }
      swiper.emit('breakpoint', breakPointsParams);
    }
  }

  function getBreakpoint (breakpoints) {
    // Get breakpoint for window width
    if (!breakpoints) { return undefined; }
    var breakpoint = false;
    var points = [];
    Object.keys(breakpoints).forEach(function (point) {
      points.push(point);
    });
    points.sort(function (a, b) { return parseInt(a, 10) - parseInt(b, 10); });
    for (var i = 0; i < points.length; i += 1) {
      var point = points[i];
      if (point >= win.innerWidth && !breakpoint) {
        breakpoint = point;
      }
    }
    return breakpoint || 'max';
  }

  var breakpoints = { setBreakpoint: setBreakpoint, getBreakpoint: getBreakpoint };

  var Browser = (function Browser() {
    function isSafari() {
      var ua = win.navigator.userAgent.toLowerCase();
      return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);
    }
    return {
      isIE: !!win.navigator.userAgent.match(/Trident/g) || !!win.navigator.userAgent.match(/MSIE/g),
      isSafari: isSafari(),
      isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(win.navigator.userAgent),
    };
  }());

  function addClasses () {
    var swiper = this;
    var classNames = swiper.classNames;
    var params = swiper.params;
    var rtl = swiper.rtl;
    var $el = swiper.$el;
    var suffixes = [];

    suffixes.push(params.direction);

    if (params.freeMode) {
      suffixes.push('free-mode');
    }
    if (!Support.flexbox) {
      suffixes.push('no-flexbox');
    }
    if (params.autoHeight) {
      suffixes.push('autoheight');
    }
    if (rtl) {
      suffixes.push('rtl');
    }
    if (params.slidesPerColumn > 1) {
      suffixes.push('multirow');
    }
    if (Device.android) {
      suffixes.push('android');
    }
    if (Device.ios) {
      suffixes.push('ios');
    }
    // WP8 Touch Events Fix
    if (Browser.isIE && (Support.pointerEvents || Support.prefixedPointerEvents)) {
      suffixes.push(("wp8-" + (params.direction)));
    }

    suffixes.forEach(function (suffix) {
      classNames.push(params.containerModifierClass + suffix);
    });

    $el.addClass(classNames.join(' '));
  }

  function removeClasses () {
    var swiper = this;
    var $el = swiper.$el;
    var classNames = swiper.classNames;

    $el.removeClass(classNames.join(' '));
  }

  var classes = { addClasses: addClasses, removeClasses: removeClasses };

  function loadImage (imageEl, src, srcset, sizes, checkForComplete, callback) {
    var image;
    function onReady() {
      if (callback) { callback(); }
    }
    if (!imageEl.complete || !checkForComplete) {
      if (src) {
        image = new win.Image();
        image.onload = onReady;
        image.onerror = onReady;
        if (sizes) {
          image.sizes = sizes;
        }
        if (srcset) {
          image.srcset = srcset;
        }
        if (src) {
          image.src = src;
        }
      } else {
        onReady();
      }
    } else {
      // image already loaded...
      onReady();
    }
  }

  function preloadImages () {
    var swiper = this;
    swiper.imagesToLoad = swiper.$el.find('img');
    function onReady() {
      if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) { return; }
      if (swiper.imagesLoaded !== undefined) { swiper.imagesLoaded += 1; }
      if (swiper.imagesLoaded === swiper.imagesToLoad.length) {
        if (swiper.params.updateOnImagesReady) { swiper.update(); }
        swiper.emit('imagesReady');
      }
    }
    for (var i = 0; i < swiper.imagesToLoad.length; i += 1) {
      var imageEl = swiper.imagesToLoad[i];
      swiper.loadImage(
        imageEl,
        imageEl.currentSrc || imageEl.getAttribute('src'),
        imageEl.srcset || imageEl.getAttribute('srcset'),
        imageEl.sizes || imageEl.getAttribute('sizes'),
        true,
        onReady
      );
    }
  }

  var images = {
    loadImage: loadImage,
    preloadImages: preloadImages,
  };

  function checkOverflow() {
    var swiper = this;
    var wasLocked = swiper.isLocked;

    swiper.isLocked = swiper.snapGrid.length === 1;
    swiper.allowSlideNext = !swiper.isLocked;
    swiper.allowSlidePrev = !swiper.isLocked;

    // events
    if (wasLocked !== swiper.isLocked) { swiper.emit(swiper.isLocked ? 'lock' : 'unlock'); }

    if (wasLocked && wasLocked !== swiper.isLocked) {
      swiper.isEnd = false;
      swiper.navigation.update();
    }
  }

  var checkOverflow$1 = { checkOverflow: checkOverflow };

  var defaults = {
    init: true,
    direction: 'horizontal',
    touchEventsTarget: 'container',
    initialSlide: 0,
    speed: 300,
    //
    preventIntercationOnTransition: false,

    // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).
    iOSEdgeSwipeDetection: false,
    iOSEdgeSwipeThreshold: 20,

    // Free mode
    freeMode: false,
    freeModeMomentum: true,
    freeModeMomentumRatio: 1,
    freeModeMomentumBounce: true,
    freeModeMomentumBounceRatio: 1,
    freeModeMomentumVelocityRatio: 1,
    freeModeSticky: false,
    freeModeMinimumVelocity: 0.02,

    // Autoheight
    autoHeight: false,

    // Set wrapper width
    setWrapperSize: false,

    // Virtual Translate
    virtualTranslate: false,

    // Effects
    effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'

    // Breakpoints
    breakpoints: undefined,

    // Slides grid
    spaceBetween: 0,
    slidesPerView: 1,
    slidesPerColumn: 1,
    slidesPerColumnFill: 'column',
    slidesPerGroup: 1,
    centeredSlides: false,
    slidesOffsetBefore: 0, // in px
    slidesOffsetAfter: 0, // in px
    normalizeSlideIndex: true,

    // Disable swiper and hide navigation when container not overflow
    watchOverflow: false,

    // Round length
    roundLengths: false,

    // Touches
    touchRatio: 1,
    touchAngle: 45,
    simulateTouch: true,
    shortSwipes: true,
    longSwipes: true,
    longSwipesRatio: 0.5,
    longSwipesMs: 300,
    followFinger: true,
    allowTouchMove: true,
    threshold: 0,
    touchMoveStopPropagation: true,
    touchReleaseOnEdges: false,

    // Unique Navigation Elements
    uniqueNavElements: true,

    // Resistance
    resistance: true,
    resistanceRatio: 0.85,

    // Progress
    watchSlidesProgress: false,
    watchSlidesVisibility: false,

    // Cursor
    grabCursor: false,

    // Clicks
    preventClicks: true,
    preventClicksPropagation: true,
    slideToClickedSlide: false,

    // Images
    preloadImages: true,
    updateOnImagesReady: true,

    // loop
    loop: false,
    loopAdditionalSlides: 0,
    loopedSlides: null,
    loopFillGroupWithBlank: false,

    // Swiping/no swiping
    allowSlidePrev: true,
    allowSlideNext: true,
    swipeHandler: null, // '.swipe-handler',
    noSwiping: true,
    noSwipingClass: 'swiper-no-swiping',
    noSwipingSelector: null,

    // Passive Listeners
    passiveListeners: true,

    // NS
    containerModifierClass: 'swiper-container-', // NEW
    slideClass: 'swiper-slide',
    slideBlankClass: 'swiper-slide-invisible-blank',
    slideActiveClass: 'swiper-slide-active',
    slideDuplicateActiveClass: 'swiper-slide-duplicate-active',
    slideVisibleClass: 'swiper-slide-visible',
    slideDuplicateClass: 'swiper-slide-duplicate',
    slideNextClass: 'swiper-slide-next',
    slideDuplicateNextClass: 'swiper-slide-duplicate-next',
    slidePrevClass: 'swiper-slide-prev',
    slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',
    wrapperClass: 'swiper-wrapper',

    // Callbacks
    runCallbacksOnInit: true,
  };

  var prototypes = {
    update: update,
    translate: translate,
    transition: transition$1,
    slide: slide,
    loop: loop,
    grabCursor: grabCursor,
    manipulation: manipulation,
    events: events,
    breakpoints: breakpoints,
    checkOverflow: checkOverflow$1,
    classes: classes,
    images: images,
  };

  var extendedDefaults = {};

  var Swiper = (function (SwiperClass$$1) {
    function Swiper() {
      var assign;

      var args = [], len = arguments.length;
      while ( len-- ) args[ len ] = arguments[ len ];
      var el;
      var params;
      if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {
        params = args[0];
      } else {
        (assign = args, el = assign[0], params = assign[1]);
      }
      if (!params) { params = {}; }

      params = Utils.extend({}, params);
      if (el && !params.el) { params.el = el; }

      SwiperClass$$1.call(this, params);

      Object.keys(prototypes).forEach(function (prototypeGroup) {
        Object.keys(prototypes[prototypeGroup]).forEach(function (protoMethod) {
          if (!Swiper.prototype[protoMethod]) {
            Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];
          }
        });
      });

      // Swiper Instance
      var swiper = this;
      if (typeof swiper.modules === 'undefined') {
        swiper.modules = {};
      }
      Object.keys(swiper.modules).forEach(function (moduleName) {
        var module = swiper.modules[moduleName];
        if (module.params) {
          var moduleParamName = Object.keys(module.params)[0];
          var moduleParams = module.params[moduleParamName];
          if (typeof moduleParams !== 'object') { return; }
          if (!(moduleParamName in params && 'enabled' in moduleParams)) { return; }
          if (params[moduleParamName] === true) {
            params[moduleParamName] = { enabled: true };
          }
          if (
            typeof params[moduleParamName] === 'object' &&
            !('enabled' in params[moduleParamName])
          ) {
            params[moduleParamName].enabled = true;
          }
          if (!params[moduleParamName]) { params[moduleParamName] = { enabled: false }; }
        }
      });

      // Extend defaults with modules params
      var swiperParams = Utils.extend({}, defaults);
      swiper.useModulesParams(swiperParams);

      // Extend defaults with passed params
      swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);
      swiper.originalParams = Utils.extend({}, swiper.params);
      swiper.passedParams = Utils.extend({}, params);

      // Save Dom lib
      swiper.$ = $;

      // Find el
      var $el = $(swiper.params.el);
      el = $el[0];

      if (!el) {
        return undefined;
      }

      if ($el.length > 1) {
        var swipers = [];
        $el.each(function (index, containerEl) {
          var newParams = Utils.extend({}, params, { el: containerEl });
          swipers.push(new Swiper(newParams));
        });
        return swipers;
      }

      el.swiper = swiper;
      $el.data('swiper', swiper);

      // Find Wrapper
      var $wrapperEl = $el.children(("." + (swiper.params.wrapperClass)));

      // Extend Swiper
      Utils.extend(swiper, {
        $el: $el,
        el: el,
        $wrapperEl: $wrapperEl,
        wrapperEl: $wrapperEl[0],

        // Classes
        classNames: [],

        // Slides
        slides: $(),
        slidesGrid: [],
        snapGrid: [],
        slidesSizesGrid: [],

        // isDirection
        isHorizontal: function isHorizontal() {
          return swiper.params.direction === 'horizontal';
        },
        isVertical: function isVertical() {
          return swiper.params.direction === 'vertical';
        },
        // RTL
        rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),
        rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),
        wrongRTL: $wrapperEl.css('display') === '-webkit-box',

        // Indexes
        activeIndex: 0,
        realIndex: 0,

        //
        isBeginning: true,
        isEnd: false,

        // Props
        translate: 0,
        progress: 0,
        velocity: 0,
        animating: false,

        // Locks
        allowSlideNext: swiper.params.allowSlideNext,
        allowSlidePrev: swiper.params.allowSlidePrev,

        // Touch Events
        touchEvents: (function touchEvents() {
          var touch = ['touchstart', 'touchmove', 'touchend'];
          var desktop = ['mousedown', 'mousemove', 'mouseup'];
          if (Support.pointerEvents) {
            desktop = ['pointerdown', 'pointermove', 'pointerup'];
          } else if (Support.prefixedPointerEvents) {
            desktop = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];
          }
          swiper.touchEventsTouch = {
            start: touch[0],
            move: touch[1],
            end: touch[2],
          };
          swiper.touchEventsDesktop = {
            start: desktop[0],
            move: desktop[1],
            end: desktop[2],
          };
          return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;
        }()),
        touchEventsData: {
          isTouched: undefined,
          isMoved: undefined,
          allowTouchCallbacks: undefined,
          touchStartTime: undefined,
          isScrolling: undefined,
          currentTranslate: undefined,
          startTranslate: undefined,
          allowThresholdMove: undefined,
          // Form elements to match
          formElements: 'input, select, option, textarea, button, video',
          // Last click time
          lastClickTime: Utils.now(),
          clickTimeout: undefined,
          // Velocities
          velocities: [],
          allowMomentumBounce: undefined,
          isTouchEvent: undefined,
          startMoving: undefined,
        },

        // Clicks
        allowClick: true,

        // Touches
        allowTouchMove: swiper.params.allowTouchMove,

        touches: {
          startX: 0,
          startY: 0,
          currentX: 0,
          currentY: 0,
          diff: 0,
        },

        // Images
        imagesToLoad: [],
        imagesLoaded: 0,

      });

      // Install Modules
      swiper.useModules();

      // Init
      if (swiper.params.init) {
        swiper.init();
      }

      // Return app instance
      return swiper;
    }

    if ( SwiperClass$$1 ) Swiper.__proto__ = SwiperClass$$1;
    Swiper.prototype = Object.create( SwiperClass$$1 && SwiperClass$$1.prototype );
    Swiper.prototype.constructor = Swiper;

    var staticAccessors = { extendedDefaults: { configurable: true },defaults: { configurable: true },Class: { configurable: true },$: { configurable: true } };
    Swiper.prototype.slidesPerViewDynamic = function slidesPerViewDynamic () {
      var swiper = this;
      var params = swiper.params;
      var slides = swiper.slides;
      var slidesGrid = swiper.slidesGrid;
      var swiperSize = swiper.size;
      var activeIndex = swiper.activeIndex;
      var spv = 1;
      if (params.centeredSlides) {
        var slideSize = slides[activeIndex].swiperSlideSize;
        var breakLoop;
        for (var i = activeIndex + 1; i < slides.length; i += 1) {
          if (slides[i] && !breakLoop) {
            slideSize += slides[i].swiperSlideSize;
            spv += 1;
            if (slideSize > swiperSize) { breakLoop = true; }
          }
        }
        for (var i$1 = activeIndex - 1; i$1 >= 0; i$1 -= 1) {
          if (slides[i$1] && !breakLoop) {
            slideSize += slides[i$1].swiperSlideSize;
            spv += 1;
            if (slideSize > swiperSize) { breakLoop = true; }
          }
        }
      } else {
        for (var i$2 = activeIndex + 1; i$2 < slides.length; i$2 += 1) {
          if (slidesGrid[i$2] - slidesGrid[activeIndex] < swiperSize) {
            spv += 1;
          }
        }
      }
      return spv;
    };
    Swiper.prototype.update = function update$$1 () {
      var swiper = this;
      if (!swiper || swiper.destroyed) { return; }
      var snapGrid = swiper.snapGrid;
      var params = swiper.params;
      // Breakpoints
      if (params.breakpoints) {
        swiper.setBreakpoint();
      }
      swiper.updateSize();
      swiper.updateSlides();
      swiper.updateProgress();
      swiper.updateSlidesClasses();

      function setTranslate() {
        var translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;
        var newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());
        swiper.setTranslate(newTranslate);
        swiper.updateActiveIndex();
        swiper.updateSlidesClasses();
      }
      var translated;
      if (swiper.params.freeMode) {
        setTranslate();
        if (swiper.params.autoHeight) {
          swiper.updateAutoHeight();
        }
      } else {
        if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {
          translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);
        } else {
          translated = swiper.slideTo(swiper.activeIndex, 0, false, true);
        }
        if (!translated) {
          setTranslate();
        }
      }
      if (params.watchOverflow && snapGrid !== swiper.snapGrid) {
        swiper.checkOverflow();
      }
      swiper.emit('update');
    };
    Swiper.prototype.init = function init () {
      var swiper = this;
      if (swiper.initialized) { return; }

      swiper.emit('beforeInit');

      // Set breakpoint
      if (swiper.params.breakpoints) {
        swiper.setBreakpoint();
      }

      // Add Classes
      swiper.addClasses();

      // Create loop
      if (swiper.params.loop) {
        swiper.loopCreate();
      }

      // Update size
      swiper.updateSize();

      // Update slides
      swiper.updateSlides();

      if (swiper.params.watchOverflow) {
        swiper.checkOverflow();
      }

      // Set Grab Cursor
      if (swiper.params.grabCursor) {
        swiper.setGrabCursor();
      }

      if (swiper.params.preloadImages) {
        swiper.preloadImages();
      }

      // Slide To Initial Slide
      if (swiper.params.loop) {
        swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);
      } else {
        swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);
      }

      // Attach events
      swiper.attachEvents();

      // Init Flag
      swiper.initialized = true;

      // Emit
      swiper.emit('init');
    };
    Swiper.prototype.destroy = function destroy (deleteInstance, cleanStyles) {
      if ( deleteInstance === void 0 ) deleteInstance = true;
      if ( cleanStyles === void 0 ) cleanStyles = true;

      var swiper = this;
      var params = swiper.params;
      var $el = swiper.$el;
      var $wrapperEl = swiper.$wrapperEl;
      var slides = swiper.slides;

      if (typeof swiper.params === 'undefined' || swiper.destroyed) {
        return null;
      }

      swiper.emit('beforeDestroy');

      // Init Flag
      swiper.initialized = false;

      // Detach events
      swiper.detachEvents();

      // Destroy loop
      if (params.loop) {
        swiper.loopDestroy();
      }

      // Cleanup styles
      if (cleanStyles) {
        swiper.removeClasses();
        $el.removeAttr('style');
        $wrapperEl.removeAttr('style');
        if (slides && slides.length) {
          slides
            .removeClass([
              params.slideVisibleClass,
              params.slideActiveClass,
              params.slideNextClass,
              params.slidePrevClass ].join(' '))
            .removeAttr('style')
            .removeAttr('data-swiper-slide-index')
            .removeAttr('data-swiper-column')
            .removeAttr('data-swiper-row');
        }
      }

      swiper.emit('destroy');

      // Detach emitter events
      Object.keys(swiper.eventsListeners).forEach(function (eventName) {
        swiper.off(eventName);
      });

      if (deleteInstance !== false) {
        swiper.$el[0].swiper = null;
        swiper.$el.data('swiper', null);
        Utils.deleteProps(swiper);
      }
      swiper.destroyed = true;

      return null;
    };
    Swiper.extendDefaults = function extendDefaults (newDefaults) {
      Utils.extend(extendedDefaults, newDefaults);
    };
    staticAccessors.extendedDefaults.get = function () {
      return extendedDefaults;
    };
    staticAccessors.defaults.get = function () {
      return defaults;
    };
    staticAccessors.Class.get = function () {
      return SwiperClass$$1;
    };
    staticAccessors.$.get = function () {
      return $;
    };

    Object.defineProperties( Swiper, staticAccessors );

    return Swiper;
  }(SwiperClass));

  var Device$1 = {
    name: 'device',
    proto: {
      device: Device,
    },
    static: {
      device: Device,
    },
  };

  var Support$1 = {
    name: 'support',
    proto: {
      support: Support,
    },
    static: {
      support: Support,
    },
  };

  var Browser$1 = {
    name: 'browser',
    proto: {
      browser: Browser,
    },
    static: {
      browser: Browser,
    },
  };

  var Resize = {
    name: 'resize',
    create: function create() {
      var swiper = this;
      Utils.extend(swiper, {
        resize: {
          resizeHandler: function resizeHandler() {
            if (!swiper || swiper.destroyed || !swiper.initialized) { return; }
            swiper.emit('beforeResize');
            swiper.emit('resize');
          },
          orientationChangeHandler: function orientationChangeHandler() {
            if (!swiper || swiper.destroyed || !swiper.initialized) { return; }
            swiper.emit('orientationchange');
          },
        },
      });
    },
    on: {
      init: function init() {
        var swiper = this;
        // Emit resize
        win.addEventListener('resize', swiper.resize.resizeHandler);

        // Emit orientationchange
        win.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);
      },
      destroy: function destroy() {
        var swiper = this;
        win.removeEventListener('resize', swiper.resize.resizeHandler);
        win.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);
      },
    },
  };

  var Observer = {
    func: win.MutationObserver || win.WebkitMutationObserver,
    attach: function attach(target, options) {
      if ( options === void 0 ) options = {};

      var swiper = this;

      var ObserverFunc = Observer.func;
      var observer = new ObserverFunc(function (mutations) {
        mutations.forEach(function (mutation) {
          swiper.emit('observerUpdate', mutation);
        });
      });

      observer.observe(target, {
        attributes: typeof options.attributes === 'undefined' ? true : options.attributes,
        childList: typeof options.childList === 'undefined' ? true : options.childList,
        characterData: typeof options.characterData === 'undefined' ? true : options.characterData,
      });

      swiper.observer.observers.push(observer);
    },
    init: function init() {
      var swiper = this;
      if (!Support.observer || !swiper.params.observer) { return; }
      if (swiper.params.observeParents) {
        var containerParents = swiper.$el.parents();
        for (var i = 0; i < containerParents.length; i += 1) {
          swiper.observer.attach(containerParents[i]);
        }
      }
      // Observe container
      swiper.observer.attach(swiper.$el[0], { childList: false });

      // Observe wrapper
      swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });
    },
    destroy: function destroy() {
      var swiper = this;
      swiper.observer.observers.forEach(function (observer) {
        observer.disconnect();
      });
      swiper.observer.observers = [];
    },
  };

  var Observer$1 = {
    name: 'observer',
    params: {
      observer: false,
      observeParents: false,
    },
    create: function create() {
      var swiper = this;
      Utils.extend(swiper, {
        observer: {
          init: Observer.init.bind(swiper),
          attach: Observer.attach.bind(swiper),
          destroy: Observer.destroy.bind(swiper),
          observers: [],
        },
      });
    },
    on: {
      init: function init() {
        var swiper = this;
        swiper.observer.init();
      },
      destroy: function destroy() {
        var swiper = this;
        swiper.observer.destroy();
      },
    },
  };

  var Virtual = {
    update: function update(force) {
      var swiper = this;
      var ref = swiper.params;
      var slidesPerView = ref.slidesPerView;
      var slidesPerGroup = ref.slidesPerGroup;
      var centeredSlides = ref.centeredSlides;
      var ref$1 = swiper.virtual;
      var previousFrom = ref$1.from;
      var previousTo = ref$1.to;
      var slides = ref$1.slides;
      var previousSlidesGrid = ref$1.slidesGrid;
      var renderSlide = ref$1.renderSlide;
      var previousOffset = ref$1.offset;
      swiper.updateActiveIndex();
      var activeIndex = swiper.activeIndex || 0;

      var offsetProp;
      if (swiper.rtlTranslate) { offsetProp = 'right'; }
      else { offsetProp = swiper.isHorizontal() ? 'left' : 'top'; }

      var slidesAfter;
      var slidesBefore;
      if (centeredSlides) {
        slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup;
        slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup;
      } else {
        slidesAfter = slidesPerView + (slidesPerGroup - 1);
        slidesBefore = slidesPerGroup;
      }
      var from = Math.max((activeIndex || 0) - slidesBefore, 0);
      var to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);
      var offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);

      Utils.extend(swiper.virtual, {
        from: from,
        to: to,
        offset: offset,
        slidesGrid: swiper.slidesGrid,
      });

      function onRendered() {
        swiper.updateSlides();
        swiper.updateProgress();
        swiper.updateSlidesClasses();
        if (swiper.lazy && swiper.params.lazy.enabled) {
          swiper.lazy.load();
        }
      }

      if (previousFrom === from && previousTo === to && !force) {
        if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {
          swiper.slides.css(offsetProp, (offset + "px"));
        }
        swiper.updateProgress();
        return;
      }
      if (swiper.params.virtual.renderExternal) {
        swiper.params.virtual.renderExternal.call(swiper, {
          offset: offset,
          from: from,
          to: to,
          slides: (function getSlides() {
            var slidesToRender = [];
            for (var i = from; i <= to; i += 1) {
              slidesToRender.push(slides[i]);
            }
            return slidesToRender;
          }()),
        });
        onRendered();
        return;
      }
      var prependIndexes = [];
      var appendIndexes = [];
      if (force) {
        swiper.$wrapperEl.find(("." + (swiper.params.slideClass))).remove();
      } else {
        for (var i = previousFrom; i <= previousTo; i += 1) {
          if (i < from || i > to) {
            swiper.$wrapperEl.find(("." + (swiper.params.slideClass) + "[data-swiper-slide-index=\"" + i + "\"]")).remove();
          }
        }
      }
      for (var i$1 = 0; i$1 < slides.length; i$1 += 1) {
        if (i$1 >= from && i$1 <= to) {
          if (typeof previousTo === 'undefined' || force) {
            appendIndexes.push(i$1);
          } else {
            if (i$1 > previousTo) { appendIndexes.push(i$1); }
            if (i$1 < previousFrom) { prependIndexes.push(i$1); }
          }
        }
      }
      appendIndexes.forEach(function (index) {
        swiper.$wrapperEl.append(renderSlide(slides[index], index));
      });
      prependIndexes.sort(function (a, b) { return a < b; }).forEach(function (index) {
        swiper.$wrapperEl.prepend(renderSlide(slides[index], index));
      });
      swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, (offset + "px"));
      onRendered();
    },
    renderSlide: function renderSlide(slide, index) {
      var swiper = this;
      var params = swiper.params.virtual;
      if (params.cache && swiper.virtual.cache[index]) {
        return swiper.virtual.cache[index];
      }
      var $slideEl = params.renderSlide
        ? $(params.renderSlide.call(swiper, slide, index))
        : $(("<div class=\"" + (swiper.params.slideClass) + "\" data-swiper-slide-index=\"" + index + "\">" + slide + "</div>"));
      if (!$slideEl.attr('data-swiper-slide-index')) { $slideEl.attr('data-swiper-slide-index', index); }
      if (params.cache) { swiper.virtual.cache[index] = $slideEl; }
      return $slideEl;
    },
    appendSlide: function appendSlide(slide) {
      var swiper = this;
      swiper.virtual.slides.push(slide);
      swiper.virtual.update(true);
    },
    prependSlide: function prependSlide(slide) {
      var swiper = this;
      swiper.virtual.slides.unshift(slide);
      if (swiper.params.virtual.cache) {
        var cache = swiper.virtual.cache;
        var newCache = {};
        Object.keys(cache).forEach(function (cachedIndex) {
          newCache[cachedIndex + 1] = cache[cachedIndex];
        });
        swiper.virtual.cache = newCache;
      }
      swiper.virtual.update(true);
      swiper.slideNext(0);
    },
  };

  var Virtual$1 = {
    name: 'virtual',
    params: {
      virtual: {
        enabled: false,
        slides: [],
        cache: true,
        renderSlide: null,
        renderExternal: null,
      },
    },
    create: function create() {
      var swiper = this;
      Utils.extend(swiper, {
        virtual: {
          update: Virtual.update.bind(swiper),
          appendSlide: Virtual.appendSlide.bind(swiper),
          prependSlide: Virtual.prependSlide.bind(swiper),
          renderSlide: Virtual.renderSlide.bind(swiper),
          slides: swiper.params.virtual.slides,
          cache: {},
        },
      });
    },
    on: {
      beforeInit: function beforeInit() {
        var swiper = this;
        if (!swiper.params.virtual.enabled) { return; }
        swiper.classNames.push(((swiper.params.containerModifierClass) + "virtual"));
        var overwriteParams = {
          watchSlidesProgress: true,
        };
        Utils.extend(swiper.params, overwriteParams);
        Utils.extend(swiper.originalParams, overwriteParams);

        swiper.virtual.update();
      },
      setTranslate: function setTranslate() {
        var swiper = this;
        if (!swiper.params.virtual.enabled) { return; }
        swiper.virtual.update();
      },
    },
  };

  var Keyboard = {
    handle: function handle(event) {
      var swiper = this;
      var rtl = swiper.rtlTranslate;
      var e = event;
      if (e.originalEvent) { e = e.originalEvent; } // jquery fix
      var kc = e.keyCode || e.charCode;
      // Directions locks
      if (!swiper.allowSlideNext && ((swiper.isHorizontal() && kc === 39) || (swiper.isVertical() && kc === 40))) {
        return false;
      }
      if (!swiper.allowSlidePrev && ((swiper.isHorizontal() && kc === 37) || (swiper.isVertical() && kc === 38))) {
        return false;
      }
      if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {
        return undefined;
      }
      if (doc.activeElement && doc.activeElement.nodeName && (doc.activeElement.nodeName.toLowerCase() === 'input' || doc.activeElement.nodeName.toLowerCase() === 'textarea')) {
        return undefined;
      }
      if (swiper.params.keyboard.onlyInViewport && (kc === 37 || kc === 39 || kc === 38 || kc === 40)) {
        var inView = false;
        // Check that swiper should be inside of visible area of window
        if (swiper.$el.parents(("." + (swiper.params.slideClass))).length > 0 && swiper.$el.parents(("." + (swiper.params.slideActiveClass))).length === 0) {
          return undefined;
        }
        var windowWidth = win.innerWidth;
        var windowHeight = win.innerHeight;
        var swiperOffset = swiper.$el.offset();
        if (rtl) { swiperOffset.left -= swiper.$el[0].scrollLeft; }
        var swiperCoord = [
          [swiperOffset.left, swiperOffset.top],
          [swiperOffset.left + swiper.width, swiperOffset.top],
          [swiperOffset.left, swiperOffset.top + swiper.height],
          [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height] ];
        for (var i = 0; i < swiperCoord.length; i += 1) {
          var point = swiperCoord[i];
          if (
            point[0] >= 0 && point[0] <= windowWidth &&
            point[1] >= 0 && point[1] <= windowHeight
          ) {
            inView = true;
          }
        }
        if (!inView) { return undefined; }
      }
      if (swiper.isHorizontal()) {
        if (kc === 37 || kc === 39) {
          if (e.preventDefault) { e.preventDefault(); }
          else { e.returnValue = false; }
        }
        if ((kc === 39 && !rtl) || (kc === 37 && rtl)) { swiper.slideNext(); }
        if ((kc === 37 && !rtl) || (kc === 39 && rtl)) { swiper.slidePrev(); }
      } else {
        if (kc === 38 || kc === 40) {
          if (e.preventDefault) { e.preventDefault(); }
          else { e.returnValue = false; }
        }
        if (kc === 40) { swiper.slideNext(); }
        if (kc === 38) { swiper.slidePrev(); }
      }
      swiper.emit('keyPress', kc);
      return undefined;
    },
    enable: function enable() {
      var swiper = this;
      if (swiper.keyboard.enabled) { return; }
      $(doc).on('keydown', swiper.keyboard.handle);
      swiper.keyboard.enabled = true;
    },
    disable: function disable() {
      var swiper = this;
      if (!swiper.keyboard.enabled) { return; }
      $(doc).off('keydown', swiper.keyboard.handle);
      swiper.keyboard.enabled = false;
    },
  };

  var Keyboard$1 = {
    name: 'keyboard',
    params: {
      keyboard: {
        enabled: false,
        onlyInViewport: true,
      },
    },
    create: function create() {
      var swiper = this;
      Utils.extend(swiper, {
        keyboard: {
          enabled: false,
          enable: Keyboard.enable.bind(swiper),
          disable: Keyboard.disable.bind(swiper),
          handle: Keyboard.handle.bind(swiper),
        },
      });
    },
    on: {
      init: function init() {
        var swiper = this;
        if (swiper.params.keyboard.enabled) {
          swiper.keyboard.enable();
        }
      },
      destroy: function destroy() {
        var swiper = this;
        if (swiper.keyboard.enabled) {
          swiper.keyboard.disable();
        }
      },
    },
  };

  function isEventSupported() {
    var eventName = 'onwheel';
    var isSupported = eventName in doc;

    if (!isSupported) {
      var element = doc.createElement('div');
      element.setAttribute(eventName, 'return;');
      isSupported = typeof element[eventName] === 'function';
    }

    if (!isSupported &&
      doc.implementation &&
      doc.implementation.hasFeature &&
      // always returns true in newer browsers as per the standard.
      // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
      doc.implementation.hasFeature('', '') !== true
    ) {
      // This is the only way to test support for the `wheel` event in IE9+.
      isSupported = doc.implementation.hasFeature('Events.wheel', '3.0');
    }

    return isSupported;
  }
  var Mousewheel = {
    lastScrollTime: Utils.now(),
    event: (function getEvent() {
      if (win.navigator.userAgent.indexOf('firefox') > -1) { return 'DOMMouseScroll'; }
      return isEventSupported() ? 'wheel' : 'mousewheel';
    }()),
    normalize: function normalize(e) {
      // Reasonable defaults
      var PIXEL_STEP = 10;
      var LINE_HEIGHT = 40;
      var PAGE_HEIGHT = 800;

      var sX = 0;
      var sY = 0; // spinX, spinY
      var pX = 0;
      var pY = 0; // pixelX, pixelY

      // Legacy
      if ('detail' in e) {
        sY = e.detail;
      }
      if ('wheelDelta' in e) {
        sY = -e.wheelDelta / 120;
      }
      if ('wheelDeltaY' in e) {
        sY = -e.wheelDeltaY / 120;
      }
      if ('wheelDeltaX' in e) {
        sX = -e.wheelDeltaX / 120;
      }

      // side scrolling on FF with DOMMouseScroll
      if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {
        sX = sY;
        sY = 0;
      }

      pX = sX * PIXEL_STEP;
      pY = sY * PIXEL_STEP;

      if ('deltaY' in e) {
        pY = e.deltaY;
      }
      if ('deltaX' in e) {
        pX = e.deltaX;
      }

      if ((pX || pY) && e.deltaMode) {
        if (e.deltaMode === 1) { // delta in LINE units
          pX *= LINE_HEIGHT;
          pY *= LINE_HEIGHT;
        } else { // delta in PAGE units
          pX *= PAGE_HEIGHT;
          pY *= PAGE_HEIGHT;
        }
      }

      // Fall-back if spin cannot be determined
      if (pX && !sX) {
        sX = (pX < 1) ? -1 : 1;
      }
      if (pY && !sY) {
        sY = (pY < 1) ? -1 : 1;
      }

      return {
        spinX: sX,
        spinY: sY,
        pixelX: pX,
        pixelY: pY,
      };
    },
    handleMouseEnter: function handleMouseEnter() {
      var swiper = this;
      swiper.mouseEntered = true;
    },
    handleMouseLeave: function handleMouseLeave() {
      var swiper = this;
      swiper.mouseEntered = false;
    },
    handle: function handle(event) {
      var e = event;
      var swiper = this;
      var params = swiper.params.mousewheel;

      if (!swiper.mouseEntered && !params.releaseOnEdges) { return true; }

      if (e.originalEvent) { e = e.originalEvent; } // jquery fix
      var delta = 0;
      var rtlFactor = swiper.rtlTranslate ? -1 : 1;

      var data = Mousewheel.normalize(e);

      if (params.forceToAxis) {
        if (swiper.isHorizontal()) {
          if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) { delta = data.pixelX * rtlFactor; }
          else { return true; }
        } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) { delta = data.pixelY; }
        else { return true; }
      } else {
        delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;
      }

      if (delta === 0) { return true; }

      if (params.invert) { delta = -delta; }

      if (!swiper.params.freeMode) {
        if (Utils.now() - swiper.mousewheel.lastScrollTime > 60) {
          if (delta < 0) {
            if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {
              swiper.slideNext();
              swiper.emit('scroll', e);
            } else if (params.releaseOnEdges) { return true; }
          } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {
            swiper.slidePrev();
            swiper.emit('scroll', e);
          } else if (params.releaseOnEdges) { return true; }
        }
        swiper.mousewheel.lastScrollTime = (new win.Date()).getTime();
      } else {
        // Freemode or scrollContainer:
        if (swiper.params.loop) {
          swiper.loopFix();
        }
        var position = swiper.getTranslate() + (delta * params.sensitivity);
        var wasBeginning = swiper.isBeginning;
        var wasEnd = swiper.isEnd;

        if (position >= swiper.minTranslate()) { position = swiper.minTranslate(); }
        if (position <= swiper.maxTranslate()) { position = swiper.maxTranslate(); }

        swiper.setTransition(0);
        swiper.setTranslate(position);
        swiper.updateProgress();
        swiper.updateActiveIndex();
        swiper.updateSlidesClasses();

        if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {
          swiper.updateSlidesClasses();
        }

        if (swiper.params.freeModeSticky) {
          clearTimeout(swiper.mousewheel.timeout);
          swiper.mousewheel.timeout = Utils.nextTick(function () {
            swiper.slideToClosest();
          }, 300);
        }
        // Emit event
        swiper.emit('scroll', e);

        // Stop autoplay
        if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) { swiper.stopAutoplay(); }
        // Return page scroll on edge positions
        if (position === swiper.minTranslate() || position === swiper.maxTranslate()) { return true; }
      }

      if (e.preventDefault) { e.preventDefault(); }
      else { e.returnValue = false; }
      return false;
    },
    enable: function enable() {
      var swiper = this;
      if (!Mousewheel.event) { return false; }
      if (swiper.mousewheel.enabled) { return false; }
      var target = swiper.$el;
      if (swiper.params.mousewheel.eventsTarged !== 'container') {
        target = $(swiper.params.mousewheel.eventsTarged);
      }
      target.on('mouseenter', swiper.mousewheel.handleMouseEnter);
      target.on('mouseleave', swiper.mousewheel.handleMouseLeave);
      target.on(Mousewheel.event, swiper.mousewheel.handle);
      swiper.mousewheel.enabled = true;
      return true;
    },
    disable: function disable() {
      var swiper = this;
      if (!Mousewheel.event) { return false; }
      if (!swiper.mousewheel.enabled) { return false; }
      var target = swiper.$el;
      if (swiper.params.mousewheel.eventsTarged !== 'container') {
        target = $(swiper.params.mousewheel.eventsTarged);
      }
      target.off(Mousewheel.event, swiper.mousewheel.handle);
      swiper.mousewheel.enabled = false;
      return true;
    },
  };

  var Mousewheel$1 = {
    name: 'mousewheel',
    params: {
      mousewheel: {
        enabled: false,
        releaseOnEdges: false,
        invert: false,
        forceToAxis: false,
        sensitivity: 1,
        eventsTarged: 'container',
      },
    },
    create: function create() {
      var swiper = this;
      Utils.extend(swiper, {
        mousewheel: {
          enabled: false,
          enable: Mousewheel.enable.bind(swiper),
          disable: Mousewheel.disable.bind(swiper),
          handle: Mousewheel.handle.bind(swiper),
          handleMouseEnter: Mousewheel.handleMouseEnter.bind(swiper),
          handleMouseLeave: Mousewheel.handleMouseLeave.bind(swiper),
          lastScrollTime: Utils.now(),
        },
      });
    },
    on: {
      init: function init() {
        var swiper = this;
        if (swiper.params.mousewheel.enabled) { swiper.mousewheel.enable(); }
      },
      destroy: function destroy() {
        var swiper = this;
        if (swiper.mousewheel.enabled) { swiper.mousewheel.disable(); }
      },
    },
  };

  var Navigation = {
    update: function update() {
      // Update Navigation Buttons
      var swiper = this;
      var params = swiper.params.navigation;

      if (swiper.params.loop) { return; }
      var ref = swiper.navigation;
      var $nextEl = ref.$nextEl;
      var $prevEl = ref.$prevEl;

      if ($prevEl && $prevEl.length > 0) {
        if (swiper.isBeginning) {
          $prevEl.addClass(params.disabledClass);
        } else {
          $prevEl.removeClass(params.disabledClass);
        }
        $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);
      }
      if ($nextEl && $nextEl.length > 0) {
        if (swiper.isEnd) {
          $nextEl.addClass(params.disabledClass);
        } else {
          $nextEl.removeClass(params.disabledClass);
        }
        $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);
      }
    },
    init: function init() {
      var swiper = this;
      var params = swiper.params.navigation;
      if (!(params.nextEl || params.prevEl)) { return; }

      var $nextEl;
      var $prevEl;
      if (params.nextEl) {
        $nextEl = $(params.nextEl);
        if (
          swiper.params.uniqueNavElements &&
          typeof params.nextEl === 'string' &&
          $nextEl.length > 1 &&
          swiper.$el.find(params.nextEl).length === 1
        ) {
          $nextEl = swiper.$el.find(params.nextEl);
        }
      }
      if (params.prevEl) {
        $prevEl = $(params.prevEl);
        if (
          swiper.params.uniqueNavElements &&
          typeof params.prevEl === 'string' &&
          $prevEl.length > 1 &&
          swiper.$el.find(params.prevEl).length === 1
        ) {
          $prevEl = swiper.$el.find(params.prevEl);
        }
      }

      if ($nextEl && $nextEl.length > 0) {
        $nextEl.on('click', function (e) {
          e.preventDefault();
          if (swiper.isEnd && !swiper.params.loop) { return; }
          swiper.slideNext();
        });
      }
      if ($prevEl && $prevEl.length > 0) {
        $prevEl.on('click', function (e) {
          e.preventDefault();
          if (swiper.isBeginning && !swiper.params.loop) { return; }
          swiper.slidePrev();
        });
      }

      Utils.extend(swiper.navigation, {
        $nextEl: $nextEl,
        nextEl: $nextEl && $nextEl[0],
        $prevEl: $prevEl,
        prevEl: $prevEl && $prevEl[0],
      });
    },
    destroy: function destroy() {
      var swiper = this;
      var ref = swiper.navigation;
      var $nextEl = ref.$nextEl;
      var $prevEl = ref.$prevEl;
      if ($nextEl && $nextEl.length) {
        $nextEl.off('click');
        $nextEl.removeClass(swiper.params.navigation.disabledClass);
      }
      if ($prevEl && $prevEl.length) {
        $prevEl.off('click');
        $prevEl.removeClass(swiper.params.navigation.disabledClass);
      }
    },
  };

  var Navigation$1 = {
    name: 'navigation',
    params: {
      navigation: {
        nextEl: null,
        prevEl: null,

        hideOnClick: false,
        disabledClass: 'swiper-button-disabled',
        hiddenClass: 'swiper-button-hidden',
        lockClass: 'swiper-button-lock',
      },
    },
    create: function create() {
      var swiper = this;
      Utils.extend(swiper, {
        navigation: {
          init: Navigation.init.bind(swiper),
          update: Navigation.update.bind(swiper),
          destroy: Navigation.destroy.bind(swiper),
        },
      });
    },
    on: {
      init: function init() {
        var swiper = this;
        swiper.navigation.init();
        swiper.navigation.update();
      },
      toEdge: function toEdge() {
        var swiper = this;
        swiper.navigation.update();
      },
      fromEdge: function fromEdge() {
        var swiper = this;
        swiper.navigation.update();
      },
      destroy: function destroy() {
        var swiper = this;
        swiper.navigation.destroy();
      },
      click: function click(e) {
        var swiper = this;
        var ref = swiper.navigation;
        var $nextEl = ref.$nextEl;
        var $prevEl = ref.$prevEl;
        if (
          swiper.params.navigation.hideOnClick &&
          !$(e.target).is($prevEl) &&
          !$(e.target).is($nextEl)
        ) {
          if ($nextEl) { $nextEl.toggleClass(swiper.params.navigation.hiddenClass); }
          if ($prevEl) { $prevEl.toggleClass(swiper.params.navigation.hiddenClass); }
        }
      },
    },
  };

  var Pagination = {
    update: function update() {
      // Render || Update Pagination bullets/items
      var swiper = this;
      var rtl = swiper.rtl;
      var params = swiper.params.pagination;
      if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) { return; }
      var slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;
      var $el = swiper.pagination.$el;
      // Current/Total
      var current;
      var total = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;
      if (swiper.params.loop) {
        current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);
        if (current > slidesLength - 1 - (swiper.loopedSlides * 2)) {
          current -= (slidesLength - (swiper.loopedSlides * 2));
        }
        if (current > total - 1) { current -= total; }
        if (current < 0 && swiper.params.paginationType !== 'bullets') { current = total + current; }
      } else if (typeof swiper.snapIndex !== 'undefined') {
        current = swiper.snapIndex;
      } else {
        current = swiper.activeIndex || 0;
      }
      // Types
      if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {
        var bullets = swiper.pagination.bullets;
        var firstIndex;
        var lastIndex;
        var midIndex;
        if (params.dynamicBullets) {
          swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);
          $el.css(swiper.isHorizontal() ? 'width' : 'height', ((swiper.pagination.bulletSize * (params.dynamicMainBullets + 4)) + "px"));
          if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {
            swiper.pagination.dynamicBulletIndex += (current - swiper.previousIndex);
            if (swiper.pagination.dynamicBulletIndex > (params.dynamicMainBullets - 1)) {
              swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;
            } else if (swiper.pagination.dynamicBulletIndex < 0) {
              swiper.pagination.dynamicBulletIndex = 0;
            }
          }
          firstIndex = current - swiper.pagination.dynamicBulletIndex;
          lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);
          midIndex = (lastIndex + firstIndex) / 2;
        }
        bullets.removeClass(((params.bulletActiveClass) + " " + (params.bulletActiveClass) + "-next " + (params.bulletActiveClass) + "-next-next " + (params.bulletActiveClass) + "-prev " + (params.bulletActiveClass) + "-prev-prev " + (params.bulletActiveClass) + "-main"));
        if ($el.length > 1) {
          bullets.each(function (index, bullet) {
            var $bullet = $(bullet);
            var bulletIndex = $bullet.index();
            if (bulletIndex === current) {
              $bullet.addClass(params.bulletActiveClass);
            }
            if (params.dynamicBullets) {
              if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {
                $bullet.addClass(((params.bulletActiveClass) + "-main"));
              }
              if (bulletIndex === firstIndex) {
                $bullet
                  .prev()
                  .addClass(((params.bulletActiveClass) + "-prev"))
                  .prev()
                  .addClass(((params.bulletActiveClass) + "-prev-prev"));
              }
              if (bulletIndex === lastIndex) {
                $bullet
                  .next()
                  .addClass(((params.bulletActiveClass) + "-next"))
                  .next()
                  .addClass(((params.bulletActiveClass) + "-next-next"));
              }
            }
          });
        } else {
          var $bullet = bullets.eq(current);
          $bullet.addClass(params.bulletActiveClass);
          if (params.dynamicBullets) {
            var $firstDisplayedBullet = bullets.eq(firstIndex);
            var $lastDisplayedBullet = bullets.eq(lastIndex);
            for (var i = firstIndex; i <= lastIndex; i += 1) {
              bullets.eq(i).addClass(((params.bulletActiveClass) + "-main"));
            }
            $firstDisplayedBullet
              .prev()
              .addClass(((params.bulletActiveClass) + "-prev"))
              .prev()
              .addClass(((params.bulletActiveClass) + "-prev-prev"));
            $lastDisplayedBullet
              .next()
              .addClass(((params.bulletActiveClass) + "-next"))
              .next()
              .addClass(((params.bulletActiveClass) + "-next-next"));
          }
        }
        if (params.dynamicBullets) {
          var dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);
          var bulletsOffset = (((swiper.pagination.bulletSize * dynamicBulletsLength) - (swiper.pagination.bulletSize)) / 2) - (midIndex * swiper.pagination.bulletSize);
          var offsetProp = rtl ? 'right' : 'left';
          bullets.css(swiper.isHorizontal() ? offsetProp : 'top', (bulletsOffset + "px"));
        }
      }
      if (params.type === 'fraction') {
        $el.find(("." + (params.currentClass))).text(current + 1);
        $el.find(("." + (params.totalClass))).text(total);
      }
      if (params.type === 'progressbar') {
        var progressbarDirection;
        if (params.progressbarOpposite) {
          progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';
        } else {
          progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';
        }
        var scale = (current + 1) / total;
        var scaleX = 1;
        var scaleY = 1;
        if (progressbarDirection === 'horizontal') {
          scaleX = scale;
        } else {
          scaleY = scale;
        }
        $el.find(("." + (params.progressbarFillClass))).transform(("translate3d(0,0,0) scaleX(" + scaleX + ") scaleY(" + scaleY + ")")).transition(swiper.params.speed);
      }
      if (params.type === 'custom' && params.renderCustom) {
        $el.html(params.renderCustom(swiper, current + 1, total));
        swiper.emit('paginationRender', swiper, $el[0]);
      } else {
        swiper.emit('paginationUpdate', swiper, $el[0]);
      }
      $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);
    },
    render: function render() {
      // Render Container
      var swiper = this;
      var params = swiper.params.pagination;
      if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) { return; }
      var slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;

      var $el = swiper.pagination.$el;
      var paginationHTML = '';
      if (params.type === 'bullets') {
        var numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;
        for (var i = 0; i < numberOfBullets; i += 1) {
          if (params.renderBullet) {
            paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);
          } else {
            paginationHTML += "<" + (params.bulletElement) + " class=\"" + (params.bulletClass) + "\"></" + (params.bulletElement) + ">";
          }
        }
        $el.html(paginationHTML);
        swiper.pagination.bullets = $el.find(("." + (params.bulletClass)));
      }
      if (params.type === 'fraction') {
        if (params.renderFraction) {
          paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);
        } else {
          paginationHTML =
          "<span class=\"" + (params.currentClass) + "\"></span>" +
          ' / ' +
          "<span class=\"" + (params.totalClass) + "\"></span>";
        }
        $el.html(paginationHTML);
      }
      if (params.type === 'progressbar') {
        if (params.renderProgressbar) {
          paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);
        } else {
          paginationHTML = "<span class=\"" + (params.progressbarFillClass) + "\"></span>";
        }
        $el.html(paginationHTML);
      }
      if (params.type !== 'custom') {
        swiper.emit('paginationRender', swiper.pagination.$el[0]);
      }
    },
    init: function init() {
      var swiper = this;
      var params = swiper.params.pagination;
      if (!params.el) { return; }

      var $el = $(params.el);
      if ($el.length === 0) { return; }

      if (
        swiper.params.uniqueNavElements &&
        typeof params.el === 'string' &&
        $el.length > 1 &&
        swiper.$el.find(params.el).length === 1
      ) {
        $el = swiper.$el.find(params.el);
      }

      if (params.type === 'bullets' && params.clickable) {
        $el.addClass(params.clickableClass);
      }

      $el.addClass(params.modifierClass + params.type);

      if (params.type === 'bullets' && params.dynamicBullets) {
        $el.addClass(("" + (params.modifierClass) + (params.type) + "-dynamic"));
        swiper.pagination.dynamicBulletIndex = 0;
        if (params.dynamicMainBullets < 1) {
          params.dynamicMainBullets = 1;
        }
      }
      if (params.type === 'progressbar' && params.progressbarOpposite) {
        $el.addClass(params.progressbarOppositeClass);
      }

      if (params.clickable) {
        $el.on('click', ("." + (params.bulletClass)), function onClick(e) {
          e.preventDefault();
          var index = $(this).index() * swiper.params.slidesPerGroup;
          if (swiper.params.loop) { index += swiper.loopedSlides; }
          swiper.slideTo(index);
        });
      }

      Utils.extend(swiper.pagination, {
        $el: $el,
        el: $el[0],
      });
    },
    destroy: function destroy() {
      var swiper = this;
      var params = swiper.params.pagination;
      if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) { return; }
      var $el = swiper.pagination.$el;

      $el.removeClass(params.hiddenClass);
      $el.removeClass(params.modifierClass + params.type);
      if (swiper.pagination.bullets) { swiper.pagination.bullets.removeClass(params.bulletActiveClass); }
      if (params.clickable) {
        $el.off('click', ("." + (params.bulletClass)));
      }
    },
  };

  var Pagination$1 = {
    name: 'pagination',
    params: {
      pagination: {
        el: null,
        bulletElement: 'span',
        clickable: false,
        hideOnClick: false,
        renderBullet: null,
        renderProgressbar: null,
        renderFraction: null,
        renderCustom: null,
        progressbarOpposite: false,
        type: 'bullets', // 'bullets' or 'progressbar' or 'fraction' or 'custom'
        dynamicBullets: false,
        dynamicMainBullets: 1,
        bulletClass: 'swiper-pagination-bullet',
        bulletActiveClass: 'swiper-pagination-bullet-active',
        modifierClass: 'swiper-pagination-', // NEW
        currentClass: 'swiper-pagination-current',
        totalClass: 'swiper-pagination-total',
        hiddenClass: 'swiper-pagination-hidden',
        progressbarFillClass: 'swiper-pagination-progressbar-fill',
        progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',
        clickableClass: 'swiper-pagination-clickable', // NEW
        lockClass: 'swiper-pagination-lock',
      },
    },
    create: function create() {
      var swiper = this;
      Utils.extend(swiper, {
        pagination: {
          init: Pagination.init.bind(swiper),
          render: Pagination.render.bind(swiper),
          update: Pagination.update.bind(swiper),
          destroy: Pagination.destroy.bind(swiper),
          dynamicBulletIndex: 0,
        },
      });
    },
    on: {
      init: function init() {
        var swiper = this;
        swiper.pagination.init();
        swiper.pagination.render();
        swiper.pagination.update();
      },
      activeIndexChange: function activeIndexChange() {
        var swiper = this;
        if (swiper.params.loop) {
          swiper.pagination.update();
        } else if (typeof swiper.snapIndex === 'undefined') {
          swiper.pagination.update();
        }
      },
      snapIndexChange: function snapIndexChange() {
        var swiper = this;
        if (!swiper.params.loop) {
          swiper.pagination.update();
        }
      },
      slidesLengthChange: function slidesLengthChange() {
        var swiper = this;
        if (swiper.params.loop) {
          swiper.pagination.render();
          swiper.pagination.update();
        }
      },
      snapGridLengthChange: function snapGridLengthChange() {
        var swiper = this;
        if (!swiper.params.loop) {
          swiper.pagination.render();
          swiper.pagination.update();
        }
      },
      destroy: function destroy() {
        var swiper = this;
        swiper.pagination.destroy();
      },
      click: function click(e) {
        var swiper = this;
        if (
          swiper.params.pagination.el &&
          swiper.params.pagination.hideOnClick &&
          swiper.pagination.$el.length > 0 &&
          !$(e.target).hasClass(swiper.params.pagination.bulletClass)
        ) {
          swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);
        }
      },
    },
  };

  var Scrollbar = {
    setTranslate: function setTranslate() {
      var swiper = this;
      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) { return; }
      var scrollbar = swiper.scrollbar;
      var rtl = swiper.rtlTranslate;
      var progress = swiper.progress;
      var dragSize = scrollbar.dragSize;
      var trackSize = scrollbar.trackSize;
      var $dragEl = scrollbar.$dragEl;
      var $el = scrollbar.$el;
      var params = swiper.params.scrollbar;

      var newSize = dragSize;
      var newPos = (trackSize - dragSize) * progress;
      if (rtl) {
        newPos = -newPos;
        if (newPos > 0) {
          newSize = dragSize - newPos;
          newPos = 0;
        } else if (-newPos + dragSize > trackSize) {
          newSize = trackSize + newPos;
        }
      } else if (newPos < 0) {
        newSize = dragSize + newPos;
        newPos = 0;
      } else if (newPos + dragSize > trackSize) {
        newSize = trackSize - newPos;
      }
      if (swiper.isHorizontal()) {
        if (Support.transforms3d) {
          $dragEl.transform(("translate3d(" + newPos + "px, 0, 0)"));
        } else {
          $dragEl.transform(("translateX(" + newPos + "px)"));
        }
        $dragEl[0].style.width = newSize + "px";
      } else {
        if (Support.transforms3d) {
          $dragEl.transform(("translate3d(0px, " + newPos + "px, 0)"));
        } else {
          $dragEl.transform(("translateY(" + newPos + "px)"));
        }
        $dragEl[0].style.height = newSize + "px";
      }
      if (params.hide) {
        clearTimeout(swiper.scrollbar.timeout);
        $el[0].style.opacity = 1;
        swiper.scrollbar.timeout = setTimeout(function () {
          $el[0].style.opacity = 0;
          $el.transition(400);
        }, 1000);
      }
    },
    setTransition: function setTransition(duration) {
      var swiper = this;
      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) { return; }
      swiper.scrollbar.$dragEl.transition(duration);
    },
    updateSize: function updateSize() {
      var swiper = this;
      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) { return; }

      var scrollbar = swiper.scrollbar;
      var $dragEl = scrollbar.$dragEl;
      var $el = scrollbar.$el;

      $dragEl[0].style.width = '';
      $dragEl[0].style.height = '';
      var trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;

      var divider = swiper.size / swiper.virtualSize;
      var moveDivider = divider * (trackSize / swiper.size);
      var dragSize;
      if (swiper.params.scrollbar.dragSize === 'auto') {
        dragSize = trackSize * divider;
      } else {
        dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);
      }

      if (swiper.isHorizontal()) {
        $dragEl[0].style.width = dragSize + "px";
      } else {
        $dragEl[0].style.height = dragSize + "px";
      }

      if (divider >= 1) {
        $el[0].style.display = 'none';
      } else {
        $el[0].style.display = '';
      }
      if (swiper.params.scrollbarHide) {
        $el[0].style.opacity = 0;
      }
      Utils.extend(scrollbar, {
        trackSize: trackSize,
        divider: divider,
        moveDivider: moveDivider,
        dragSize: dragSize,
      });
      scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);
    },
    setDragPosition: function setDragPosition(e) {
      var swiper = this;
      var scrollbar = swiper.scrollbar;
      var rtl = swiper.rtlTranslate;
      var $el = scrollbar.$el;
      var dragSize = scrollbar.dragSize;
      var trackSize = scrollbar.trackSize;

      var pointerPosition;
      if (swiper.isHorizontal()) {
        pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageX : e.pageX || e.clientX);
      } else {
        pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageY : e.pageY || e.clientY);
      }
      var positionRatio;
      positionRatio = ((pointerPosition) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragSize / 2)) / (trackSize - dragSize);
      positionRatio = Math.max(Math.min(positionRatio, 1), 0);
      if (rtl) {
        positionRatio = 1 - positionRatio;
      }

      var position = swiper.minTranslate() + ((swiper.maxTranslate() - swiper.minTranslate()) * positionRatio);

      swiper.updateProgress(position);
      swiper.setTranslate(position);
      swiper.updateActiveIndex();
      swiper.updateSlidesClasses();
    },
    onDragStart: function onDragStart(e) {
      var swiper = this;
      var params = swiper.params.scrollbar;
      var scrollbar = swiper.scrollbar;
      var $wrapperEl = swiper.$wrapperEl;
      var $el = scrollbar.$el;
      var $dragEl = scrollbar.$dragEl;
      swiper.scrollbar.isTouched = true;
      e.preventDefault();
      e.stopPropagation();

      $wrapperEl.transition(100);
      $dragEl.transition(100);
      scrollbar.setDragPosition(e);

      clearTimeout(swiper.scrollbar.dragTimeout);

      $el.transition(0);
      if (params.hide) {
        $el.css('opacity', 1);
      }
      swiper.emit('scrollbarDragStart', e);
    },
    onDragMove: function onDragMove(e) {
      var swiper = this;
      var scrollbar = swiper.scrollbar;
      var $wrapperEl = swiper.$wrapperEl;
      var $el = scrollbar.$el;
      var $dragEl = scrollbar.$dragEl;

      if (!swiper.scrollbar.isTouched) { return; }
      if (e.preventDefault) { e.preventDefault(); }
      else { e.returnValue = false; }
      scrollbar.setDragPosition(e);
      $wrapperEl.transition(0);
      $el.transition(0);
      $dragEl.transition(0);
      swiper.emit('scrollbarDragMove', e);
    },
    onDragEnd: function onDragEnd(e) {
      var swiper = this;

      var params = swiper.params.scrollbar;
      var scrollbar = swiper.scrollbar;
      var $el = scrollbar.$el;

      if (!swiper.scrollbar.isTouched) { return; }
      swiper.scrollbar.isTouched = false;
      if (params.hide) {
        clearTimeout(swiper.scrollbar.dragTimeout);
        swiper.scrollbar.dragTimeout = Utils.nextTick(function () {
          $el.css('opacity', 0);
          $el.transition(400);
        }, 1000);
      }
      swiper.emit('scrollbarDragEnd', e);
      if (params.snapOnRelease) {
        swiper.slideToClosest();
      }
    },
    enableDraggable: function enableDraggable() {
      var swiper = this;
      if (!swiper.params.scrollbar.el) { return; }
      var scrollbar = swiper.scrollbar;
      var touchEvents = swiper.touchEvents;
      var touchEventsDesktop = swiper.touchEventsDesktop;
      var params = swiper.params;
      var $el = scrollbar.$el;
      var target = $el[0];
      var activeListener = Support.passiveListener && params.passiveListener ? { passive: false, capture: false } : false;
      var passiveListener = Support.passiveListener && params.passiveListener ? { passive: true, capture: false } : false;
      if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {
        target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);
        doc.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);
        doc.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);
      } else {
        if (Support.touch) {
          target.addEventListener(touchEvents.start, swiper.scrollbar.onDragStart, activeListener);
          target.addEventListener(touchEvents.move, swiper.scrollbar.onDragMove, activeListener);
          target.addEventListener(touchEvents.end, swiper.scrollbar.onDragEnd, passiveListener);
        }
        if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {
          target.addEventListener('mousedown', swiper.scrollbar.onDragStart, activeListener);
          doc.addEventListener('mousemove', swiper.scrollbar.onDragMove, activeListener);
          doc.addEventListener('mouseup', swiper.scrollbar.onDragEnd, passiveListener);
        }
      }
    },
    disableDraggable: function disableDraggable() {
      var swiper = this;
      if (!swiper.params.scrollbar.el) { return; }
      var scrollbar = swiper.scrollbar;
      var touchEvents = swiper.touchEvents;
      var touchEventsDesktop = swiper.touchEventsDesktop;
      var params = swiper.params;
      var $el = scrollbar.$el;
      var target = $el[0];
      var activeListener = Support.passiveListener && params.passiveListener ? { passive: false, capture: false } : false;
      var passiveListener = Support.passiveListener && params.passiveListener ? { passive: true, capture: false } : false;
      if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {
        target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);
        doc.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);
        doc.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);
      } else {
        if (Support.touch) {
          target.removeEventListener(touchEvents.start, swiper.scrollbar.onDragStart, activeListener);
          target.removeEventListener(touchEvents.move, swiper.scrollbar.onDragMove, activeListener);
          target.removeEventListener(touchEvents.end, swiper.scrollbar.onDragEnd, passiveListener);
        }
        if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {
          target.removeEventListener('mousedown', swiper.scrollbar.onDragStart, activeListener);
          doc.removeEventListener('mousemove', swiper.scrollbar.onDragMove, activeListener);
          doc.removeEventListener('mouseup', swiper.scrollbar.onDragEnd, passiveListener);
        }
      }
    },
    init: function init() {
      var swiper = this;
      if (!swiper.params.scrollbar.el) { return; }
      var scrollbar = swiper.scrollbar;
      var $swiperEl = swiper.$el;
      var params = swiper.params.scrollbar;

      var $el = $(params.el);
      if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {
        $el = $swiperEl.find(params.el);
      }

      var $dragEl = $el.find(("." + (swiper.params.scrollbar.dragClass)));
      if ($dragEl.length === 0) {
        $dragEl = $(("<div class=\"" + (swiper.params.scrollbar.dragClass) + "\"></div>"));
        $el.append($dragEl);
      }

      Utils.extend(scrollbar, {
        $el: $el,
        el: $el[0],
        $dragEl: $dragEl,
        dragEl: $dragEl[0],
      });

      if (params.draggable) {
        scrollbar.enableDraggable();
      }
    },
    destroy: function destroy() {
      var swiper = this;
      swiper.scrollbar.disableDraggable();
    },
  };

  var Scrollbar$1 = {
    name: 'scrollbar',
    params: {
      scrollbar: {
        el: null,
        dragSize: 'auto',
        hide: false,
        draggable: false,
        snapOnRelease: true,
        lockClass: 'swiper-scrollbar-lock',
        dragClass: 'swiper-scrollbar-drag',
      },
    },
    create: function create() {
      var swiper = this;
      Utils.extend(swiper, {
        scrollbar: {
          init: Scrollbar.init.bind(swiper),
          destroy: Scrollbar.destroy.bind(swiper),
          updateSize: Scrollbar.updateSize.bind(swiper),
          setTranslate: Scrollbar.setTranslate.bind(swiper),
          setTransition: Scrollbar.setTransition.bind(swiper),
          enableDraggable: Scrollbar.enableDraggable.bind(swiper),
          disableDraggable: Scrollbar.disableDraggable.bind(swiper),
          setDragPosition: Scrollbar.setDragPosition.bind(swiper),
          onDragStart: Scrollbar.onDragStart.bind(swiper),
          onDragMove: Scrollbar.onDragMove.bind(swiper),
          onDragEnd: Scrollbar.onDragEnd.bind(swiper),
          isTouched: false,
          timeout: null,
          dragTimeout: null,
        },
      });
    },
    on: {
      init: function init() {
        var swiper = this;
        swiper.scrollbar.init();
        swiper.scrollbar.updateSize();
        swiper.scrollbar.setTranslate();
      },
      update: function update() {
        var swiper = this;
        swiper.scrollbar.updateSize();
      },
      resize: function resize() {
        var swiper = this;
        swiper.scrollbar.updateSize();
      },
      observerUpdate: function observerUpdate() {
        var swiper = this;
        swiper.scrollbar.updateSize();
      },
      setTranslate: function setTranslate() {
        var swiper = this;
        swiper.scrollbar.setTranslate();
      },
      setTransition: function setTransition(duration) {
        var swiper = this;
        swiper.scrollbar.setTransition(duration);
      },
      destroy: function destroy() {
        var swiper = this;
        swiper.scrollbar.destroy();
      },
    },
  };

  var Parallax = {
    setTransform: function setTransform(el, progress) {
      var swiper = this;
      var rtl = swiper.rtl;

      var $el = $(el);
      var rtlFactor = rtl ? -1 : 1;

      var p = $el.attr('data-swiper-parallax') || '0';
      var x = $el.attr('data-swiper-parallax-x');
      var y = $el.attr('data-swiper-parallax-y');
      var scale = $el.attr('data-swiper-parallax-scale');
      var opacity = $el.attr('data-swiper-parallax-opacity');

      if (x || y) {
        x = x || '0';
        y = y || '0';
      } else if (swiper.isHorizontal()) {
        x = p;
        y = '0';
      } else {
        y = p;
        x = '0';
      }

      if ((x).indexOf('%') >= 0) {
        x = (parseInt(x, 10) * progress * rtlFactor) + "%";
      } else {
        x = (x * progress * rtlFactor) + "px";
      }
      if ((y).indexOf('%') >= 0) {
        y = (parseInt(y, 10) * progress) + "%";
      } else {
        y = (y * progress) + "px";
      }

      if (typeof opacity !== 'undefined' && opacity !== null) {
        var currentOpacity = opacity - ((opacity - 1) * (1 - Math.abs(progress)));
        $el[0].style.opacity = currentOpacity;
      }
      if (typeof scale === 'undefined' || scale === null) {
        $el.transform(("translate3d(" + x + ", " + y + ", 0px)"));
      } else {
        var currentScale = scale - ((scale - 1) * (1 - Math.abs(progress)));
        $el.transform(("translate3d(" + x + ", " + y + ", 0px) scale(" + currentScale + ")"));
      }
    },
    setTranslate: function setTranslate() {
      var swiper = this;
      var $el = swiper.$el;
      var slides = swiper.slides;
      var progress = swiper.progress;
      var snapGrid = swiper.snapGrid;
      $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')
        .each(function (index, el) {
          swiper.parallax.setTransform(el, progress);
        });
      slides.each(function (slideIndex, slideEl) {
        var slideProgress = slideEl.progress;
        if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {
          slideProgress += Math.ceil(slideIndex / 2) - (progress * (snapGrid.length - 1));
        }
        slideProgress = Math.min(Math.max(slideProgress, -1), 1);
        $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')
          .each(function (index, el) {
            swiper.parallax.setTransform(el, slideProgress);
          });
      });
    },
    setTransition: function setTransition(duration) {
      if ( duration === void 0 ) duration = this.params.speed;

      var swiper = this;
      var $el = swiper.$el;
      $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')
        .each(function (index, parallaxEl) {
          var $parallaxEl = $(parallaxEl);
          var parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;
          if (duration === 0) { parallaxDuration = 0; }
          $parallaxEl.transition(parallaxDuration);
        });
    },
  };

  var Parallax$1 = {
    name: 'parallax',
    params: {
      parallax: {
        enabled: false,
      },
    },
    create: function create() {
      var swiper = this;
      Utils.extend(swiper, {
        parallax: {
          setTransform: Parallax.setTransform.bind(swiper),
          setTranslate: Parallax.setTranslate.bind(swiper),
          setTransition: Parallax.setTransition.bind(swiper),
        },
      });
    },
    on: {
      beforeInit: function beforeInit() {
        var swiper = this;
        if (!swiper.params.parallax.enabled) { return; }
        swiper.params.watchSlidesProgress = true;
      },
      init: function init() {
        var swiper = this;
        if (!swiper.params.parallax) { return; }
        swiper.parallax.setTranslate();
      },
      setTranslate: function setTranslate() {
        var swiper = this;
        if (!swiper.params.parallax) { return; }
        swiper.parallax.setTranslate();
      },
      setTransition: function setTransition(duration) {
        var swiper = this;
        if (!swiper.params.parallax) { return; }
        swiper.parallax.setTransition(duration);
      },
    },
  };

  var Zoom = {
    // Calc Scale From Multi-touches
    getDistanceBetweenTouches: function getDistanceBetweenTouches(e) {
      if (e.targetTouches.length < 2) { return 1; }
      var x1 = e.targetTouches[0].pageX;
      var y1 = e.targetTouches[0].pageY;
      var x2 = e.targetTouches[1].pageX;
      var y2 = e.targetTouches[1].pageY;
      var distance = Math.sqrt((Math.pow( (x2 - x1), 2 )) + (Math.pow( (y2 - y1), 2 )));
      return distance;
    },
    // Events
    onGestureStart: function onGestureStart(e) {
      var swiper = this;
      var params = swiper.params.zoom;
      var zoom = swiper.zoom;
      var gesture = zoom.gesture;
      zoom.fakeGestureTouched = false;
      zoom.fakeGestureMoved = false;
      if (!Support.gestures) {
        if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {
          return;
        }
        zoom.fakeGestureTouched = true;
        gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);
      }
      if (!gesture.$slideEl || !gesture.$slideEl.length) {
        gesture.$slideEl = $(e.target).closest('.swiper-slide');
        if (gesture.$slideEl.length === 0) { gesture.$slideEl = swiper.slides.eq(swiper.activeIndex); }
        gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');
        gesture.$imageWrapEl = gesture.$imageEl.parent(("." + (params.containerClass)));
        gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;
        if (gesture.$imageWrapEl.length === 0) {
          gesture.$imageEl = undefined;
          return;
        }
      }
      gesture.$imageEl.transition(0);
      swiper.zoom.isScaling = true;
    },
    onGestureChange: function onGestureChange(e) {
      var swiper = this;
      var params = swiper.params.zoom;
      var zoom = swiper.zoom;
      var gesture = zoom.gesture;
      if (!Support.gestures) {
        if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {
          return;
        }
        zoom.fakeGestureMoved = true;
        gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);
      }
      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }
      if (Support.gestures) {
        swiper.zoom.scale = e.scale * zoom.currentScale;
      } else {
        zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;
      }
      if (zoom.scale > gesture.maxRatio) {
        zoom.scale = (gesture.maxRatio - 1) + (Math.pow( ((zoom.scale - gesture.maxRatio) + 1), 0.5 ));
      }
      if (zoom.scale < params.minRatio) {
        zoom.scale = (params.minRatio + 1) - (Math.pow( ((params.minRatio - zoom.scale) + 1), 0.5 ));
      }
      gesture.$imageEl.transform(("translate3d(0,0,0) scale(" + (zoom.scale) + ")"));
    },
    onGestureEnd: function onGestureEnd(e) {
      var swiper = this;
      var params = swiper.params.zoom;
      var zoom = swiper.zoom;
      var gesture = zoom.gesture;
      if (!Support.gestures) {
        if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {
          return;
        }
        if (e.type !== 'touchend' || (e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android)) {
          return;
        }
        zoom.fakeGestureTouched = false;
        zoom.fakeGestureMoved = false;
      }
      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }
      zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);
      gesture.$imageEl.transition(swiper.params.speed).transform(("translate3d(0,0,0) scale(" + (zoom.scale) + ")"));
      zoom.currentScale = zoom.scale;
      zoom.isScaling = false;
      if (zoom.scale === 1) { gesture.$slideEl = undefined; }
    },
    onTouchStart: function onTouchStart(e) {
      var swiper = this;
      var zoom = swiper.zoom;
      var gesture = zoom.gesture;
      var image = zoom.image;
      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }
      if (image.isTouched) { return; }
      if (Device.android) { e.preventDefault(); }
      image.isTouched = true;
      image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;
      image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;
    },
    onTouchMove: function onTouchMove(e) {
      var swiper = this;
      var zoom = swiper.zoom;
      var gesture = zoom.gesture;
      var image = zoom.image;
      var velocity = zoom.velocity;
      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }
      swiper.allowClick = false;
      if (!image.isTouched || !gesture.$slideEl) { return; }

      if (!image.isMoved) {
        image.width = gesture.$imageEl[0].offsetWidth;
        image.height = gesture.$imageEl[0].offsetHeight;
        image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;
        image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;
        gesture.slideWidth = gesture.$slideEl[0].offsetWidth;
        gesture.slideHeight = gesture.$slideEl[0].offsetHeight;
        gesture.$imageWrapEl.transition(0);
        if (swiper.rtl) {
          image.startX = -image.startX;
          image.startY = -image.startY;
        }
      }
      // Define if we need image drag
      var scaledWidth = image.width * zoom.scale;
      var scaledHeight = image.height * zoom.scale;

      if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) { return; }

      image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);
      image.maxX = -image.minX;
      image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);
      image.maxY = -image.minY;

      image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;
      image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;

      if (!image.isMoved && !zoom.isScaling) {
        if (
          swiper.isHorizontal() &&
          (
            (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x) ||
            (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)
          )
        ) {
          image.isTouched = false;
          return;
        } else if (
          !swiper.isHorizontal() &&
          (
            (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y) ||
            (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)
          )
        ) {
          image.isTouched = false;
          return;
        }
      }
      e.preventDefault();
      e.stopPropagation();

      image.isMoved = true;
      image.currentX = (image.touchesCurrent.x - image.touchesStart.x) + image.startX;
      image.currentY = (image.touchesCurrent.y - image.touchesStart.y) + image.startY;

      if (image.currentX < image.minX) {
        image.currentX = (image.minX + 1) - (Math.pow( ((image.minX - image.currentX) + 1), 0.8 ));
      }
      if (image.currentX > image.maxX) {
        image.currentX = (image.maxX - 1) + (Math.pow( ((image.currentX - image.maxX) + 1), 0.8 ));
      }

      if (image.currentY < image.minY) {
        image.currentY = (image.minY + 1) - (Math.pow( ((image.minY - image.currentY) + 1), 0.8 ));
      }
      if (image.currentY > image.maxY) {
        image.currentY = (image.maxY - 1) + (Math.pow( ((image.currentY - image.maxY) + 1), 0.8 ));
      }

      // Velocity
      if (!velocity.prevPositionX) { velocity.prevPositionX = image.touchesCurrent.x; }
      if (!velocity.prevPositionY) { velocity.prevPositionY = image.touchesCurrent.y; }
      if (!velocity.prevTime) { velocity.prevTime = Date.now(); }
      velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;
      velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;
      if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) { velocity.x = 0; }
      if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) { velocity.y = 0; }
      velocity.prevPositionX = image.touchesCurrent.x;
      velocity.prevPositionY = image.touchesCurrent.y;
      velocity.prevTime = Date.now();

      gesture.$imageWrapEl.transform(("translate3d(" + (image.currentX) + "px, " + (image.currentY) + "px,0)"));
    },
    onTouchEnd: function onTouchEnd() {
      var swiper = this;
      var zoom = swiper.zoom;
      var gesture = zoom.gesture;
      var image = zoom.image;
      var velocity = zoom.velocity;
      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }
      if (!image.isTouched || !image.isMoved) {
        image.isTouched = false;
        image.isMoved = false;
        return;
      }
      image.isTouched = false;
      image.isMoved = false;
      var momentumDurationX = 300;
      var momentumDurationY = 300;
      var momentumDistanceX = velocity.x * momentumDurationX;
      var newPositionX = image.currentX + momentumDistanceX;
      var momentumDistanceY = velocity.y * momentumDurationY;
      var newPositionY = image.currentY + momentumDistanceY;

      // Fix duration
      if (velocity.x !== 0) { momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x); }
      if (velocity.y !== 0) { momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y); }
      var momentumDuration = Math.max(momentumDurationX, momentumDurationY);

      image.currentX = newPositionX;
      image.currentY = newPositionY;

      // Define if we need image drag
      var scaledWidth = image.width * zoom.scale;
      var scaledHeight = image.height * zoom.scale;
      image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);
      image.maxX = -image.minX;
      image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);
      image.maxY = -image.minY;
      image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);
      image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);

      gesture.$imageWrapEl.transition(momentumDuration).transform(("translate3d(" + (image.currentX) + "px, " + (image.currentY) + "px,0)"));
    },
    onTransitionEnd: function onTransitionEnd() {
      var swiper = this;
      var zoom = swiper.zoom;
      var gesture = zoom.gesture;
      if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {
        gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');
        gesture.$imageWrapEl.transform('translate3d(0,0,0)');
        gesture.$slideEl = undefined;
        gesture.$imageEl = undefined;
        gesture.$imageWrapEl = undefined;

        zoom.scale = 1;
        zoom.currentScale = 1;
      }
    },
    // Toggle Zoom
    toggle: function toggle(e) {
      var swiper = this;
      var zoom = swiper.zoom;

      if (zoom.scale && zoom.scale !== 1) {
        // Zoom Out
        zoom.out();
      } else {
        // Zoom In
        zoom.in(e);
      }
    },
    in: function in$1(e) {
      var swiper = this;

      var zoom = swiper.zoom;
      var params = swiper.params.zoom;
      var gesture = zoom.gesture;
      var image = zoom.image;

      if (!gesture.$slideEl) {
        gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);
        gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');
        gesture.$imageWrapEl = gesture.$imageEl.parent(("." + (params.containerClass)));
      }
      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }

      gesture.$slideEl.addClass(("" + (params.zoomedSlideClass)));

      var touchX;
      var touchY;
      var offsetX;
      var offsetY;
      var diffX;
      var diffY;
      var translateX;
      var translateY;
      var imageWidth;
      var imageHeight;
      var scaledWidth;
      var scaledHeight;
      var translateMinX;
      var translateMinY;
      var translateMaxX;
      var translateMaxY;
      var slideWidth;
      var slideHeight;

      if (typeof image.touchesStart.x === 'undefined' && e) {
        touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;
        touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;
      } else {
        touchX = image.touchesStart.x;
        touchY = image.touchesStart.y;
      }

      zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;
      zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;
      if (e) {
        slideWidth = gesture.$slideEl[0].offsetWidth;
        slideHeight = gesture.$slideEl[0].offsetHeight;
        offsetX = gesture.$slideEl.offset().left;
        offsetY = gesture.$slideEl.offset().top;
        diffX = (offsetX + (slideWidth / 2)) - touchX;
        diffY = (offsetY + (slideHeight / 2)) - touchY;

        imageWidth = gesture.$imageEl[0].offsetWidth;
        imageHeight = gesture.$imageEl[0].offsetHeight;
        scaledWidth = imageWidth * zoom.scale;
        scaledHeight = imageHeight * zoom.scale;

        translateMinX = Math.min(((slideWidth / 2) - (scaledWidth / 2)), 0);
        translateMinY = Math.min(((slideHeight / 2) - (scaledHeight / 2)), 0);
        translateMaxX = -translateMinX;
        translateMaxY = -translateMinY;

        translateX = diffX * zoom.scale;
        translateY = diffY * zoom.scale;

        if (translateX < translateMinX) {
          translateX = translateMinX;
        }
        if (translateX > translateMaxX) {
          translateX = translateMaxX;
        }

        if (translateY < translateMinY) {
          translateY = translateMinY;
        }
        if (translateY > translateMaxY) {
          translateY = translateMaxY;
        }
      } else {
        translateX = 0;
        translateY = 0;
      }
      gesture.$imageWrapEl.transition(300).transform(("translate3d(" + translateX + "px, " + translateY + "px,0)"));
      gesture.$imageEl.transition(300).transform(("translate3d(0,0,0) scale(" + (zoom.scale) + ")"));
    },
    out: function out() {
      var swiper = this;

      var zoom = swiper.zoom;
      var params = swiper.params.zoom;
      var gesture = zoom.gesture;

      if (!gesture.$slideEl) {
        gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);
        gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');
        gesture.$imageWrapEl = gesture.$imageEl.parent(("." + (params.containerClass)));
      }
      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }

      zoom.scale = 1;
      zoom.currentScale = 1;
      gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');
      gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');
      gesture.$slideEl.removeClass(("" + (params.zoomedSlideClass)));
      gesture.$slideEl = undefined;
    },
    // Attach/Detach Events
    enable: function enable() {
      var swiper = this;
      var zoom = swiper.zoom;
      if (zoom.enabled) { return; }
      zoom.enabled = true;

      var passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;

      // Scale image
      if (Support.gestures) {
        swiper.$wrapperEl.on('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);
        swiper.$wrapperEl.on('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);
        swiper.$wrapperEl.on('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);
      } else if (swiper.touchEvents.start === 'touchstart') {
        swiper.$wrapperEl.on(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);
        swiper.$wrapperEl.on(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);
        swiper.$wrapperEl.on(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);
      }

      // Move image
      swiper.$wrapperEl.on(swiper.touchEvents.move, ("." + (swiper.params.zoom.containerClass)), zoom.onTouchMove);
    },
    disable: function disable() {
      var swiper = this;
      var zoom = swiper.zoom;
      if (!zoom.enabled) { return; }

      swiper.zoom.enabled = false;

      var passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;

      // Scale image
      if (Support.gestures) {
        swiper.$wrapperEl.off('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);
        swiper.$wrapperEl.off('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);
        swiper.$wrapperEl.off('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);
      } else if (swiper.touchEvents.start === 'touchstart') {
        swiper.$wrapperEl.off(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);
        swiper.$wrapperEl.off(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);
        swiper.$wrapperEl.off(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);
      }

      // Move image
      swiper.$wrapperEl.off(swiper.touchEvents.move, ("." + (swiper.params.zoom.containerClass)), zoom.onTouchMove);
    },
  };

  var Zoom$1 = {
    name: 'zoom',
    params: {
      zoom: {
        enabled: false,
        maxRatio: 3,
        minRatio: 1,
        toggle: true,
        containerClass: 'swiper-zoom-container',
        zoomedSlideClass: 'swiper-slide-zoomed',
      },
    },
    create: function create() {
      var swiper = this;
      var zoom = {
        enabled: false,
        scale: 1,
        currentScale: 1,
        isScaling: false,
        gesture: {
          $slideEl: undefined,
          slideWidth: undefined,
          slideHeight: undefined,
          $imageEl: undefined,
          $imageWrapEl: undefined,
          maxRatio: 3,
        },
        image: {
          isTouched: undefined,
          isMoved: undefined,
          currentX: undefined,
          currentY: undefined,
          minX: undefined,
          minY: undefined,
          maxX: undefined,
          maxY: undefined,
          width: undefined,
          height: undefined,
          startX: undefined,
          startY: undefined,
          touchesStart: {},
          touchesCurrent: {},
        },
        velocity: {
          x: undefined,
          y: undefined,
          prevPositionX: undefined,
          prevPositionY: undefined,
          prevTime: undefined,
        },
      };
      ('onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out').split(' ').forEach(function (methodName) {
        zoom[methodName] = Zoom[methodName].bind(swiper);
      });
      Utils.extend(swiper, {
        zoom: zoom,
      });
    },
    on: {
      init: function init() {
        var swiper = this;
        if (swiper.params.zoom.enabled) {
          swiper.zoom.enable();
        }
      },
      destroy: function destroy() {
        var swiper = this;
        swiper.zoom.disable();
      },
      touchStart: function touchStart(e) {
        var swiper = this;
        if (!swiper.zoom.enabled) { return; }
        swiper.zoom.onTouchStart(e);
      },
      touchEnd: function touchEnd(e) {
        var swiper = this;
        if (!swiper.zoom.enabled) { return; }
        swiper.zoom.onTouchEnd(e);
      },
      doubleTap: function doubleTap(e) {
        var swiper = this;
        if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {
          swiper.zoom.toggle(e);
        }
      },
      transitionEnd: function transitionEnd() {
        var swiper = this;
        if (swiper.zoom.enabled && swiper.params.zoom.enabled) {
          swiper.zoom.onTransitionEnd();
        }
      },
    },
  };

  var Lazy = {
    loadInSlide: function loadInSlide(index, loadInDuplicate) {
      if ( loadInDuplicate === void 0 ) loadInDuplicate = true;

      var swiper = this;
      var params = swiper.params.lazy;
      if (typeof index === 'undefined') { return; }
      if (swiper.slides.length === 0) { return; }
      var isVirtual = swiper.virtual && swiper.params.virtual.enabled;

      var $slideEl = isVirtual
        ? swiper.$wrapperEl.children(("." + (swiper.params.slideClass) + "[data-swiper-slide-index=\"" + index + "\"]"))
        : swiper.slides.eq(index);

      var $images = $slideEl.find(("." + (params.elementClass) + ":not(." + (params.loadedClass) + "):not(." + (params.loadingClass) + ")"));
      if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {
        $images = $images.add($slideEl[0]);
      }
      if ($images.length === 0) { return; }

      $images.each(function (imageIndex, imageEl) {
        var $imageEl = $(imageEl);
        $imageEl.addClass(params.loadingClass);

        var background = $imageEl.attr('data-background');
        var src = $imageEl.attr('data-src');
        var srcset = $imageEl.attr('data-srcset');
        var sizes = $imageEl.attr('data-sizes');

        swiper.loadImage($imageEl[0], (src || background), srcset, sizes, false, function () {
          if (typeof swiper === 'undefined' || swiper === null || !swiper || (swiper && !swiper.params) || swiper.destroyed) { return; }
          if (background) {
            $imageEl.css('background-image', ("url(\"" + background + "\")"));
            $imageEl.removeAttr('data-background');
          } else {
            if (srcset) {
              $imageEl.attr('srcset', srcset);
              $imageEl.removeAttr('data-srcset');
            }
            if (sizes) {
              $imageEl.attr('sizes', sizes);
              $imageEl.removeAttr('data-sizes');
            }
            if (src) {
              $imageEl.attr('src', src);
              $imageEl.removeAttr('data-src');
            }
          }

          $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);
          $slideEl.find(("." + (params.preloaderClass))).remove();
          if (swiper.params.loop && loadInDuplicate) {
            var slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');
            if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {
              var originalSlide = swiper.$wrapperEl.children(("[data-swiper-slide-index=\"" + slideOriginalIndex + "\"]:not(." + (swiper.params.slideDuplicateClass) + ")"));
              swiper.lazy.loadInSlide(originalSlide.index(), false);
            } else {
              var duplicatedSlide = swiper.$wrapperEl.children(("." + (swiper.params.slideDuplicateClass) + "[data-swiper-slide-index=\"" + slideOriginalIndex + "\"]"));
              swiper.lazy.loadInSlide(duplicatedSlide.index(), false);
            }
          }
          swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);
        });

        swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);
      });
    },
    load: function load() {
      var swiper = this;
      var $wrapperEl = swiper.$wrapperEl;
      var swiperParams = swiper.params;
      var slides = swiper.slides;
      var activeIndex = swiper.activeIndex;
      var isVirtual = swiper.virtual && swiperParams.virtual.enabled;
      var params = swiperParams.lazy;

      var slidesPerView = swiperParams.slidesPerView;
      if (slidesPerView === 'auto') {
        slidesPerView = 0;
      }

      function slideExist(index) {
        if (isVirtual) {
          if ($wrapperEl.children(("." + (swiperParams.slideClass) + "[data-swiper-slide-index=\"" + index + "\"]")).length) {
            return true;
          }
        } else if (slides[index]) { return true; }
        return false;
      }
      function slideIndex(slideEl) {
        if (isVirtual) {
          return $(slideEl).attr('data-swiper-slide-index');
        }
        return $(slideEl).index();
      }

      if (!swiper.lazy.initialImageLoaded) { swiper.lazy.initialImageLoaded = true; }
      if (swiper.params.watchSlidesVisibility) {
        $wrapperEl.children(("." + (swiperParams.slideVisibleClass))).each(function (elIndex, slideEl) {
          var index = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();
          swiper.lazy.loadInSlide(index);
        });
      } else if (slidesPerView > 1) {
        for (var i = activeIndex; i < activeIndex + slidesPerView; i += 1) {
          if (slideExist(i)) { swiper.lazy.loadInSlide(i); }
        }
      } else {
        swiper.lazy.loadInSlide(activeIndex);
      }
      if (params.loadPrevNext) {
        if (slidesPerView > 1 || (params.loadPrevNextAmount && params.loadPrevNextAmount > 1)) {
          var amount = params.loadPrevNextAmount;
          var spv = slidesPerView;
          var maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);
          var minIndex = Math.max(activeIndex - Math.max(spv, amount), 0);
          // Next Slides
          for (var i$1 = activeIndex + slidesPerView; i$1 < maxIndex; i$1 += 1) {
            if (slideExist(i$1)) { swiper.lazy.loadInSlide(i$1); }
          }
          // Prev Slides
          for (var i$2 = minIndex; i$2 < activeIndex; i$2 += 1) {
            if (slideExist(i$2)) { swiper.lazy.loadInSlide(i$2); }
          }
        } else {
          var nextSlide = $wrapperEl.children(("." + (swiperParams.slideNextClass)));
          if (nextSlide.length > 0) { swiper.lazy.loadInSlide(slideIndex(nextSlide)); }

          var prevSlide = $wrapperEl.children(("." + (swiperParams.slidePrevClass)));
          if (prevSlide.length > 0) { swiper.lazy.loadInSlide(slideIndex(prevSlide)); }
        }
      }
    },
  };

  var Lazy$1 = {
    name: 'lazy',
    params: {
      lazy: {
        enabled: false,
        loadPrevNext: false,
        loadPrevNextAmount: 1,
        loadOnTransitionStart: false,

        elementClass: 'swiper-lazy',
        loadingClass: 'swiper-lazy-loading',
        loadedClass: 'swiper-lazy-loaded',
        preloaderClass: 'swiper-lazy-preloader',
      },
    },
    create: function create() {
      var swiper = this;
      Utils.extend(swiper, {
        lazy: {
          initialImageLoaded: false,
          load: Lazy.load.bind(swiper),
          loadInSlide: Lazy.loadInSlide.bind(swiper),
        },
      });
    },
    on: {
      beforeInit: function beforeInit() {
        var swiper = this;
        if (swiper.params.lazy.enabled && swiper.params.preloadImages) {
          swiper.params.preloadImages = false;
        }
      },
      init: function init() {
        var swiper = this;
        if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {
          swiper.lazy.load();
        }
      },
      scroll: function scroll() {
        var swiper = this;
        if (swiper.params.freeMode && !swiper.params.freeModeSticky) {
          swiper.lazy.load();
        }
      },
      resize: function resize() {
        var swiper = this;
        if (swiper.params.lazy.enabled) {
          swiper.lazy.load();
        }
      },
      scrollbarDragMove: function scrollbarDragMove() {
        var swiper = this;
        if (swiper.params.lazy.enabled) {
          swiper.lazy.load();
        }
      },
      transitionStart: function transitionStart() {
        var swiper = this;
        if (swiper.params.lazy.enabled) {
          if (swiper.params.lazy.loadOnTransitionStart || (!swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded)) {
            swiper.lazy.load();
          }
        }
      },
      transitionEnd: function transitionEnd() {
        var swiper = this;
        if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {
          swiper.lazy.load();
        }
      },
    },
  };

  /* eslint no-bitwise: ["error", { "allow": [">>"] }] */

  var Controller = {
    LinearSpline: function LinearSpline(x, y) {
      var binarySearch = (function search() {
        var maxIndex;
        var minIndex;
        var guess;
        return function (array, val) {
          minIndex = -1;
          maxIndex = array.length;
          while (maxIndex - minIndex > 1) {
            guess = maxIndex + minIndex >> 1;
            if (array[guess] <= val) {
              minIndex = guess;
            } else {
              maxIndex = guess;
            }
          }
          return maxIndex;
        };
      }());
      this.x = x;
      this.y = y;
      this.lastIndex = x.length - 1;
      // Given an x value (x2), return the expected y2 value:
      // (x1,y1) is the known point before given value,
      // (x3,y3) is the known point after given value.
      var i1;
      var i3;

      this.interpolate = function interpolate(x2) {
        if (!x2) { return 0; }

        // Get the indexes of x1 and x3 (the array indexes before and after given x2):
        i3 = binarySearch(this.x, x2);
        i1 = i3 - 1;

        // We have our indexes i1 & i3, so we can calculate already:
        // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1
        return (((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1])) + this.y[i1];
      };
      return this;
    },
    // xxx: for now i will just save one spline function to to
    getInterpolateFunction: function getInterpolateFunction(c) {
      var swiper = this;
      if (!swiper.controller.spline) {
        swiper.controller.spline = swiper.params.loop ?
          new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid) :
          new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);
      }
    },
    setTranslate: function setTranslate(setTranslate$1, byController) {
      var swiper = this;
      var controlled = swiper.controller.control;
      var multiplier;
      var controlledTranslate;
      function setControlledTranslate(c) {
        // this will create an Interpolate function based on the snapGrids
        // x is the Grid of the scrolled scroller and y will be the controlled scroller
        // it makes sense to create this only once and recall it for the interpolation
        // the function does a lot of value caching for performance
        var translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;
        if (swiper.params.controller.by === 'slide') {
          swiper.controller.getInterpolateFunction(c);
          // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid
          // but it did not work out
          controlledTranslate = -swiper.controller.spline.interpolate(-translate);
        }

        if (!controlledTranslate || swiper.params.controller.by === 'container') {
          multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());
          controlledTranslate = ((translate - swiper.minTranslate()) * multiplier) + c.minTranslate();
        }

        if (swiper.params.controller.inverse) {
          controlledTranslate = c.maxTranslate() - controlledTranslate;
        }
        c.updateProgress(controlledTranslate);
        c.setTranslate(controlledTranslate, swiper);
        c.updateActiveIndex();
        c.updateSlidesClasses();
      }
      if (Array.isArray(controlled)) {
        for (var i = 0; i < controlled.length; i += 1) {
          if (controlled[i] !== byController && controlled[i] instanceof Swiper) {
            setControlledTranslate(controlled[i]);
          }
        }
      } else if (controlled instanceof Swiper && byController !== controlled) {
        setControlledTranslate(controlled);
      }
    },
    setTransition: function setTransition(duration, byController) {
      var swiper = this;
      var controlled = swiper.controller.control;
      var i;
      function setControlledTransition(c) {
        c.setTransition(duration, swiper);
        if (duration !== 0) {
          c.transitionStart();
          c.$wrapperEl.transitionEnd(function () {
            if (!controlled) { return; }
            if (c.params.loop && swiper.params.controller.by === 'slide') {
              c.loopFix();
            }
            c.transitionEnd();
          });
        }
      }
      if (Array.isArray(controlled)) {
        for (i = 0; i < controlled.length; i += 1) {
          if (controlled[i] !== byController && controlled[i] instanceof Swiper) {
            setControlledTransition(controlled[i]);
          }
        }
      } else if (controlled instanceof Swiper && byController !== controlled) {
        setControlledTransition(controlled);
      }
    },
  };
  var Controller$1 = {
    name: 'controller',
    params: {
      controller: {
        control: undefined,
        inverse: false,
        by: 'slide', // or 'container'
      },
    },
    create: function create() {
      var swiper = this;
      Utils.extend(swiper, {
        controller: {
          control: swiper.params.controller.control,
          getInterpolateFunction: Controller.getInterpolateFunction.bind(swiper),
          setTranslate: Controller.setTranslate.bind(swiper),
          setTransition: Controller.setTransition.bind(swiper),
        },
      });
    },
    on: {
      update: function update() {
        var swiper = this;
        if (!swiper.controller.control) { return; }
        if (swiper.controller.spline) {
          swiper.controller.spline = undefined;
          delete swiper.controller.spline;
        }
      },
      resize: function resize() {
        var swiper = this;
        if (!swiper.controller.control) { return; }
        if (swiper.controller.spline) {
          swiper.controller.spline = undefined;
          delete swiper.controller.spline;
        }
      },
      observerUpdate: function observerUpdate() {
        var swiper = this;
        if (!swiper.controller.control) { return; }
        if (swiper.controller.spline) {
          swiper.controller.spline = undefined;
          delete swiper.controller.spline;
        }
      },
      setTranslate: function setTranslate(translate, byController) {
        var swiper = this;
        if (!swiper.controller.control) { return; }
        swiper.controller.setTranslate(translate, byController);
      },
      setTransition: function setTransition(duration, byController) {
        var swiper = this;
        if (!swiper.controller.control) { return; }
        swiper.controller.setTransition(duration, byController);
      },
    },
  };

  var a11y = {
    makeElFocusable: function makeElFocusable($el) {
      $el.attr('tabIndex', '0');
      return $el;
    },
    addElRole: function addElRole($el, role) {
      $el.attr('role', role);
      return $el;
    },
    addElLabel: function addElLabel($el, label) {
      $el.attr('aria-label', label);
      return $el;
    },
    disableEl: function disableEl($el) {
      $el.attr('aria-disabled', true);
      return $el;
    },
    enableEl: function enableEl($el) {
      $el.attr('aria-disabled', false);
      return $el;
    },
    onEnterKey: function onEnterKey(e) {
      var swiper = this;
      var params = swiper.params.a11y;
      if (e.keyCode !== 13) { return; }
      var $targetEl = $(e.target);
      if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {
        if (!(swiper.isEnd && !swiper.params.loop)) {
          swiper.slideNext();
        }
        if (swiper.isEnd) {
          swiper.a11y.notify(params.lastSlideMessage);
        } else {
          swiper.a11y.notify(params.nextSlideMessage);
        }
      }
      if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {
        if (!(swiper.isBeginning && !swiper.params.loop)) {
          swiper.slidePrev();
        }
        if (swiper.isBeginning) {
          swiper.a11y.notify(params.firstSlideMessage);
        } else {
          swiper.a11y.notify(params.prevSlideMessage);
        }
      }
      if (swiper.pagination && $targetEl.is(("." + (swiper.params.pagination.bulletClass)))) {
        $targetEl[0].click();
      }
    },
    notify: function notify(message) {
      var swiper = this;
      var notification = swiper.a11y.liveRegion;
      if (notification.length === 0) { return; }
      notification.html('');
      notification.html(message);
    },
    updateNavigation: function updateNavigation() {
      var swiper = this;

      if (swiper.params.loop) { return; }
      var ref = swiper.navigation;
      var $nextEl = ref.$nextEl;
      var $prevEl = ref.$prevEl;

      if ($prevEl && $prevEl.length > 0) {
        if (swiper.isBeginning) {
          swiper.a11y.disableEl($prevEl);
        } else {
          swiper.a11y.enableEl($prevEl);
        }
      }
      if ($nextEl && $nextEl.length > 0) {
        if (swiper.isEnd) {
          swiper.a11y.disableEl($nextEl);
        } else {
          swiper.a11y.enableEl($nextEl);
        }
      }
    },
    updatePagination: function updatePagination() {
      var swiper = this;
      var params = swiper.params.a11y;
      if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {
        swiper.pagination.bullets.each(function (bulletIndex, bulletEl) {
          var $bulletEl = $(bulletEl);
          swiper.a11y.makeElFocusable($bulletEl);
          swiper.a11y.addElRole($bulletEl, 'button');
          swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/{{index}}/, $bulletEl.index() + 1));
        });
      }
    },
    init: function init() {
      var swiper = this;

      swiper.$el.append(swiper.a11y.liveRegion);

      // Navigation
      var params = swiper.params.a11y;
      var $nextEl;
      var $prevEl;
      if (swiper.navigation && swiper.navigation.$nextEl) {
        $nextEl = swiper.navigation.$nextEl;
      }
      if (swiper.navigation && swiper.navigation.$prevEl) {
        $prevEl = swiper.navigation.$prevEl;
      }
      if ($nextEl) {
        swiper.a11y.makeElFocusable($nextEl);
        swiper.a11y.addElRole($nextEl, 'button');
        swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);
        $nextEl.on('keydown', swiper.a11y.onEnterKey);
      }
      if ($prevEl) {
        swiper.a11y.makeElFocusable($prevEl);
        swiper.a11y.addElRole($prevEl, 'button');
        swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);
        $prevEl.on('keydown', swiper.a11y.onEnterKey);
      }

      // Pagination
      if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {
        swiper.pagination.$el.on('keydown', ("." + (swiper.params.pagination.bulletClass)), swiper.a11y.onEnterKey);
      }
    },
    destroy: function destroy() {
      var swiper = this;
      if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) { swiper.a11y.liveRegion.remove(); }

      var $nextEl;
      var $prevEl;
      if (swiper.navigation && swiper.navigation.$nextEl) {
        $nextEl = swiper.navigation.$nextEl;
      }
      if (swiper.navigation && swiper.navigation.$prevEl) {
        $prevEl = swiper.navigation.$prevEl;
      }
      if ($nextEl) {
        $nextEl.off('keydown', swiper.a11y.onEnterKey);
      }
      if ($prevEl) {
        $prevEl.off('keydown', swiper.a11y.onEnterKey);
      }

      // Pagination
      if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {
        swiper.pagination.$el.off('keydown', ("." + (swiper.params.pagination.bulletClass)), swiper.a11y.onEnterKey);
      }
    },
  };
  var A11y = {
    name: 'a11y',
    params: {
      a11y: {
        enabled: true,
        notificationClass: 'swiper-notification',
        prevSlideMessage: 'Previous slide',
        nextSlideMessage: 'Next slide',
        firstSlideMessage: 'This is the first slide',
        lastSlideMessage: 'This is the last slide',
        paginationBulletMessage: 'Go to slide {{index}}',
      },
    },
    create: function create() {
      var swiper = this;
      Utils.extend(swiper, {
        a11y: {
          liveRegion: $(("<span class=\"" + (swiper.params.a11y.notificationClass) + "\" aria-live=\"assertive\" aria-atomic=\"true\"></span>")),
        },
      });
      Object.keys(a11y).forEach(function (methodName) {
        swiper.a11y[methodName] = a11y[methodName].bind(swiper);
      });
    },
    on: {
      init: function init() {
        var swiper = this;
        if (!swiper.params.a11y.enabled) { return; }
        swiper.a11y.init();
        swiper.a11y.updateNavigation();
      },
      toEdge: function toEdge() {
        var swiper = this;
        if (!swiper.params.a11y.enabled) { return; }
        swiper.a11y.updateNavigation();
      },
      fromEdge: function fromEdge() {
        var swiper = this;
        if (!swiper.params.a11y.enabled) { return; }
        swiper.a11y.updateNavigation();
      },
      paginationUpdate: function paginationUpdate() {
        var swiper = this;
        if (!swiper.params.a11y.enabled) { return; }
        swiper.a11y.updatePagination();
      },
      destroy: function destroy() {
        var swiper = this;
        if (!swiper.params.a11y.enabled) { return; }
        swiper.a11y.destroy();
      },
    },
  };

  var History = {
    init: function init() {
      var swiper = this;
      if (!swiper.params.history) { return; }
      if (!win.history || !win.history.pushState) {
        swiper.params.history.enabled = false;
        swiper.params.hashNavigation.enabled = true;
        return;
      }
      var history = swiper.history;
      history.initialized = true;
      history.paths = History.getPathValues();
      if (!history.paths.key && !history.paths.value) { return; }
      history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);
      if (!swiper.params.history.replaceState) {
        win.addEventListener('popstate', swiper.history.setHistoryPopState);
      }
    },
    destroy: function destroy() {
      var swiper = this;
      if (!swiper.params.history.replaceState) {
        win.removeEventListener('popstate', swiper.history.setHistoryPopState);
      }
    },
    setHistoryPopState: function setHistoryPopState() {
      var swiper = this;
      swiper.history.paths = History.getPathValues();
      swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);
    },
    getPathValues: function getPathValues() {
      var pathArray = win.location.pathname.slice(1).split('/').filter(function (part) { return part !== ''; });
      var total = pathArray.length;
      var key = pathArray[total - 2];
      var value = pathArray[total - 1];
      return { key: key, value: value };
    },
    setHistory: function setHistory(key, index) {
      var swiper = this;
      if (!swiper.history.initialized || !swiper.params.history.enabled) { return; }
      var slide = swiper.slides.eq(index);
      var value = History.slugify(slide.attr('data-history'));
      if (!win.location.pathname.includes(key)) {
        value = key + "/" + value;
      }
      var currentState = win.history.state;
      if (currentState && currentState.value === value) {
        return;
      }
      if (swiper.params.history.replaceState) {
        win.history.replaceState({ value: value }, null, value);
      } else {
        win.history.pushState({ value: value }, null, value);
      }
    },
    slugify: function slugify(text) {
      return text.toString().toLowerCase()
        .replace(/\s+/g, '-')
        .replace(/[^\w-]+/g, '')
        .replace(/--+/g, '-')
        .replace(/^-+/, '')
        .replace(/-+$/, '');
    },
    scrollToSlide: function scrollToSlide(speed, value, runCallbacks) {
      var swiper = this;
      if (value) {
        for (var i = 0, length = swiper.slides.length; i < length; i += 1) {
          var slide = swiper.slides.eq(i);
          var slideHistory = History.slugify(slide.attr('data-history'));
          if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {
            var index = slide.index();
            swiper.slideTo(index, speed, runCallbacks);
          }
        }
      } else {
        swiper.slideTo(0, speed, runCallbacks);
      }
    },
  };

  var History$1 = {
    name: 'history',
    params: {
      history: {
        enabled: false,
        replaceState: false,
        key: 'slides',
      },
    },
    create: function create() {
      var swiper = this;
      Utils.extend(swiper, {
        history: {
          init: History.init.bind(swiper),
          setHistory: History.setHistory.bind(swiper),
          setHistoryPopState: History.setHistoryPopState.bind(swiper),
          scrollToSlide: History.scrollToSlide.bind(swiper),
          destroy: History.destroy.bind(swiper),
        },
      });
    },
    on: {
      init: function init() {
        var swiper = this;
        if (swiper.params.history.enabled) {
          swiper.history.init();
        }
      },
      destroy: function destroy() {
        var swiper = this;
        if (swiper.params.history.enabled) {
          swiper.history.destroy();
        }
      },
      transitionEnd: function transitionEnd() {
        var swiper = this;
        if (swiper.history.initialized) {
          swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);
        }
      },
    },
  };

  var HashNavigation = {
    onHashCange: function onHashCange() {
      var swiper = this;
      var newHash = doc.location.hash.replace('#', '');
      var activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');
      if (newHash !== activeSlideHash) {
        swiper.slideTo(swiper.$wrapperEl.children(("." + (swiper.params.slideClass) + "[data-hash=\"" + newHash + "\"]")).index());
      }
    },
    setHash: function setHash() {
      var swiper = this;
      if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) { return; }
      if (swiper.params.hashNavigation.replaceState && win.history && win.history.replaceState) {
        win.history.replaceState(null, null, (("#" + (swiper.slides.eq(swiper.activeIndex).attr('data-hash'))) || ''));
      } else {
        var slide = swiper.slides.eq(swiper.activeIndex);
        var hash = slide.attr('data-hash') || slide.attr('data-history');
        doc.location.hash = hash || '';
      }
    },
    init: function init() {
      var swiper = this;
      if (!swiper.params.hashNavigation.enabled || (swiper.params.history && swiper.params.history.enabled)) { return; }
      swiper.hashNavigation.initialized = true;
      var hash = doc.location.hash.replace('#', '');
      if (hash) {
        var speed = 0;
        for (var i = 0, length = swiper.slides.length; i < length; i += 1) {
          var slide = swiper.slides.eq(i);
          var slideHash = slide.attr('data-hash') || slide.attr('data-history');
          if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {
            var index = slide.index();
            swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);
          }
        }
      }
      if (swiper.params.hashNavigation.watchState) {
        $(win).on('hashchange', swiper.hashNavigation.onHashCange);
      }
    },
    destroy: function destroy() {
      var swiper = this;
      if (swiper.params.hashNavigation.watchState) {
        $(win).off('hashchange', swiper.hashNavigation.onHashCange);
      }
    },
  };
  var HashNavigation$1 = {
    name: 'hash-navigation',
    params: {
      hashNavigation: {
        enabled: false,
        replaceState: false,
        watchState: false,
      },
    },
    create: function create() {
      var swiper = this;
      Utils.extend(swiper, {
        hashNavigation: {
          initialized: false,
          init: HashNavigation.init.bind(swiper),
          destroy: HashNavigation.destroy.bind(swiper),
          setHash: HashNavigation.setHash.bind(swiper),
          onHashCange: HashNavigation.onHashCange.bind(swiper),
        },
      });
    },
    on: {
      init: function init() {
        var swiper = this;
        if (swiper.params.hashNavigation.enabled) {
          swiper.hashNavigation.init();
        }
      },
      destroy: function destroy() {
        var swiper = this;
        if (swiper.params.hashNavigation.enabled) {
          swiper.hashNavigation.destroy();
        }
      },
      transitionEnd: function transitionEnd() {
        var swiper = this;
        if (swiper.hashNavigation.initialized) {
          swiper.hashNavigation.setHash();
        }
      },
    },
  };

  /* eslint no-underscore-dangle: "off" */

  var Autoplay = {
    run: function run() {
      var swiper = this;
      var $activeSlideEl = swiper.slides.eq(swiper.activeIndex);
      var delay = swiper.params.autoplay.delay;
      if ($activeSlideEl.attr('data-swiper-autoplay')) {
        delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;
      }
      swiper.autoplay.timeout = Utils.nextTick(function () {
        if (swiper.params.autoplay.reverseDirection) {
          if (swiper.params.loop) {
            swiper.loopFix();
            swiper.slidePrev(swiper.params.speed, true, true);
            swiper.emit('autoplay');
          } else if (!swiper.isBeginning) {
            swiper.slidePrev(swiper.params.speed, true, true);
            swiper.emit('autoplay');
          } else if (!swiper.params.autoplay.stopOnLastSlide) {
            swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);
            swiper.emit('autoplay');
          } else {
            swiper.autoplay.stop();
          }
        } else if (swiper.params.loop) {
          swiper.loopFix();
          swiper.slideNext(swiper.params.speed, true, true);
          swiper.emit('autoplay');
        } else if (!swiper.isEnd) {
          swiper.slideNext(swiper.params.speed, true, true);
          swiper.emit('autoplay');
        } else if (!swiper.params.autoplay.stopOnLastSlide) {
          swiper.slideTo(0, swiper.params.speed, true, true);
          swiper.emit('autoplay');
        } else {
          swiper.autoplay.stop();
        }
      }, delay);
    },
    start: function start() {
      var swiper = this;
      if (typeof swiper.autoplay.timeout !== 'undefined') { return false; }
      if (swiper.autoplay.running) { return false; }
      swiper.autoplay.running = true;
      swiper.emit('autoplayStart');
      swiper.autoplay.run();
      return true;
    },
    stop: function stop() {
      var swiper = this;
      if (!swiper.autoplay.running) { return false; }
      if (typeof swiper.autoplay.timeout === 'undefined') { return false; }

      if (swiper.autoplay.timeout) {
        clearTimeout(swiper.autoplay.timeout);
        swiper.autoplay.timeout = undefined;
      }
      swiper.autoplay.running = false;
      swiper.emit('autoplayStop');
      return true;
    },
    pause: function pause(speed) {
      var swiper = this;
      if (!swiper.autoplay.running) { return; }
      if (swiper.autoplay.paused) { return; }
      if (swiper.autoplay.timeout) { clearTimeout(swiper.autoplay.timeout); }
      swiper.autoplay.paused = true;
      if (speed === 0 || !swiper.params.autoplay.waitForTransition) {
        swiper.autoplay.paused = false;
        swiper.autoplay.run();
      } else {
        swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);
        swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);
      }
    },
  };

  var Autoplay$1 = {
    name: 'autoplay',
    params: {
      autoplay: {
        enabled: false,
        delay: 3000,
        waitForTransition: true,
        disableOnInteraction: true,
        stopOnLastSlide: false,
        reverseDirection: false,
      },
    },
    create: function create() {
      var swiper = this;
      Utils.extend(swiper, {
        autoplay: {
          running: false,
          paused: false,
          run: Autoplay.run.bind(swiper),
          start: Autoplay.start.bind(swiper),
          stop: Autoplay.stop.bind(swiper),
          pause: Autoplay.pause.bind(swiper),
          onTransitionEnd: function onTransitionEnd(e) {
            if (!swiper || swiper.destroyed || !swiper.$wrapperEl) { return; }
            if (e.target !== this) { return; }
            swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);
            swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);
            swiper.autoplay.paused = false;
            if (!swiper.autoplay.running) {
              swiper.autoplay.stop();
            } else {
              swiper.autoplay.run();
            }
          },
        },
      });
    },
    on: {
      init: function init() {
        var swiper = this;
        if (swiper.params.autoplay.enabled) {
          swiper.autoplay.start();
        }
      },
      beforeTransitionStart: function beforeTransitionStart(speed, internal) {
        var swiper = this;
        if (swiper.autoplay.running) {
          if (internal || !swiper.params.autoplay.disableOnInteraction) {
            swiper.autoplay.pause(speed);
          } else {
            swiper.autoplay.stop();
          }
        }
      },
      sliderFirstMove: function sliderFirstMove() {
        var swiper = this;
        if (swiper.autoplay.running) {
          if (swiper.params.autoplay.disableOnInteraction) {
            swiper.autoplay.stop();
          } else {
            swiper.autoplay.pause();
          }
        }
      },
      destroy: function destroy() {
        var swiper = this;
        if (swiper.autoplay.running) {
          swiper.autoplay.stop();
        }
      },
    },
  };

  var Fade = {
    setTranslate: function setTranslate() {
      var swiper = this;
      var slides = swiper.slides;
      for (var i = 0; i < slides.length; i += 1) {
        var $slideEl = swiper.slides.eq(i);
        var offset = $slideEl[0].swiperSlideOffset;
        var tx = -offset;
        if (!swiper.params.virtualTranslate) { tx -= swiper.translate; }
        var ty = 0;
        if (!swiper.isHorizontal()) {
          ty = tx;
          tx = 0;
        }
        var slideOpacity = swiper.params.fadeEffect.crossFade ?
          Math.max(1 - Math.abs($slideEl[0].progress), 0) :
          1 + Math.min(Math.max($slideEl[0].progress, -1), 0);
        $slideEl
          .css({
            opacity: slideOpacity,
          })
          .transform(("translate3d(" + tx + "px, " + ty + "px, 0px)"));
      }
    },
    setTransition: function setTransition(duration) {
      var swiper = this;
      var slides = swiper.slides;
      var $wrapperEl = swiper.$wrapperEl;
      slides.transition(duration);
      if (swiper.params.virtualTranslate && duration !== 0) {
        var eventTriggered = false;
        slides.transitionEnd(function () {
          if (eventTriggered) { return; }
          if (!swiper || swiper.destroyed) { return; }
          eventTriggered = true;
          swiper.animating = false;
          var triggerEvents = ['webkitTransitionEnd', 'transitionend'];
          for (var i = 0; i < triggerEvents.length; i += 1) {
            $wrapperEl.trigger(triggerEvents[i]);
          }
        });
      }
    },
  };

  var EffectFade = {
    name: 'effect-fade',
    params: {
      fadeEffect: {
        crossFade: false,
      },
    },
    create: function create() {
      var swiper = this;
      Utils.extend(swiper, {
        fadeEffect: {
          setTranslate: Fade.setTranslate.bind(swiper),
          setTransition: Fade.setTransition.bind(swiper),
        },
      });
    },
    on: {
      beforeInit: function beforeInit() {
        var swiper = this;
        if (swiper.params.effect !== 'fade') { return; }
        swiper.classNames.push(((swiper.params.containerModifierClass) + "fade"));
        var overwriteParams = {
          slidesPerView: 1,
          slidesPerColumn: 1,
          slidesPerGroup: 1,
          watchSlidesProgress: true,
          spaceBetween: 0,
          virtualTranslate: true,
        };
        Utils.extend(swiper.params, overwriteParams);
        Utils.extend(swiper.originalParams, overwriteParams);
      },
      setTranslate: function setTranslate() {
        var swiper = this;
        if (swiper.params.effect !== 'fade') { return; }
        swiper.fadeEffect.setTranslate();
      },
      setTransition: function setTransition(duration) {
        var swiper = this;
        if (swiper.params.effect !== 'fade') { return; }
        swiper.fadeEffect.setTransition(duration);
      },
    },
  };

  var Cube = {
    setTranslate: function setTranslate() {
      var swiper = this;
      var $el = swiper.$el;
      var $wrapperEl = swiper.$wrapperEl;
      var slides = swiper.slides;
      var swiperWidth = swiper.width;
      var swiperHeight = swiper.height;
      var rtl = swiper.rtlTranslate;
      var swiperSize = swiper.size;
      var params = swiper.params.cubeEffect;
      var isHorizontal = swiper.isHorizontal();
      var isVirtual = swiper.virtual && swiper.params.virtual.enabled;
      var wrapperRotate = 0;
      var $cubeShadowEl;
      if (params.shadow) {
        if (isHorizontal) {
          $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');
          if ($cubeShadowEl.length === 0) {
            $cubeShadowEl = $('<div class="swiper-cube-shadow"></div>');
            $wrapperEl.append($cubeShadowEl);
          }
          $cubeShadowEl.css({ height: (swiperWidth + "px") });
        } else {
          $cubeShadowEl = $el.find('.swiper-cube-shadow');
          if ($cubeShadowEl.length === 0) {
            $cubeShadowEl = $('<div class="swiper-cube-shadow"></div>');
            $el.append($cubeShadowEl);
          }
        }
      }
      for (var i = 0; i < slides.length; i += 1) {
        var $slideEl = slides.eq(i);
        var slideIndex = i;
        if (isVirtual) {
          slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);
        }
        var slideAngle = slideIndex * 90;
        var round = Math.floor(slideAngle / 360);
        if (rtl) {
          slideAngle = -slideAngle;
          round = Math.floor(-slideAngle / 360);
        }
        var progress = Math.max(Math.min($slideEl[0].progress, 1), -1);
        var tx = 0;
        var ty = 0;
        var tz = 0;
        if (slideIndex % 4 === 0) {
          tx = -round * 4 * swiperSize;
          tz = 0;
        } else if ((slideIndex - 1) % 4 === 0) {
          tx = 0;
          tz = -round * 4 * swiperSize;
        } else if ((slideIndex - 2) % 4 === 0) {
          tx = swiperSize + (round * 4 * swiperSize);
          tz = swiperSize;
        } else if ((slideIndex - 3) % 4 === 0) {
          tx = -swiperSize;
          tz = (3 * swiperSize) + (swiperSize * 4 * round);
        }
        if (rtl) {
          tx = -tx;
        }

        if (!isHorizontal) {
          ty = tx;
          tx = 0;
        }

        var transform = "rotateX(" + (isHorizontal ? 0 : -slideAngle) + "deg) rotateY(" + (isHorizontal ? slideAngle : 0) + "deg) translate3d(" + tx + "px, " + ty + "px, " + tz + "px)";
        if (progress <= 1 && progress > -1) {
          wrapperRotate = (slideIndex * 90) + (progress * 90);
          if (rtl) { wrapperRotate = (-slideIndex * 90) - (progress * 90); }
        }
        $slideEl.transform(transform);
        if (params.slideShadows) {
          // Set shadows
          var shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');
          var shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');
          if (shadowBefore.length === 0) {
            shadowBefore = $(("<div class=\"swiper-slide-shadow-" + (isHorizontal ? 'left' : 'top') + "\"></div>"));
            $slideEl.append(shadowBefore);
          }
          if (shadowAfter.length === 0) {
            shadowAfter = $(("<div class=\"swiper-slide-shadow-" + (isHorizontal ? 'right' : 'bottom') + "\"></div>"));
            $slideEl.append(shadowAfter);
          }
          if (shadowBefore.length) { shadowBefore[0].style.opacity = Math.max(-progress, 0); }
          if (shadowAfter.length) { shadowAfter[0].style.opacity = Math.max(progress, 0); }
        }
      }
      $wrapperEl.css({
        '-webkit-transform-origin': ("50% 50% -" + (swiperSize / 2) + "px"),
        '-moz-transform-origin': ("50% 50% -" + (swiperSize / 2) + "px"),
        '-ms-transform-origin': ("50% 50% -" + (swiperSize / 2) + "px"),
        'transform-origin': ("50% 50% -" + (swiperSize / 2) + "px"),
      });

      if (params.shadow) {
        if (isHorizontal) {
          $cubeShadowEl.transform(("translate3d(0px, " + ((swiperWidth / 2) + params.shadowOffset) + "px, " + (-swiperWidth / 2) + "px) rotateX(90deg) rotateZ(0deg) scale(" + (params.shadowScale) + ")"));
        } else {
          var shadowAngle = Math.abs(wrapperRotate) - (Math.floor(Math.abs(wrapperRotate) / 90) * 90);
          var multiplier = 1.5 - (
            (Math.sin((shadowAngle * 2 * Math.PI) / 360) / 2) +
            (Math.cos((shadowAngle * 2 * Math.PI) / 360) / 2)
          );
          var scale1 = params.shadowScale;
          var scale2 = params.shadowScale / multiplier;
          var offset = params.shadowOffset;
          $cubeShadowEl.transform(("scale3d(" + scale1 + ", 1, " + scale2 + ") translate3d(0px, " + ((swiperHeight / 2) + offset) + "px, " + (-swiperHeight / 2 / scale2) + "px) rotateX(-90deg)"));
        }
      }
      var zFactor = (Browser.isSafari || Browser.isUiWebView) ? (-swiperSize / 2) : 0;
      $wrapperEl
        .transform(("translate3d(0px,0," + zFactor + "px) rotateX(" + (swiper.isHorizontal() ? 0 : wrapperRotate) + "deg) rotateY(" + (swiper.isHorizontal() ? -wrapperRotate : 0) + "deg)"));
    },
    setTransition: function setTransition(duration) {
      var swiper = this;
      var $el = swiper.$el;
      var slides = swiper.slides;
      slides
        .transition(duration)
        .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')
        .transition(duration);
      if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {
        $el.find('.swiper-cube-shadow').transition(duration);
      }
    },
  };

  var EffectCube = {
    name: 'effect-cube',
    params: {
      cubeEffect: {
        slideShadows: true,
        shadow: true,
        shadowOffset: 20,
        shadowScale: 0.94,
      },
    },
    create: function create() {
      var swiper = this;
      Utils.extend(swiper, {
        cubeEffect: {
          setTranslate: Cube.setTranslate.bind(swiper),
          setTransition: Cube.setTransition.bind(swiper),
        },
      });
    },
    on: {
      beforeInit: function beforeInit() {
        var swiper = this;
        if (swiper.params.effect !== 'cube') { return; }
        swiper.classNames.push(((swiper.params.containerModifierClass) + "cube"));
        swiper.classNames.push(((swiper.params.containerModifierClass) + "3d"));
        var overwriteParams = {
          slidesPerView: 1,
          slidesPerColumn: 1,
          slidesPerGroup: 1,
          watchSlidesProgress: true,
          resistanceRatio: 0,
          spaceBetween: 0,
          centeredSlides: false,
          virtualTranslate: true,
        };
        Utils.extend(swiper.params, overwriteParams);
        Utils.extend(swiper.originalParams, overwriteParams);
      },
      setTranslate: function setTranslate() {
        var swiper = this;
        if (swiper.params.effect !== 'cube') { return; }
        swiper.cubeEffect.setTranslate();
      },
      setTransition: function setTransition(duration) {
        var swiper = this;
        if (swiper.params.effect !== 'cube') { return; }
        swiper.cubeEffect.setTransition(duration);
      },
    },
  };

  var Flip = {
    setTranslate: function setTranslate() {
      var swiper = this;
      var slides = swiper.slides;
      var rtl = swiper.rtlTranslate;
      for (var i = 0; i < slides.length; i += 1) {
        var $slideEl = slides.eq(i);
        var progress = $slideEl[0].progress;
        if (swiper.params.flipEffect.limitRotation) {
          progress = Math.max(Math.min($slideEl[0].progress, 1), -1);
        }
        var offset = $slideEl[0].swiperSlideOffset;
        var rotate = -180 * progress;
        var rotateY = rotate;
        var rotateX = 0;
        var tx = -offset;
        var ty = 0;
        if (!swiper.isHorizontal()) {
          ty = tx;
          tx = 0;
          rotateX = -rotateY;
          rotateY = 0;
        } else if (rtl) {
          rotateY = -rotateY;
        }

        $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;

        if (swiper.params.flipEffect.slideShadows) {
          // Set shadows
          var shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');
          var shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');
          if (shadowBefore.length === 0) {
            shadowBefore = $(("<div class=\"swiper-slide-shadow-" + (swiper.isHorizontal() ? 'left' : 'top') + "\"></div>"));
            $slideEl.append(shadowBefore);
          }
          if (shadowAfter.length === 0) {
            shadowAfter = $(("<div class=\"swiper-slide-shadow-" + (swiper.isHorizontal() ? 'right' : 'bottom') + "\"></div>"));
            $slideEl.append(shadowAfter);
          }
          if (shadowBefore.length) { shadowBefore[0].style.opacity = Math.max(-progress, 0); }
          if (shadowAfter.length) { shadowAfter[0].style.opacity = Math.max(progress, 0); }
        }
        $slideEl
          .transform(("translate3d(" + tx + "px, " + ty + "px, 0px) rotateX(" + rotateX + "deg) rotateY(" + rotateY + "deg)"));
      }
    },
    setTransition: function setTransition(duration) {
      var swiper = this;
      var slides = swiper.slides;
      var activeIndex = swiper.activeIndex;
      var $wrapperEl = swiper.$wrapperEl;
      slides
        .transition(duration)
        .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')
        .transition(duration);
      if (swiper.params.virtualTranslate && duration !== 0) {
        var eventTriggered = false;
        // eslint-disable-next-line
        slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {
          if (eventTriggered) { return; }
          if (!swiper || swiper.destroyed) { return; }
          // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;
          eventTriggered = true;
          swiper.animating = false;
          var triggerEvents = ['webkitTransitionEnd', 'transitionend'];
          for (var i = 0; i < triggerEvents.length; i += 1) {
            $wrapperEl.trigger(triggerEvents[i]);
          }
        });
      }
    },
  };

  var EffectFlip = {
    name: 'effect-flip',
    params: {
      flipEffect: {
        slideShadows: true,
        limitRotation: true,
      },
    },
    create: function create() {
      var swiper = this;
      Utils.extend(swiper, {
        flipEffect: {
          setTranslate: Flip.setTranslate.bind(swiper),
          setTransition: Flip.setTransition.bind(swiper),
        },
      });
    },
    on: {
      beforeInit: function beforeInit() {
        var swiper = this;
        if (swiper.params.effect !== 'flip') { return; }
        swiper.classNames.push(((swiper.params.containerModifierClass) + "flip"));
        swiper.classNames.push(((swiper.params.containerModifierClass) + "3d"));
        var overwriteParams = {
          slidesPerView: 1,
          slidesPerColumn: 1,
          slidesPerGroup: 1,
          watchSlidesProgress: true,
          spaceBetween: 0,
          virtualTranslate: true,
        };
        Utils.extend(swiper.params, overwriteParams);
        Utils.extend(swiper.originalParams, overwriteParams);
      },
      setTranslate: function setTranslate() {
        var swiper = this;
        if (swiper.params.effect !== 'flip') { return; }
        swiper.flipEffect.setTranslate();
      },
      setTransition: function setTransition(duration) {
        var swiper = this;
        if (swiper.params.effect !== 'flip') { return; }
        swiper.flipEffect.setTransition(duration);
      },
    },
  };

  var Coverflow = {
    setTranslate: function setTranslate() {
      var swiper = this;
      var swiperWidth = swiper.width;
      var swiperHeight = swiper.height;
      var slides = swiper.slides;
      var $wrapperEl = swiper.$wrapperEl;
      var slidesSizesGrid = swiper.slidesSizesGrid;
      var params = swiper.params.coverflowEffect;
      var isHorizontal = swiper.isHorizontal();
      var transform = swiper.translate;
      var center = isHorizontal ? -transform + (swiperWidth / 2) : -transform + (swiperHeight / 2);
      var rotate = isHorizontal ? params.rotate : -params.rotate;
      var translate = params.depth;
      // Each slide offset from center
      for (var i = 0, length = slides.length; i < length; i += 1) {
        var $slideEl = slides.eq(i);
        var slideSize = slidesSizesGrid[i];
        var slideOffset = $slideEl[0].swiperSlideOffset;
        var offsetMultiplier = ((center - slideOffset - (slideSize / 2)) / slideSize) * params.modifier;

        var rotateY = isHorizontal ? rotate * offsetMultiplier : 0;
        var rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;
        // var rotateZ = 0
        var translateZ = -translate * Math.abs(offsetMultiplier);

        var translateY = isHorizontal ? 0 : params.stretch * (offsetMultiplier);
        var translateX = isHorizontal ? params.stretch * (offsetMultiplier) : 0;

        // Fix for ultra small values
        if (Math.abs(translateX) < 0.001) { translateX = 0; }
        if (Math.abs(translateY) < 0.001) { translateY = 0; }
        if (Math.abs(translateZ) < 0.001) { translateZ = 0; }
        if (Math.abs(rotateY) < 0.001) { rotateY = 0; }
        if (Math.abs(rotateX) < 0.001) { rotateX = 0; }

        var slideTransform = "translate3d(" + translateX + "px," + translateY + "px," + translateZ + "px)  rotateX(" + rotateX + "deg) rotateY(" + rotateY + "deg)";

        $slideEl.transform(slideTransform);
        $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;
        if (params.slideShadows) {
          // Set shadows
          var $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');
          var $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');
          if ($shadowBeforeEl.length === 0) {
            $shadowBeforeEl = $(("<div class=\"swiper-slide-shadow-" + (isHorizontal ? 'left' : 'top') + "\"></div>"));
            $slideEl.append($shadowBeforeEl);
          }
          if ($shadowAfterEl.length === 0) {
            $shadowAfterEl = $(("<div class=\"swiper-slide-shadow-" + (isHorizontal ? 'right' : 'bottom') + "\"></div>"));
            $slideEl.append($shadowAfterEl);
          }
          if ($shadowBeforeEl.length) { $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0; }
          if ($shadowAfterEl.length) { $shadowAfterEl[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0; }
        }
      }

      // Set correct perspective for IE10
      if (Support.pointerEvents || Support.prefixedPointerEvents) {
        var ws = $wrapperEl[0].style;
        ws.perspectiveOrigin = center + "px 50%";
      }
    },
    setTransition: function setTransition(duration) {
      var swiper = this;
      swiper.slides
        .transition(duration)
        .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')
        .transition(duration);
    },
  };

  var EffectCoverflow = {
    name: 'effect-coverflow',
    params: {
      coverflowEffect: {
        rotate: 50,
        stretch: 0,
        depth: 100,
        modifier: 1,
        slideShadows: true,
      },
    },
    create: function create() {
      var swiper = this;
      Utils.extend(swiper, {
        coverflowEffect: {
          setTranslate: Coverflow.setTranslate.bind(swiper),
          setTransition: Coverflow.setTransition.bind(swiper),
        },
      });
    },
    on: {
      beforeInit: function beforeInit() {
        var swiper = this;
        if (swiper.params.effect !== 'coverflow') { return; }

        swiper.classNames.push(((swiper.params.containerModifierClass) + "coverflow"));
        swiper.classNames.push(((swiper.params.containerModifierClass) + "3d"));

        swiper.params.watchSlidesProgress = true;
        swiper.originalParams.watchSlidesProgress = true;
      },
      setTranslate: function setTranslate() {
        var swiper = this;
        if (swiper.params.effect !== 'coverflow') { return; }
        swiper.coverflowEffect.setTranslate();
      },
      setTransition: function setTransition(duration) {
        var swiper = this;
        if (swiper.params.effect !== 'coverflow') { return; }
        swiper.coverflowEffect.setTransition(duration);
      },
    },
  };

  // Swiper Class

  var components = [
    Device$1,
    Support$1,
    Browser$1,
    Resize,
    Observer$1,
    Virtual$1,
    Keyboard$1,
    Mousewheel$1,
    Navigation$1,
    Pagination$1,
    Scrollbar$1,
    Parallax$1,
    Zoom$1,
    Lazy$1,
    Controller$1,
    A11y,
    History$1,
    HashNavigation$1,
    Autoplay$1,
    EffectFade,
    EffectCube,
    EffectFlip,
    EffectCoverflow
  ];

  if (typeof Swiper.use === 'undefined') {
    Swiper.use = Swiper.Class.use;
    Swiper.installModule = Swiper.Class.installModule;
  }

  Swiper.use(components);

  return Swiper;

})));
var urlSource;function LodShowMode(e){document.frmSearchFilters.showmode.value=e,document.frmSearchFilters.submit()}function LoadBuscPage(e){document.frmSearchFilters.NumPage.value=e,document.frmSearchFilters.submit()}function setRegion(e,a,i){document.frmSearch.id_region.value=a,$("#txtLocSearch").val(i),$("#txtLocSearch").className="cabInputSel"}function setProvincia(e,a,i){document.frmSearch.id_provincia.value=a,$("#txtLocSearch").val(i),$("#txtLocSearch").className="cabInputSel"}function setPoblacion(e,a,i){document.frmSearch.id_poblacion.value=a,$("#txtLocSearch").val(i),$("#txtLocSearch").className="cabInputSel"}function setSector(e,a,i){document.frmSearch.id_sector.value=a,$("#txtStrSearch").val(i),$("#txtStrSearch").className="cabInputSel"}function setGrupo(e,a,i){document.frmSearch.id_grupo.value=a,$("#txtStrSearch").val(unescape(i))}function suggestHome_setRegion(e,a,i){if(document.frmSearch)suggesHome_reset(),document.frmSearch.id_region.value=e,$(document.frmSearch.id_region).data("value",i)}function suggestHome_setSector(e,a,i,o){if(document.frmSearch)document.frmSearch.id_grupo.value="",document.frmSearch.id_sector.value=e,$(document.frmSearch.id_sector).data("id-ww",o),$(document.frmSearch.id_sector).data("value",i)}function suggestHome_setGrupo(e,a,i,o){if(document.frmSearch)document.frmSearch.id_sector.value="",document.frmSearch.id_grupo.value=e,$(document.frmSearch.id_sector).data("id-ww",o),$(document.frmSearch.id_sector).data("value",i),$(document.frmSearch.id_grupo).data("value",i),$(document.frmSearch.id_grupo).data("id-ww",o)}function suggestHome_setProvincia(e,a,i,o,t){if(document.frmSearch)suggesHome_reset(),document.frmSearch.id_provincia.value=e,$(document.frmSearch.id_provincia).data("value",i),$(document.frmSearch.id_provincia).data("id-ww",t),$(document.frmSearch.id_region).data("value",o)}function suggestHome_setGeozona(e,a,i){if(document.frmSearch)suggesHome_reset(),document.frmSearch.id_geozona.value=e,$(document.frmSearch.id_geozona).data("value",i)}function suggestHome_setPoblacion(e,a,i,o,t,n){if(document.frmSearch)suggesHome_reset(),document.frmSearch.id_poblacion.value=e,$(document.frmSearch.id_poblacion).data("value",i),$(document.frmSearch.id_provincia).data("value",o),$(document.frmSearch.id_provincia).data("id-ww",n),$(document.frmSearch.id_region).data("value",t)}function suggesHome_reset(){if(document.frmSearch)document.frmSearch.id_poblacion.value="",document.frmSearch.id_region.value="",document.frmSearch.id_provincia.value="",document.frmSearch.id_geozona.value="",$(document.frmSearch.id_poblacion).data("value",""),$(document.frmSearch.id_provincia).data("code",""),$(document.frmSearch.id_provincia).data("value",""),$(document.frmSearch.id_region).data("value",""),$(document.frmSearch.id_geozona).data("value","")}function suggestHome_setGeoLocation(){if("US"==globals.Request_Country)try{$("#txtStrSearch").addClass("active search-filled").val("Wedding Venues"),suggestHome_setGrupo(1,"Wedding Venues","wedding-venues",11);var e=GeoLocationManager.getLastLocation();if(e)if(e.precisionLevel<=2)suggestHome_setProvincia(e.idRegion,e.displayRegion,e.urlRegion,e.urlState,e.idRegionWW),$("#txtLocSearch").addClass("active search-filled").val(e.displayRegion);else if(3==e.precisionLevel)suggestHome_setRegion(e.idState,e.displayState,e.urlState),$("#txtLocSearch").addClass("active search-filled").val(e.displayState)}catch(e){}}function goEmpresa(e){window.location.href=e}function vendors_verificaSearch(e){if(!(""!==e.id_poblacion.value&&""!==e.id_poblacion.value||""!==e.id_provincia.value&&""!==e.id_provincia.value||""!==e.id_region.value&&""!==e.id_region.value||""!==e.id_geozona.value&&""!==e.id_geozona.value||!(0<e.txtLocSearch.value.length)))return alert('Please select from the list the area in which you want to search.'),e.txtLocSearch.focus(),!1;var a={city:$(e.id_poblacion).data("value")?{id:e.id_poblacion.value,url:$(e.id_poblacion).data("value")}:null,region:$(e.id_provincia).data("value")?{id:e.id_provincia.value,idWW:$(e.id_provincia).data("id-ww"),url:$(e.id_provincia).data("value")}:null,regionAdm1:$(e.id_region).data("value")?{id:e.id_region.value,url:$(e.id_region).data("value")}:null,geozone:$(e.id_geozona).data("value")?{id:e.id_geozona.value,url:$(e.id_geozona).data("value")}:null,grupo:$(e.id_grupo).data("value")?{id:e.id_grupo.value,idWW:$(e.id_grupo).data("id-ww"),url:$(e.id_grupo).data("value")}:null,sector:$(e.id_sector).data("value")?{id:e.id_sector.value,idWW:$(e.id_sector).data("id-ww"),url:$(e.id_sector).data("value")}:null};if(a.sector&&""!=a.sector.id||a.grupo&&""!=a.grupo.id){var i=bodas.generateStaticVendorURL(a,!1);if(i&&!$(e).hasClass("app-landings-form"))return window.location=i,!1}return!0}var VendorMiniGallery={idEmpresa:null,idEscaparate:null,hidePrevious:!0,showLeadLayerInCountry:!1,leadLayerVisible:!0,marginLeft:null,fotos:Array(),preloaded:Array(),preloadedResponse:Array(),nFotos:Array(),show:function(e,a,i){var o=$("#mgall_"+e);if(VendorMiniGallery.hide(),""!==$.trim(o.html()))o.show();else VendorMiniGallery.showInit(e,a,i)},hide:function(){$("div:visible[id^='mgall_']").hide()},updateInfo:function(e,a,i,o){var t=$("#mgall_"+e),n="",r=i+1;if(r>VendorMiniGallery.nFotos[e])r=VendorMiniGallery.nFotos[e];n+='<a href="javascript:void(0);" onclick="VendorMiniGallery.move('+e+", "+a+", -1, '"+o+"')\" class='gallery-nav mgall-prev'><i class=\"icon-vendor icon-vendor-nav-prev\"></i></a>",n+="<span class='listItem__imageCounter'>"+r+" / "+VendorMiniGallery.nFotos[e]+"</span>",n+='<a href="javascript:void(0);" onclick="VendorMiniGallery.move('+e+", "+a+",  1, '"+o+"')\" class='gallery-nav mgall-next'><i class=\"icon-vendor icon-vendor-nav-next\"></i></a>",t.html(n),VendorMiniGallery.updateArrowsStatus(e,i),t.show()},showInit:function(e,a,i){if(!common_isMobileDevice())VendorMiniGallery.hide();VendorMiniGallery.idEmpresa=e;VendorMiniGallery.fotos[e];VendorMiniGallery.updateInfo(e,a,0,i)},move:function(a,i,o,t){if(!VendorMiniGallery.fotos.hasOwnProperty(a)||null===VendorMiniGallery.fotos[a]||!VendorMiniGallery.preloaded[a])$.ajax({url:"/json/empFotoGallery.php?idEmpresa="+a,success:function(e){if(VendorMiniGallery.preloadedResponse[a]=!0,VendorMiniGallery.fotos[a]=e.FOTOS,void 0!==e.SHOW_LEAD_LAYER&&"1"==e.SHOW_LEAD_LAYER)VendorMiniGallery.showLeadLayerInCountry=!0;if(VendorMiniGallery.showLeadLayerInCountry&&VendorMiniGallery.leadLayerVisible)VendorMiniGallery.fotos[a].push("app-lead-layer");VendorMiniGallery.innerMove(a,i,o,t),VendorMiniGallery.preloaded[a]=!0}});else VendorMiniGallery.innerMove(a,i,o,t)},updateArrowsStatus:function(e,a){if(VendorMiniGallery.hidePrevious){var i=$("#mgall_"+e);if(0==a)i.find(".mgall-next").show(),i.find(".mgall-prev").hide();else if(a==VendorMiniGallery.fotos[e].length-1&&VendorMiniGallery.preloadedResponse[e])i.find(".mgall-prev").show(),i.find(".mgall-next").hide();else i.find(".mgall-prev").show(),i.find(".mgall-next").show()}},innerMove:function(t,n,r,s){if(!VendorMiniGallery.moving){VendorMiniGallery.moving=!0;for(var d=VendorMiniGallery.fotos[t],e=$("#app_imgEmp_"+t).attr("src")?$("#app_imgEmp_"+t).attr("src"):"app-lead-layer",l=0,a=0;a<d.length;a++)if(d[a]==e){l=a;break}if(-1==r)if(0===l)l=d.length-1;else l-=1;if(1==r)if(l==d.length-1)l=0;else l+=1;VendorMiniGallery.updateArrowsStatus(t,l);for(var i=[],o=l;o<l+4&&o<d.length;o++){var c="nextPic_"+t+"_"+o;if(void 0===$(document.body).data(c))i=VendorMiniGallery.pushFotos(d,o,i,t,n,c)}function p(){var e="nextPic_"+t+"_"+l,a=$("#app_imgEmp_"+t).width(),i=void 0!==$(document.body).data(e)?$(document.body).data(e):$("#app_imgEmp_"+t).clone().attr("src",d[l]);$("#app_imgEmp_"+t).parent().parent().css("overflow","hidden");var o=$("#app_lnkEmp_"+t);if(0<o.length)vendors_fncImgL(i[0],o.attr("href"));if(1==r&&!$("#app_imgEmp_"+t).is(":animated"))if($("#app_imgEmp_"+t).parent().cleanWhitespace(),$("#app_imgEmp_"+t).parent().append(i).end().animate({"margin-left":"-"+a+"px"},250,function(){$(this).first().remove(),VendorMiniGallery.moving=!1}),l==d.length-1&&"app-lead-layer"==d[l]){if($("#app_imgEmp_"+t).parent().find(".vendors-list-details").hide(),0<$("#app_imgEmp_"+t).parent().find(".ribbon").length)$("#app_imgEmp_"+t).parent().find(".ribbon").hide();$("#app_imgEmp_"+t).parent().find(".vendors-list-slider").appendTo($("#app_imgEmp_"+t).parent())}else{if($("#app_imgEmp_"+t).parent().find(".vendors-list-details").show(),0<$("#app_imgEmp_"+t).parent().find(".ribbon").length)$("#app_imgEmp_"+t).parent().find(".ribbon").show(),$("#app_imgEmp_"+t).parent().find(".ribbon").after($("#app_imgEmp_"+t));else $("#app_imgEmp_"+t).parent().find(".vendors-list-slider").after($("#app_imgEmp_"+t))}else if(!$("#app_imgEmp_"+t).is(":animated"))if($("#app_imgEmp_"+t).before(i).css("margin-left","0px"),$("#app_imgEmp_"+t+":last").css("margin-left","-"+a+"px").animate({"margin-left":s},250,function(){$(this).next().remove(),VendorMiniGallery.moving=!1}),l==d.length-1&&"app-lead-layer"==d[l]){if(0<$("#app_imgEmp_"+t).parent().find(".ribbon").length)$("#app_imgEmp_"+t).parent().find(".ribbon").hide();$("#app_imgEmp_"+t).parent().find(".vendors-list-details").hide(),$("#app_imgEmp_"+t).parent().find(".vendors-list-slider").appendTo($("#app_imgEmp_"+t).parent())}else{if($("#app_imgEmp_"+t).parent().find(".vendors-list-details").show(),0<$("#app_imgEmp_"+t).parent().find(".ribbon").length)$("#app_imgEmp_"+t).parent().find(".ribbon").show(),$("#app_imgEmp_"+t).parent().find(".ribbon").before($("#app_imgEmp_"+t).parent().find(".vendors-list-slider")),$("#app_imgEmp_"+t).parent().find(".ribbon").after($("#app_imgEmp_"+t));else $("#app_imgEmp_"+t).parent().find(".vendors-list-thumb").after($("#app_imgEmp_"+t))}VendorMiniGallery.updateInfo(t,n,l,s)}if(0){var u=0;for(a=0;a<i.length;a++)i[a].on("load",function(){if(++u==i.length)p()})}else p()}},click:function(e){window.location.href=e},preload:function(t){$.ajax({url:"/json/empFotoGallery.php?idEmpresa="+t,success:function(e){if(VendorMiniGallery.fotos[t]=e.FOTOS,void 0!==e.SHOW_LEAD_LAYER&&"1"==e.SHOW_LEAD_LAYER)VendorMiniGallery.showLeadLayerInCountry=!0;if(VendorMiniGallery.showLeadLayerInCountry&&VendorMiniGallery.leadLayerVisible)VendorMiniGallery.fotos[t].push("app-lead-layer");var a=VendorMiniGallery.fotos[t],i=$("#app_imgEmp_"+t),o=i.clone().attr("src",a[1]);o.insertAfter(i),o.addClass("dnone"),o.remove()}})},pushFotos:function(e,a,i,o,t,n){if("app-lead-layer"!==e[a]){var r=$("<img />").attr("id","app_imgEmp_"+o).attr("src",e[a]);if(i.push(r),0<t&&"US"!=globals.Request_Country)$(r).addClass("app_lnkEsc_"+t).css("cursor","pointer").on("click",function(){window.location.href=$("#app_lnkEmp_"+o).attr("href")})}else{var s,d=$("#esl_"+o);if(d.hasClass("app-vcita-integracion"))s=$("<a />").attr({title:'Schedule an appointment',class:"btnFlat btnFlat--primary"+(!globals.isWWProject?" btnFlat--small":"")+" mt10 app-ua-track-event","data-track-c":"LeadTracking","data-track-a":"a-webframe","data-track-l":"d-desktop+s-list_gallery_slider","data-track-v":1,"data-track-ni":0,rel:"nofollow",href:d.data("href")}).html('Schedule an appointment');else if(d.hasClass("app-vcita-concertar"))s=$("<a />").attr({title:'Schedule an appointment',class:"btnFlat btnFlat--primary"+(!globals.isWWProject?" btnFlat--small":"")+" mt10 app-ua-track-event","data-track-c":"LeadTracking","data-track-a":"a-webframe","data-track-l":"d-desktop+s-list_gallery_slider","data-track-v":1,"data-track-ni":0,rel:"nofollow",href:"/emp-ShowWebsiteFrame.php?id_empresa="+o+"&trace=1",target:"_blank"}).html('Schedule an appointment');else if(d.hasClass("app-vcita-solicitar"))s=$("<a />").attr({title:'Request pricing',class:"btnFlat btnFlat--primary"+(!globals.isWWProject?" btnFlat--small":"")+" mt10 app-ua-track-event","data-track-c":"LeadTracking","data-track-a":"a-webframe","data-track-l":"d-desktop+s-list_gallery_slider","data-track-v":1,"data-track-ni":0,rel:"nofollow",href:"/emp-ShowWebsiteFrameTrace.php?id_empresa="+o,target:"_blank"}).html('Request pricing');else s=$("<a />").attr({title:'Request pricing',class:"btnFlat btnFlat--primary"+(!globals.isWWProject?" btnFlat--small":"")+" mt10 app-ua-track-event","data-track-c":"LeadTracking","data-track-a":"a-step1","data-track-l":"d-desktop+s-list_gallery_slider","data-track-v":1,"data-track-ni":0,"data-track-cds":JSON.stringify({dimension15:""+o,dimension16:""+t,dimension17:"42"}),rel:"nofollow",href:"javascript:void(0)",target:"_blank",onclick:"return vendors_showCapaFormularioSolic(this, '"+o+"', '"+t+"', false, 44, 42)"}).html('Request pricing');var l=$("<div />").addClass("gallery-lead-layer-button").append(s),c=$("<div />").addClass("gallery-lead-layer").append($("<div />").addClass("gallery-lead-layer-text").html('Did you like this vendor?')).append(l);r=$("<div />").attr("id","app_imgEmp_"+o).addClass("relative flex-item").html(c).append($("<img />").attr("src",e[0]));i.push(r)}if(VendorMiniGallery.preloadedResponse[o])$(document.body).data(n,r);return i}},vendorGallery={idEmpresa:null,idEscaparate:null,marginLeft:null,fotos:Array(),nFotos:Array(),show:function(e,a,i){var o=$("#mgall_"+e);if(vendorGallery.hide(),""!==$.trim(o.html()))o.show();else vendorGallery.showInit(e,a,i)},hide:function(){$("div:visible[id^='mgall_']").hide()},updateInfo:function(e,a,i,o){var t=$("#mgall_"+e),n="";n+='<a href="javascript:void(0);" onclick="vendorGallery.move('+e+", "+a+", -1, '"+o+"')\" class='gallery-nav mgall-prev'><i class=\"icon-vendor icon-vendor-nav-prev\"></i></a>",n+="<span><strong id='mgaShowNFoto_"+e+"'>"+(i+1)+"</strong> "+'of'+" <strong>"+vendorGallery.nFotos[e]+"</strong></span>",n+='<a href="javascript:void(0);" onclick="vendorGallery.move('+e+", "+a+",  1, '"+o+"')\" class='gallery-nav mgall-next'><i class=\"icon-vendor icon-vendor-nav-next\"></i></a>",t.html(n),t.show()},showInit:function(e,a,i){vendorGallery.hide(),vendorGallery.idEmpresa=e;vendorGallery.fotos[e];vendorGallery.updateInfo(e,a,0,i)},move:function(a,i,o,t){if(!vendorGallery.fotos.hasOwnProperty(a)||null===vendorGallery.fotos[a])document.body.style.cursor="wait",$.ajax({url:"/json/empFotoGallery.php?idEmpresa="+a,async:!1,success:function(e){vendorGallery.fotos[a]=e.FOTOS,vendorGallery.innerMove(a,i,o,t),document.body.style.cursor="default"}});else vendorGallery.innerMove(a,i,o,t)},innerMove:function(o,t,n,r){for(var s=vendorGallery.fotos[o],e=$("#app_imgEmp_"+o).attr("src"),d=0,a=0;a<s.length;a++)if(s[a],s[a]==e,s[a]==e){d=a;break}if(-1==n)if(0===d)d=s.length-1;else d-=1;if(1==n)if(d==s.length-1)d=0;else d+=1;for(var i=[],l=d;l<d+3&&l<s.length;l++){var c="nextPic_"+o+"_"+l;if(void 0===$(document.body).data(c)){var p=$("<img />").attr("id","app_imgEmp_"+o).attr("src",s[l]);if(i.push(p),0<t)$(p).addClass("app_lnkEsc_"+t).css("cursor","pointer").on("click",function(){window.location.href=$("#app_lnkEmp_"+o).attr("href")});$(document.body).data(c,p)}}function u(){var e,a="",i="nextPic_"+o+"_"+d;if(1==n&&!$("#app_imgEmp_"+o).is(":animated")){if($("#app_imgEmp_"+o).parent().css("width","570px").parent().css("overflow","hidden"),a=void 0!==$(document.body).data(i)?$(document.body).data(i):$("#app_imgEmp_"+o).clone().attr("src",s[d]),0<(e=$("#app_lnkEmp_"+o)).length)vendors_fncImgL(a[0],e.attr("href"));a.css("margin-left",r).css("height","auto"),$("#app_imgEmp_"+o).parent().cleanWhitespace(),$("#app_imgEmp_"+o).parent().append(a).end().animate({"margin-left":"-283px"},400,function(){$(this).first().remove()})}else if(!$("#app_imgEmp_"+o).is(":animated")){if($("#app_imgEmp_"+o).parent().css("width","570px").parent().css("overflow","hidden"),a=void 0!==$(document.body).data(i)?$(document.body).data(i):$("#app_imgEmp_"+o).clone().attr("src",s[d]),0<(e=$("#app_lnkEmp_"+o)).length)vendors_fncImgL(a[0],e.attr("href"));a.css("margin-left",r).css("height","auto"),$("#app_imgEmp_"+o).before(a).css("margin-left","0px"),$("#app_imgEmp_"+o+":last").css("margin-left","-283px").animate({"margin-left":r},400,function(){$(this).next().remove()})}vendorGallery.updateInfo(o,t,d,r)}if(1==d&&0<i.length&&"onload"in i[0][0]){var f=0;for(a=0;a<i.length;a++)i[a].on("load",function(){if(++f==i.length)u()})}else u()},click:function(e){window.location.href=e}},vendorGalleryMedium={idEmpresa:null,idEscaparate:null,marginLeft:null,fotos:Array(),nFotos:Array(),show:function(e,a,i){var o=$("#mgall_"+e);if(vendorGalleryMedium.hide(),""!==$.trim(o.html()))o.show();else vendorGalleryMedium.showInit(e,a,i)},hide:function(){$("div:visible[id^='mgall_']").hide()},updateInfo:function(e,a,i,o){var t=$("#mgall_"+e),n="";n+='<a href="javascript:void(0);" onclick="vendorGalleryMedium.move('+e+", "+a+", -1, '"+o+"')\" class='gallery-nav mgall-prev'><i class=\"icon-vendor icon-vendor-nav-prev\"></i></a>",n+="<span class='listItem__imageCounter'>"+(i+1)+" / "+vendorGalleryMedium.nFotos[e]+"</span>",n+='<a href="javascript:void(0);" onclick="vendorGalleryMedium.move('+e+", "+a+",  1, '"+o+"')\" class='gallery-nav mgall-next'><i class=\"icon-vendor icon-vendor-nav-next\"></i></a>",t.html(n),t.show()},showInit:function(e,a,i){vendorGalleryMedium.hide(),vendorGalleryMedium.idEmpresa=e;vendorGalleryMedium.fotos[e];vendorGalleryMedium.updateInfo(e,a,0,i)},move:function(a,i,o,t){if(!vendorGalleryMedium.fotos.hasOwnProperty(a)||null===vendorGalleryMedium.fotos[a])document.body.style.cursor="wait",$.ajax({url:"/json/empFotoGalleryMedium.php?idEmpresa="+a,async:!1,success:function(e){vendorGalleryMedium.fotos[a]=e,vendorGalleryMedium.innerMove(a,i,o,t),document.body.style.cursor="default"}});else vendorGalleryMedium.innerMove(a,i,o,t)},innerMove:function(t,n,r,s){if(!vendorGalleryMedium.moving){vendorGalleryMedium.moving=!0;for(var d=vendorGalleryMedium.fotos[t],e=$("#app_imgEmp_"+t).attr("src"),l=0,a=0;a<d.length;a++)if(d[a],d[a]==e,d[a]==e){l=a;break}if(-1==r)if(0===l)l=d.length-1;else l-=1;if(1==r)if(l==d.length-1)l=0;else l+=1;for(var i=[],o=l;o<l+3&&o<d.length;o++){var c="nextPic_"+t+"_"+o;if(void 0===$(document.body).data(c)){var p=$("<img />").attr("id","app_imgEmp_"+t).attr("src",d[o]);if(i.push(p),0<n)$(p).addClass("app_lnkEsc_"+n).css("cursor","pointer").on("click",function(){window.location.href=$("#app_lnkEmp_"+t).attr("href")});$(document.body).data(c,p)}}function u(){var e="",a="nextPic_"+t+"_"+l,i=$("#app_imgEmp_"+t).width();$("#app_imgEmp_"+t).parent().css("width",2*i+"px").parent().css("overflow","hidden"),$("#app_imgEmp_"+t).css("width",i+"px"),(e=void 0!==$(document.body).data(a)?$(document.body).data(a):$("#app_imgEmp_"+t).clone().attr("src",d[l])).css({"margin-left":s,height:"auto",width:i+"px",float:"left"});var o=$("#app_lnkEmp_"+t);if(0<o.length)vendors_fncImgL(e[0],o.attr("href"));if(1==r&&!$("#app_imgEmp_"+t).is(":animated"))$("#app_imgEmp_"+t).parent().cleanWhitespace(),$("#app_imgEmp_"+t).parent().append(e).end().animate({"margin-left":"-"+i+"px"},250,function(){$(this).first().remove(),vendorGalleryMedium.moving=!1});else if(!$("#app_imgEmp_"+t).is(":animated"))$("#app_imgEmp_"+t).before(e).css("margin-left","0px"),$("#app_imgEmp_"+t+":last").css("margin-left","-"+i+"px").animate({"margin-left":s},250,function(){$(this).next().remove(),vendorGalleryMedium.moving=!1});vendorGalleryMedium.updateInfo(t,n,l,s)}if(1==l&&0<i.length&&"onload"in i[0][0]){var f=0;for(a=0;a<i.length;a++)i[a].on("load",function(){if(++f==i.length)u()})}else u()}},click:function(e){window.location.href=e}};function vendors_componentIsLoaded(e,a){var i=e.attr("data-components-loaded");if(void 0===i||!1===i)return!1;else return i.split(";").includes(a)}function vendors_setLoadedComponent(e,a){var i=e.attr("data-components-loaded"),o=[];if(void 0!==i&&!1!==i)o=i.split(";");o.push(a),e.attr("data-components-loaded",o.join(";"))}function vendors_initGallery(r){if($("[class*= appGallery_]").each(function(){if(!vendors_componentIsLoaded($(this).closest(".app-vendors-item"),"vendor_gallery")){var e=$(this).attr("id").split("_")[1],a="0",i=!1;if($(this).hasClass("disable-gallery-lead"))i=!0;if(0<$(this).find("[class*=app_lnkEsc_]").length)a=$(this).find("[class*=app_lnkEsc_]:first").attr("class").split("app_lnkEsc_")[1].split(" ")[0];if(i)VendorMiniGallery.leadLayerVisible=!1;if(void 0!==r)VendorMiniGallery.hidePrevious=r;VendorMiniGallery.nFotos[e]=parseInt($(this).attr("class").split("appGallery_")[1].split(" ")[0])+1,VendorMiniGallery.fotos[e]=Array();var o=$(this).find("img").attr("src"),t=o.split("/");t.pop(),t=t.join("/"),VendorMiniGallery.fotos[e]=[o,t+"/t10_"+$(this).data("image-1"),t+"/t10_"+($(this).data("image-2")||$(this).data("image-1")),t+"/t10_"+($(this).data("image-3")||$(this).data("image-1"))],VendorMiniGallery.preloaded[e]=!1,VendorMiniGallery.preloadedResponse[e]=!1;var n=$("<div />").attr("id","mgall_"+e).addClass("vendor-slider-controls");if($(this).find(".app-vendors-item-slider").append($(n)).addClass("app-preload-gallery"),!common_isMobileDevice())$(this).hover(function(){VendorMiniGallery.show(e,a,"0px")});else VendorMiniGallery.showInit(e,a,"0px");vendors_setLoadedComponent($(this).closest(".app-vendors-item"),"vendor_gallery")}}),0<$(".app-preload-gallery").first().length)vendors_preloadSlidersList(),$(window).on("scroll",function(){vendors_preloadSlidersList()})}function vendors_setVendorOptions(e){(e=e||$(".app-vendors-item")).each(function(){if(!vendors_componentIsLoaded($(this),"vendor_options")){var e,a,i=$(this).data("track-l"),o=$(this).data("islanding"),t=$(this).data("item-type"),n="app-catalog-lead-btn btnFlat btnFlat--primary"+("thumb"===t?" btnFlat--full":""),r='<i class="icon icon-arrow-right-red icon-right"></i>',s=$(this).data("id-empresa");if($(this).hasClass("app-vcita-integracion")){var d=$(this).data("href"),l=d&&-1!==d.indexOf("javascript")?"":"_blank";e=$("<a />").attr({title:'Schedule an appointment',class:n+" app-ua-track-event","data-track-c":"LeadTracking","data-track-a":"a-webframe","data-track-l":(o?"d-landing+":"d-desktop+")+i,"data-track-v":1,"data-track-ni":0,rel:"nofollow",href:$(this).data("href"),target:l}).html('Schedule an appointment'+r)}else if($(this).hasClass("app-vcita-concertar"))e=$("<a />").attr({title:'Schedule an appointment',class:n+" app-ua-track-event","data-track-c":"LeadTracking","data-track-a":"a-webframe","data-track-l":(o?"d-landing+":"d-desktop+")+i,"data-track-v":1,"data-track-ni":0,rel:"nofollow",href:"/emp-ShowWebsiteFrame.php?id_empresa="+s+"&trace=1",target:"_blank"}).html('Schedule an appointment'+r);else if($(this).hasClass("app-vcita-solicitar"))e=$("<a />").attr({title:'Request pricing',class:n+" app-ua-track-event","data-track-c":"LeadTracking","data-track-a":"a-webframe","data-track-l":(o?"d-landing+":"d-desktop+")+i,"data-track-v":1,"data-track-ni":0,rel:"nofollow",href:"/emp-ShowWebsiteFrameTrace.php?id_empresa="+s,target:"_blank"}).html('Request pricing'+r);else e=$("<a />").attr({title:'Request pricing',class:n+" app-ua-track-event","data-track-c":"LeadTracking","data-track-a":"a-step1","data-track-l":(o?"d-landing+":"d-desktop+")+i,"data-track-v":1,"data-track-ni":0,"data-track-cds":JSON.stringify({dimension15:""+s,dimension16:""+$(this).data("id-escaparate"),dimension17:o?"17":"3"}),rel:"nofollow",href:"javascript:void(0)",target:"_blank",onclick:"return vendors_showCapaFormularioSolic(this, '"+s+"', '"+$(this).data("id-escaparate")+"', "+(o?"true":"false")+", 16, "+(o?"17":"3")+")"}).html('Request pricing');if($(this).hasClass("app-vpromo")){var c="item-promotions-layer-position",p='<i class="svgIcon svgIcon__promosTag listItem__promoIcon"><svg viewBox="0 0 33 33"><path d="M.81 19.941a2.764 2.764 0 0 1 .015-3.924L16.295.792A2.77 2.77 0 0 1 18.232 0h12.004A2.764 2.764 0 0 1 33 2.765v12.003c0 .726-.285 1.423-.794 1.938l-15.22 15.469a2.766 2.766 0 0 1-3.927.015L.81 19.941zm1.414-1.414l12.25 12.249c.3.3.788.298 1.086-.004l15.222-15.47a.759.759 0 0 0 .218-.534V2.765A.765.765 0 0 0 30.236 2H18.232c-.2 0-.393.08-.536.22L2.228 17.441a.764.764 0 0 0-.004 1.085v.001zM19 9.999A4 4 0 1 1 27 10a4 4 0 1 1-8 0v-.001zm2 0V10a2 2 0 1 0 4 .001 2 2 0 0 0-4-.002z" fill-rule="nonzero"/></svg></i>';if("thumb"==$(this).data("item-type"))c+=" item-promotions-layer-position-thumbs",a='<div class="app-promo-event relative" data-id-empresa="'+s+'">'+p+'<span class="color-orange">'+_ns('%s promotion', '%s promotions', $(this).data("num-promos"),$(this).data("num-promos"))+'</span><div class="app-promo-layer '+c+'" style="display:none;"></div></div>';else a='<span class="listItem__featuresName">'+'Deals'+'</span><div class="app-promo-event relative" data-id-empresa="'+s+'">'+p+'<span class="color-orange">'+$(this).data("num-promos")+'</span><div class="app-promo-layer '+c+'" style="display:none;"></div></div>'}if(void 0!==$(this).data("discount"))if("thumb"===t)$(this).find(".app-tag-discount").html("-"+$(this).data("discount")+"%").data("href",$(this).find("a[href]:first").attr("href"));else $(this).find(".app-tag-discount").html("-"+$(this).data("discount")+"%&nbsp;"+'WeddingWire').data("href",$(this).find("a[href]:first").attr("href"));if(void 0!==$(this).data("discount-small"))$(this).find(".app-tag-discount").html("-"+$(this).data("discount-small")+"%").data("href",$(this).find("a[href]:first").attr("href"));if($(this).find(".app-vendors-item-guardar").hasClass("on"))$(this).find(".app-vendors-item-guardar").data("id-sector");$(this).find(".app-vendors-item-solicitar:first").append(e),$(this).find(".app-promos-div:first").prepend(a),vendors_setLoadedComponent($(this),"vendor_options")}})}function vendors_save(e,a,i,o){common_callEnsureLogged(function(){$.ajax({url:"/tools/VendorsSave?id_empresa="+e+"&zona_vendor="+a+"&reduced="+reduced,success:function(e){i(e)}})},"vendors","tracking=vendor_favourite",null,!0,null,o)}function vendors_unsave(e,a){common_callEnsureLogged(function(){$.ajax({url:"/tools/VendorsDelete?id_empresa="+e,success:function(e){a(e)}})},"vendors","tracking=vendor_favourite")}function vendors_showSaveOption(){$(document.body).on("click touchstart",".app-vendors-item-guardar",function(e){e.preventDefault(),e.stopPropagation();var t=$(this),n=t.data("id"),a=t.data("id-sector");if($(this).hasClass("on")){if(void 0!==a)window.location.href="/tools/VendorsCateg?id_categ="+a}else t.addClass("on animation"),vendors_save(n,1,function(e){var a={vendorId:n};if(void 0!==t.data("tracking")){var i=t.data("tracking");if("object"!=typeof t.data("tracking"))i=$.parseJSON(t.data("tracking"));a.city=i.city,a.region=i.region,a.country=i.country,a.address=i.address,a.sector=i.sector,a.currency=i.currency,a.price=i.price}if(document.body.dispatchEvent(new CustomEvent("vendor_saved_as_favorite",{detail:a})),t.data("google-conversion-enabled"))GtagTracking.event("view_conversionintent",{listing_id:n,listing_pagetype:"conversionintent"});if($(".app-vendors-num-saved").length&&0!=parseInt($(".app-vendors-num-saved").html(),10)){var o=parseInt($(".app-vendors-num-saved").html(),10)+1;$(".app-vendors-num-saved").html(o)}else if($(".app-vendors-num-saved").length&&0==parseInt($(".app-vendors-num-saved").html(),10))$.ajax({url:"/emp-GetNumVendorsSaved.php",success:function(e){var a=parseInt(e,10);$(".app-vendors-num-saved").html(a)}});else $.ajax({url:"/emp-GetNumVendorsSaved.php",success:function(e){var a=parseInt(e,10);if($("#vendors-list-view").length)$("#vendors-list-view ul").append("<li class='myvendors'><a href='/tools/Vendors'>"+'Vendor Manager'+"<span class='app-vendors-num-saved'>"+a+"</span></a></li>")}});$(".app-proveedores-heart-empty").addClass("dnone"),$(".app-proveedores-heart-saved").removeClass("dnone"),$(".app-vendors-num-saved").effect("bounce",{times:1},400)},function(){if(t.hasClass("on"))t.removeClass("on animation")})}),$(document.body).on("touchstart",".app-vendors-item-guardar",function(e){$(this).css("pointer-events","none"),e.preventDefault()}),$(document.body).on("touchend",".app-vendors-item-guardar",function(e){$(this).css("pointer-events","")})}function vendors_redirectFromFilter(e){var a=_filters.find("div[data-name=grupo] li.selected").data("value"),i=_filters.find("div[data-name=sector] li.selected").data("value"),o=_filters.find("div[data-name=provincia] li.selected").data("value"),t=_filters.find("div[data-name=poblacion] li.selected").data("value"),n=_filters.find("div[data-name=geozona] li.selected").data("value"),r=$(e).closest("div[data-name]").data("name");switch(r){case"grupo":a=$(e).data("value");break;case"sector":i=$(e).data("value");break;case"provincia":o=$(e).data("value");break;case"poblacion":t=$(e).data("value");break;case"geozona":n=$(e).data("value")}if(searchValues.valGrupo==a&&searchValues.valSector==i&&searchValues.valProvincia==o&&searchValues.valPoblacion==t&&searchValues.valGeozona==n)return!1;if("provincia"==r)n=t=-1;if("grupo"==r)n=t=i=-1;if("sector"==r&&-1!=i)n=t=a=-1;if("geozona"==r)t=-1;var s=globals.Request_prevurl_model,d=globals.Request_URL_keygen,l=globals.prevGrupoUrl,c="",p="";if(i&&-1!=i){if(s)p=d+"/";else p="/";if(c=p+i,t&&-1!=t)c=p+i+"/"+t;else if(n&&-1!=n)c=p+i+"/"+n;else if(o&&-1!=o)c=p+i+"/"+o}else if(a&&-1!=a){if(c=l+a,t&&-1!=t)c=l+a+"/"+t;else if(n&&-1!=n)c=l+a+"/"+n;else if(o&&-1!=o)c=l+a+"/"+o}else if(t&&-1!=t)c=d+"/"+t;else if(n&&-1!=n)c=d+"/"+n;else if(o&&-1!=o)c=d+"/"+o;else c=d;if(0!==c.indexOf("/"))c="/"+c;location.href=c}function vendors_validarFormAcceso(e){if(e.Login.value.length<5)return alert('The username must contain a minimum of five characters.'),e.Login.focus(),!1;if(e.Password.value.length<4)return alert('The password must contain a minimum of four characters.'),e.Password.focus(),!1;else return!0}function vendors_alta_validarPaso1(a){if(a.Login.value.trim().length<5)return alert('The username must contain a minimum of five characters.'),a.Login.focus(),!1;$.ajax({url:"/emp-VerificaLogin.php?login="+a.Login.value.trim(),async:!1,success:function(e){if("OK"!==e)a.Login.focus(),alert('The username that you have entered is unavailable.');else if(vendors_alta_validarPaso1SiLoginEsOk(a))a.submit()}})}function vendors_alta_validarPaso1SiLoginEsOk(e){if(e.Password.value.trim().length<6)return alert('The password should contain a minimum of six characters.'),e.Password.focus(),!1;if(e.Password.value!=e.ConfirmPassword.value)return alert('The password confirmation does not match with the initial password.'),e.ConfirmPassword.focus(),!1;if(e.PersCtcto.value.trim().length<3)return alert('Please provide your full name.'),e.PersCtcto.focus(),!1;if(!common_validateMailField(e.Mail,!0,!0))return e.Mail.focus(),!1;var a=e.Telefono.value.trim().replace(/ /g,"");if("+91"==$("input[name=Telefono]").data("prefix")){if(!/^((\+91)|(91)){0,1}(-|\s){0,1}[0-9]{10}$/.test(a))return alert('Enter a ten digit phone number like: +91 0000000000.'),e.Telefono.focus(),!1}else if(a.length<3)return alert('Phone number must contain a minimum of three digits.'),e.Telefono.focus(),!1;var i=void 0!==e.Poblacion&&-1==e.Poblacion.value||""===e.Poblacion.value||"0"===e.Poblacion.value;if(void 0===e.onlyProvince&&i||void 0!==e.onlyProvince&&("0"===e.onlyProvince.value||""===e.onlyProvince.value)&&i)return alert('You must select a city or town.'),e.txtStrPoblacion.focus(),!1;if(void 0!==e.onlyProvince&&"1"===e.onlyProvince.value&&""===e.Provincia.value)return alert('Tienes que seleccionar la población o provincia donde resides'),e.txtStrPoblacion.focus(),!1;if(0<$(e).find("input[name=CodigoPostal]").length&&e.CodigoPostal.value.trim().length<3)return alert('The postal code must contain a minimum of three characters.'),e.CodigoPostal.focus(),!1;if(e.Direccion.value.trim().length<3)return alert('The address must contain a minimum of three characters.'),e.Direccion.focus(),!1;if(e.Nombre.value.trim().length<5)return alert('Your company name must have a minimum of five characters.'),e.Nombre.focus(),!1;if(tinyMCE.triggerSave(),common_strip_html_tags(e.Descripcion.value).trim().length<300)return alert('The description must contain a minimum 300 characters.'),tinyMCE.get("Descripcion").focus(),!1;if(!$(".app-vendors-alta-sector input").is(":checked"))return alert('You must select a category that best defines your business.'),!1;var o=$("#app-check-legal-terms");if(0!=o.length&&!o.prop("checked"))return alert('You must accept the Terms of Use and privacy policy.'),!1;else return!0}function vendors_alta_validarPaso2(e){var a=document.getElementsByName("OldFicheros[]"),o=document.getElementsByName("Ficheros[]");if(console.log(a,o),0===a.length&&0===o.length)return alert('You must add your company logo and 8 images of your services.'),!1;for(i=0;i<a.length;i++)if(descFile=document.getElementsByName("ficherosDescription["+a[i].value+"]"),descFile[0].value.length<5)return alert('The image description must contain a minimum of five characters.'),descFile[0].focus(),!1;for(i=0;i<o.length;i++)if(descFile=document.getElementsByName("ficherosDescription["+a[i].value+"]"),descFile[0].value.length<5)return alert('The image description must contain a minimum of five characters.'),descFile[0].focus(),!1;var t=$(".app-item-select"),n=0,r=0;if(t.each(function(){if(1==$(this)[0].value)n++;if(2==$(this)[0].value)r++}),!1===globals.isWWProject&&0===n)return alert('You must select your company logo.'),!1;if(0===r)return alert('You must select the main photo for your business.'),!1;if(uploader&&0<uploader.files.length){var s=0;if($.each(uploader.files,function(e,a){if(5!=a.status)s++}),0<s)return alert('You must wait until your files have been uploaded.'),!1}return!0}function vendors_newpassword_validar(){if($("[class*=app-vendors-newpassword]").hide(),$("input[name=NewPassword]").val().length<6)return $(".app-vendors-newpassword-longitud").slideToggle(),!1;if($("input[name=NewPassword]").val()!==$("input[name=NewPassword2]").val())return $(".app-vendors-newpassword-no-coinciden").slideToggle(),!1;else return!0}function gwo_getVariantNumber(e){if(null===e)e="variacion";var a=0;if("undefined"!=typeof utmx)a=utmx("variation_number",e);if(void 0===a)a=0;return a}function vendors_showMultisolicitud(e){var a=document.getElementById("app-common-layer"),i=document.createElement("div");i.className="modal-dialog modal-request modal-multi-request "+e,a.appendChild(i).innerHTML=document.getElementById("fMultisolicitud").contentWindow.document.body.innerHTML,$("#app-common-layer").modal({keyboard:!1,backdrop:"static"})}function vendors_sendMultisolic(){var e=$(".app-multi-lead-submit");if("disabled"!=e.attr("disabled"))bodas.leadTrackingExceptionManager.init(document.getElementsByName("frmMultisolic")),bodas.leadTrackingExceptionManager.addFormParams(),document.frmMultisolic.submit(),e.attr("disabled","disabled"),addLoader(e)}function vendors_closeContactarEmp(){document.getElementById("contact-emp-layer").style.display="none",document.getElementById("btnCompany").className="btn btn-primary"}function vendors_fncEmpLNL(){$("*[id*=app_imgEmp]").each(function(e,a){var i=a.id.substr(11),o=$("#app_lnkEmp_"+i);if(0<o.length)vendors_fncImgL(a,o.attr("href"))})}function vendors_fncImgL(e,a){if(!$(e).find(".gallery-lead-layer").length)e.style.cursor="pointer",e.onclick=function(){if(globals.Request_AnalyticsEcommerceEnabled)bodas.trackEcClick(this);if($(e).closest("div[id^='esl_']").hasClass("app-escaparate-blank"))window.open(a,"_blank");else window.location.href=a}}function vendors_showTelefonoTrace(e,a){if(void 0===a)a="";if($(".app-emp-phone"+a).is(":visible"))$(".app-emp-phone"+a).hide();else $(".app-emp-phone"+a).load("/emp-ShowTelefonoTrace.php?id_empresa="+e+"&reduced="+reduced),$(".app-emp-phone"+a).show();if(ReducedMatcher.isVendorProfile(CurrentPageInfo.getReduced())){var i=CurrentPageInfo.getPageData();document.body.dispatchEvent(new CustomEvent("vendor_clicked_to_call",{detail:i}))}}function vendors_vendorSavedZona(r,e,a){common_callEnsureLogged(function(){if(!a)a="";$("body").find(".app-vendor-state-save"+r).each(function(e,a){var i=$(a);$(this).html("<div class='btn btn-bordered' style='display:inline-block;vertical-align:middle;width:"+i.css("width")+";height:"+i.css("height")+";'><span class='loader loader-small'></span></div>")}),$.ajax({url:"/tools/VendorsSave?id_empresa="+r+"&zona_vendor="+e+"&reduced="+reduced+"&mode="+a,success:function(a){var i=parseInt($(".app-vendors-num-saved").html())+1,e=$("input[name=facebook_conversion_enabled]").val(),o=$("input[name=google_conversion_enabled]").val();if($("body").find(".app-vendor-state-save"+r).each(function(){$(this).html(a);var e=$(".app-vendors-num-saved");if(0<e.length)e.html(i),e.effect("bounce",{times:1},400)}),o)GtagTracking.event("view_conversionintent",{listing_id:r,listing_pagetype:"conversionintent"});var t={vendorId:r};if(e){var n=$.parseJSON($("input[name=facebook_conversion_enabled]").data("tracking"));t.city=n.city,t.region=n.region,t.country=n.country,t.address=n.address,t.sector=n.sector,t.currency=n.currency,t.price=n.price}document.body.dispatchEvent(new CustomEvent("vendor_saved_as_favorite",{detail:t}))}})},"vendors","tracking=vendor_favourite")}function vendors_vendorHired(a,i,o,t,n){n=n||"storefront_header",ga_trackEventAll("CompanyProfile","HiredVendor","d-desktop+s-"+n+"+a-click",1,0),common_callEnsureLogged(function(){if(confirm('Do you want to mark this vendor as hired?')){var e;if(isNaN(parseInt(a)))return!1;e={idEmpresa:i,idCategory:a,status:t?t:3,listed:1,rating:1,zonaInsert:o=o||-1},$.post("/tools/VendorsAdd",e,function(e){if(e.success)$(".app-displayer").addClass("dnone"),$(".app-displayer-hide").removeClass("dnone"),ga_trackEventAll("CompanyProfile","HiredVendor","d-desktop+s-"+n+"+a-confirm",1,0);else document.location.href=window.location})}},"vendors","tracking=vendor_hired")}function vendors_calendar_changeYear(e){document.getElementById("ano").value=e,document.frmCalendario.submit()}function vendors_showCapaCupon(e,a,i,o,t,n,r,s){if(null===o)o="/emp-ShowCupon.php?id_promo="+a+"&is_print="+i;return common_openLayer(o,function(){if(null!==n&&null!==r)initMaps(),GLoad("map-layer"),GShowEmp(t,n,r,14,s)},!0),!1}function vendors_showCapaCuponEvento(e,a,i,o,t,n,r,s){if(null===o)o="/emp-ShowCuponEvento.php?id_evento="+a+"&is_print="+i;return common_openLayer(o,function(){if(null!==n&&null!==r)initMaps(),GLoad("map-layer"),GShowEmp(t,n,r,14,s)},!0),!1}function vendors_setCamposRol(e,a){if(1==e)$("#novia",a).prop("checked",!0);else if(2==e)$("#novio",a).prop("checked",!0);else $("#otros",a).prop("checked",!0),$("#otros",a).val($("#select-otros",a).val())}function vendors_formNoVendor(){var e=$(".app-suggest-vendor-div-default").closest("form");$(".app-suggest-vendor-div-default").hide().delay(500),$("#suProvider_poblacion",e).show(),$(".box-scroll").jScrollPane()}function vendors_formNoVendorLayer(){var e=$(".app-suggest-vendor-div-layer").closest("form");$(".app-suggest-vendor-div-layer").hide().delay(500),$("#suProvider_poblacion",e).show()}function vendors_showWebsite(e,a,i){var o="/emp-ShowWebsiteFrame.php?id_empresa="+a;if(null!==i)o=o+"&trace="+i;window.open(o,"_blank","noopener")}function vendors_viewWebsite(e,a){ga_trackEventAll("Storefront","clicks_visit_vendor_website","Storefront Header",0,!1),$.get("/emp-ShowWebsiteTrace.php?id_empresa="+a),e+=0<=e.indexOf("?")?"&":"?",e+=$.param({utm_campaign:"WeddingWire",utm_medium:"referral",utm_source:"weddingwire.com"}),window.open(e,"_blank","noopener")}function vendors_ShowFiltersPromos(e,a,i,o,t){$("#app-busc-filters").load("/promos-buscFilters.php?id_region_adm1="+e+"&id_provincia="+a+"&id_grupo="+i+"&id_sector="+o+"&TipoPromocion="+t,function(){$("#app-header").append($("#app-filter-header").html()),$("#app-header").show()})}function vendors_loadProvinciaPromos(){document.frmPromos.id_provincia.value=document.frmBusc.Provincia.value,document.frmPromos.id_grupo.value="",document.frmPromos.id_sector.value="",document.frmPromos.TipoPromocion.value="",document.frmPromos.id_region.value="",document.frmPromos.NumPage.value="1",document.frmPromos.submit()}function vendors_loadGrupoPromos(){document.frmPromos.id_provincia.value=document.frmBusc.Provincia.value,document.frmPromos.id_grupo.value=document.frmBusc.Grupo.value,document.frmPromos.id_sector.value="",document.frmPromos.TipoPromocion.value="",document.frmPromos.NumPage.value="1",document.frmPromos.submit()}function vendors_loadSectorPromos(){document.frmPromos.id_provincia.value=document.frmBusc.Provincia.value,document.frmPromos.id_grupo.value=document.frmBusc.Grupo.value,document.frmPromos.id_sector.value=document.frmBusc.Sector.value,document.frmPromos.TipoPromocion.value="",document.frmPromos.NumPage.value="1",document.frmPromos.submit()}function vendors_loadTipoPromos(e){document.frmPromos.id_provincia.value=document.frmBusc.Provincia.value,document.frmPromos.id_grupo.value=document.frmBusc.Grupo.value,document.frmPromos.id_sector.value=document.frmBusc.Sector.value,document.frmPromos.TipoPromocion.value=e,document.frmPromos.NumPage.value="1",document.frmPromos.submit()}function vendors_doLead(e,a,o){if(!e.leadDone){e.leadDone=!0;var i={},t=$('form[name="frmMultisolic"]');t.attr("data-it-extra-id-empresa",$(e).data("id-empresa")),internalTrackingService.triggerSubmit(t,!0),bodas.leadTrackingExceptionManager.init(t[0]),bodas.leadTrackingExceptionManager.addFormParams(),t.find('input[type="hidden"]').each(function(e,a){i[a.name]=a.value}),i.nEmpresas=1,i.idEscaparateSolic=a,$(e).addClass("block btn-outline outline-green disabled icon icon-check-green icon-left fa fa-check").removeClass("btn btn-primary").html('Sent'),$.post("/emp-ContactarRunSingle.php",i,function(e,a,i){if(1==e.retval)$('input[name="sent_'+o+'"]').val(e.idSolicitud)})}}function vendors_maps_closeLayer(e){var a=document.getElementById(e);if(a.parentNode.removeChild(a),a=document.getElementById("overlay"))a.parentNode.removeChild(a);$("object").show()}function vendors_search_applyFilters(){var e=globals.Request_prevurl_model,a=globals.Request_URL_keygen,i=globals.prevGrupoUrl,o="",t="",n=$("#app-frm-search"),r=$("input[name='id_grupo']",n).data("value"),s=$("input[name='id_sector']",n).data("value"),d=$("input[name='id_provincia']",n).data("value");if(""===d)d=$("input[name='id_region']",n).data("value");var l=$("input[name='id_poblacion']",n).data("value");if(s&&-1!=s){if(e)t=a+"/";else t="/";if(o=t+s,l&&-1!=l)o=t+s+"/"+l;else if(d&&-1!=d)o=t+s+"/"+d}else if(r&&-1!=r){if(o=i+r,l&&-1!=l)o=i+r+"/"+l;else if(d&&-1!=d)o=i+r+"/"+d}else if(l&&-1!=l)o=a+"/"+l;else if(d&&-1!=d)o=a+"/"+d;else o=a;if(0!==o.indexOf("/"))o="/"+o;location.href=o}function vendors_search_buscFilters(){var e=$("#app-vendors-search-filters"),a=e.data("url")||"/busc-Filters.php";if(e.length&&0===e.text().trim().length)e.load(a,e.data("filters"),function(){common_applyIcheck(),vendors_bindSliderInput(),vendors_bindCalendarInput(),vendors_filtersDistanceSuggest()})}$.fn.resurrectableAlert=function(a){if(a.storageKey){var i=JSON.parse(localStorage.getItem(a.storageKey))||{},o=new Date,e=new Date(parseInt(i.visible_at,10));if(!(e instanceof Date)||isNaN(e))e=o;if(e<=o){var t=a.closeBtnSelector||".app-close",n=a.displayAfter||60,r=this;r.show(),$(r.find(t)).on("click",function(){r.hide();var e=new Date(o.getTime());e.setSeconds(o.getSeconds()+n),i.visible_at=e.getTime(),localStorage.setItem(a.storageKey,JSON.stringify(i))})}}else console.warn("missing required option: storageKey")};var _filtersScroll=[];function vendors_nagigatorScrollto(e){if(_filtersScroll[e.next().data("name")]&&!e.next().is(":hidden")){if(0<$("li.selected",e.next()).length){var a=$("li.selected",e.next()).position().top-e.next().position().top;e.next().find(".filter-scroll").scrollTop(a-150)}_filtersScroll[e.next().data("name")]=!1}return e}function vendors_initShow(e){if(-1===["app-filter-sector","app-filter-town","app-filter-province","app-filter-service","app-filter-geozone"].indexOf(e.attr("id")))e.next().toggle(),vendors_nagigatorScrollto(e);else vendors_nagigatorScrollto(e)}function vendors_search_refreshFilters(){var e=$(".app-toggle-navigators.app-selected").length;if(vendors_initShow($("#app-filter-sector")),vendors_initShow($("#app-filter-service")),0==e)vendors_initShow($("#app-filter-sector"));else if(1==e){var a=$(".app-toggle-navigators.app-selected")[0],i=$(a).closest(".app-toggle-navigators").attr("id");if(vendors_initShow($("#app-filter-sector")),"app-filter-province"==i)vendors_initShow($("#app-filter-sector"));else if("app-filter-sector"==i)vendors_initShow($("#app-filter-province"));else if("app-filter-geozone"==i)vendors_initShow($("#app-filter-town"));else if("app-filter-town"==i)vendors_initShow($("#app-filter-geozone"))}else if(2==e){a=$(".app-toggle-navigators.app-selected")[1],i=$(a).closest(".app-toggle-navigators").attr("id");if(vendors_initShow($("#app-filter-sector")),"app-filter-sector"==i)if($("#app-filter-geozone").length)vendors_initShow($("#app-filter-geozone"));else vendors_initShow($("#app-filter-town"));else if("app-filter-service"==i)vendors_initShow($("#app-filter-province"))}else if(3==e){a=$(".app-toggle-navigators.app-selected")[2],i=$(a).closest(".app-toggle-navigators").attr("id");if(vendors_initShow($("#app-filter-sector")),"app-filter-town"==i)vendors_initShow($("#app-filter-geozone"));else if("app-filter-geozone"==i)vendors_initShow($("#app-filter-town"));else if("app-filter-service"==i)if($("#app-filter-geozone").length)vendors_initShow($("#app-filter-geozone"));else vendors_initShow($("#app-filter-town"))}else if(4==e){a=$(".app-toggle-navigators .app-selected")[3],i=$(a).closest(".app-toggle-navigators").attr("id");if(vendors_initShow($("#app-filter-sector")),"app-filter-town"==i)if($("#app-filter-geozone").length)vendors_initShow($("#app-filter-geozone"));else vendors_initShow($("#app-filter-town"));else vendors_initShow($("#app-filter-town"))}else{a=$(".app-toggle-navigators .app-selected")[4],i=$(a).closest(".app-toggle-navigators").attr("id");vendors_initShow($("#app-filter-service"))}}function vendors_empresa_init_slider(i,e,a){var o=void 0!==a&&"1"==a?"1":"0",t=void 0!==e&&"true"==e?"true":"false",n=$("#emp-rs-gallery").royalSlider({controlNavigation:"none",loop:!1,imageScaleMode:"fill",imageScalePadding:0,navigateByClick:!0,numImagesToPreload:50,arrowsNav:!0,arrowsNavAutoHide:!1,arrowsNavHideOnTouch:!1,keyboardNavEnabled:!0,fadeinLoadedSlide:!0,globalCaption:!1,globalCaptionInside:!1,slidesSpacing:0,transitionSpeed:0}).data("royalSlider");$.ajax({url:"/json/empFotoGalleryEmpresa.php?limit=1&idEmpresa="+i+"&showLeadLayer="+o+"&isTestAB="+t,success:function(e){for(var a=0;a<e.length;a++)n.appendSlide(e[a]);$.ajax({url:"/json/empFotoGalleryEmpresa.php?idEmpresa="+i+"&showLeadLayer="+o+"&isTestAB="+t,success:function(e){for(var a=10;a<e.length;a++)n.appendSlide(e[a])}})}})}function vendors_isValidStaticMap(e){if(e.naturalHeight<=150)return!1;if(isIE())return!0;var a=common_getBase64FromImageUrl(e).substr(0,100);return"iVBORw0KGgoAAAANSUhEUgAAAj0AAAIZCAYAAABNrI4hAAAgAElEQVR4Xu3dCZQf1X0n+p9arX1fwQhQt1mMQewxq80OjgM24CVg"!=a&&"iVBORw0KGgoAAAANSUhEUgAAAj0AAAIZCAYAAABNrI4hAAAcLUlEQVR4nO3df4zcd5kfcI+EeocrxPVaEluipRWJPUlB5aIL8VqB"!=a}function vendors_showMoreEndorsment(e){var a="/emp-ShowEndorsement.php?id_empresa="+e+"&isAjaxInline=1";$(".app-widget-endorsment").load(a,function(){$(".app-widget-endorsment-footer").remove()})}function vendors_centerScreen(e){var a=$(window).scrollTop(),i=a+$(window).height(),o=$(e).offset().top,t=o+$(e).height();return o<=a&&i<=t}function vendors_onScreen(e){var a=$(e),i=-1!=navigator.userAgent.toLowerCase().indexOf("webkit")?"body":"html",o=$(i).scrollTop(),t=o+$(window).height(),n=Math.round(a.offset().top),r=n+a.height();return n<t&&o<r}function vendors_addClass(e,a,i){if(vendors_onScreen(a)){a=vendors_onScreen(a);$(e).addClass(i)}else $(e).removeClass(i)}function vendors_addClassCenter(e,a,i){if(vendors_centerScreen(a))$(e).addClass(i);else $(e).removeClass(i)}function vendors_loadCompanyInfoBar(e){if(!(window.innerHeight<870)){if(0<$(".storefront-aside").length)$(".storefront-aside").addClass("storefront-aside-animate");$(document).ready(function(){$(".app-profile-top-fixed-bar").load("/emp-CompanyInfoBar.php?id_empresa="+e)}),$(window).scroll(function(){var e=$(window).scrollTop(),a=$(".app-profile-top-fixed");if(340<e)a.stop().slideDown(300);else a.stop().slideUp(300)})}}function loadMoreVendorItems(e,a,i,o,t){var n={page:a,itemsByPage:i};if(t)if(t.excludeIdRW)n.excludeIdRW=t.excludeIdRW;else n=Object.assign(n,{sortMode:t&&(t.sortMode,1)?t.sortMode:0,offset:t&&(t.offset,1)?t.offset:0});return $.ajax({url:"/vendor/"+o+"/"+e,data:n})}function loadMoreVendorItemsBtnInit(e,n,r,s,d,l){e.on("click",function(e){e.preventDefault();var a=$(this),i=a.data("vendorid"),o=a.data("page")||1,t=a.data("exclude-id-rw")||!1;if(t)if(l)l.excludeIdRW=t;else l={excludeIdRW:t};loadMoreVendorItems(r,o,s,i,l).done(function(e){if(o++,a.data("page",o),n.append(e.content),e.itemsByPage>e.numItems||e.numPages===e.page)a.hide();if(d)d()})})}function vendors_bind_review_items_events(){$(".app-review-rating").off("click").on("click",function(){var e=$(this).closest(".app-review"),a=e.find(".app-review-rating-detail"),i=e.find(".app-review-rating-arrow"),o=a.is(":visible");a.stop().slideToggle(!o),i.toggleClass("icon-arrow-down-red",o),i.toggleClass("icon-arrow-up-red",!o)})}function vendors_openReviewsGallery(i,o,t,n){if(void 0===t)t=0;bodas.modal=$.modal({url:"/emp-ShowReviewsGallery.php",template:"fullscreen",ajaxParams:{vendorId:i,selectedImageId:o,selectedImageIndex:t,type:n},callback:function(e){var a=bodas.sliderManager.getFromMap("fullscreenReviews",n),d=null;if(!a)a=new bodas.sliderManager.Slider({name:"users-reviews",container:"#app-slider-album",vendorId:i,loadNextPagePromise:function(e,a){return $(".app-vendor-slider-switch-fullscreen[data-type="+n+"]").addClass("current").siblings().removeClass("current"),$.post("/vendors/loadReviews.php",{offset:e,size:a,vendorId:i,reviewImageId:o,selectedImageIndex:t,allImagesLoaded:!0})},backupCurrentReview:function(e,a){var i=e.attr("data-review-id");if(0===$("#rescued-review-"+i).length){var o=$.inArray(i,a);if(-1<o)$(".app-rescue-reviews").append('<div id="rescued-review-'+i+'">'+e.html()+"</div>"),a.splice(o,1),$(".app-missing-reviews").html(a.join())}},hideForm:function(){if(!$(".modal-fullscreen-form").hasClass("dnone"))$(".modal-fullscreen-form").addClass("dnone"),$(".modal-fullscreen-reviews").removeClass("dnone")},showSelectedReviewAndHideForm:function(e,a,i,o){e.html(i),e.attr("data-review-id",a),o.options.hideForm()},onThumbnailChange:function(e,a){var i=$(e).attr("data-imageid"),o=$(e).attr("data-reviewid"),t=$(".app-current-review"),n=$(".app-missing-reviews").html().split(","),r=$.inArray(o.toString(),n);if(o!==t.attr("data-review-id"))if(a.options.backupCurrentReview(t,n),-1<r){if(null!==d)d.abort();d=$.ajax({type:"get",url:"/emp-ShowReviewItemSlider.php",data:{imageId:i,reviewId:o},dataType:"html",success:function(e){a.options.showSelectedReviewAndHideForm(t,o,e,a),d=null}})}else{var s=$("#rescued-review-"+o);a.options.showSelectedReviewAndHideForm(t,o,s.html(),a)}else a.options.hideForm()}}),bodas.sliderManager.setToMap("fullscreenReviews",n,a);a.init(),a.moveTo(t+1),vendors_bind_change_reviewSlider()}})}function vendors_sortReviews(e,a){if(-1!=e.indexOf("--s"))e=e.replace(/--s\d*/g,"--s"+a);else e+="--s"+a;window.location.href=e}function vendors_preloadSlidersList(){var t=!1;$(".app-preload-gallery").each(function(e,a){if(!a.preload){var i=$(a).closest(".app-vendors-item, .app-vendors-item-relation").data("id-empresa");if(common_checkVisibleOnScreen(a,200)){var o=new Image;o.src=VendorMiniGallery.fotos[i][1],(o=new Image).src=VendorMiniGallery.fotos[i][2],a.preload=!0,t=!0}else if(t)return!1}else t=!0})}function vendors_slideLoadVideo(e,a,i){var o=e.data("url-video"),t=e.data("url-poster");if(e.hasClass("swiper-slide-active")&&!i){e.css("width",e.width()),e.css("background-color","transparent");var n="autoplay",r="";if(a)n+=" muted",r="is-muted";if(common_isIpadNew())n+=" controls";if(e.html("<div class='mediaplayer "+r+"' data-poster='"+t+"'><video "+n+"><source type='video/mp4' src='"+o+"' /></video></div>").removeClass("app-vendor-slide-load-video"),e.closest(".app-slider-container").hasClass("icon-play-white"))e.closest(".app-slider-container").removeClass("icon icon-play-white pointer");if(common_isIpadNew())e.find("video").css({height:$("#app-vendor-slider-box").height(),width:$("#app-vendor-slider-box").width()});else if(0<e.find("video").length)e.find("video")[0].oncanplay=function(){e.css("background-color","#000")}}}function vendors_slideLoadTour(e){var a=e.data("external-id");if(e.hasClass("swiper-slide-active"))e.css("width",e.width()),e.css("background-color","transparent"),e.html("<iframe width='850' height='480' src='https://my.matterport.com/show/?m="+a+"' frameborder='0' allowfullscreen></iframe>").removeClass("app-vendor-slide-load-tour")}function VendorsSlider(e){var r=(e.container||$(".app-slider-container").first())[0];if(!r.swiperLoaded){var t=$(r).data("total-imgs"),a=$(r).data("track-views"),n=$(".app-slider-title"),s=$(".app-slider-description"),i={slidesPerView:"auto",centeredSlides:!0,prevButton:".app-slider-btn-prev",nextButton:".app-slider-btn-next",initialSlide:1,observer:!0,spaceBetween:5,watchSlidesVisibility:!0,watchSlidesProgress:!0,uniqueNavElements:!0,onImagesReadyCallback:function(){},onInit:function(e){if(1==e.activeIndex)e.lockSwipeToPrev()},onSlideChangeStart:function(e){l(e,t)},onTransitionStart:function(e){e.update(!0),e.container.find("video").each(function(){this.pause()}),jQuery(".swiper-video-embed IFRAME").each(function(e,a){a.contentWindow.postMessage('{"method":"pause","event":"command","func":"pauseVideo","args":""}',"*")}),loadLazyImageSwiper(e);var a=$(e.slides[e.activeIndex]),i=a.data("title"),o=a.data("description");if(void 0!==i)n.html(i);if(void 0!==o)s.html(o);l(e,t)},onTransitionEnd:function(e){if(l(e,t),e.update(!0),void 0!==a&&1==a&&!0===e.moved)!function(i){var e=$("#app-vendor-slider-box").data("id-empresa");if(null!=e&&0!==e.length)$.ajax({url:"/emp-SliderAddPageView.php?idEmpresa="+e}),setTimeout(function(){var e=i.activeIndex,a=$(i.slides[e]).find("img").data("url");ga_trackPageviewAll(a,reduced)},500)}(e);e.moved=!0},onImagesReady:function(e){e.update(!0),e.params.onImagesReadyCallback($(r))}},o=$.extend({},i,e);r.swiperLoaded=!0;var d=new Swiper(r,o);return r.swiper=d}function l(e,a){if(a!==$(r).data("total-imgs"))a=$(r).data("total-imgs");if(e.activeIndex-1>=a){if(e.activeIndex-2==a)e.slideTo(a+1,100);e.lockSwipeToNext(),$(e.container).parent().find(".app-slider-btn-next").addClass("dnone")}else e.unlockSwipeToNext(),$(e.container).parent().find(".app-slider-btn-next").removeClass("dnone");if(1==e.activeIndex)e.lockSwipeToPrev(),$(e.container).parent().find(".app-slider-btn-prev").addClass("dnone");else{if(0==e.activeIndex)e.slideTo(1,400);if(e.activeIndex>=a-3){var i=$(e.container).find(".swiper-slide").eq(a+1);if(!i[0].loadedSlideLead){var o=$("<div>").append($(".app-lead-slide").eq(0).clone().removeClass("dnone")).html(),t=$(o),n=i.find(".app-lead-img").data("limited");if(n)t.find("p").eq(0).css("margin-top","120px"),t.find(".btn.btn-primary").after("<br><a style='margin-top: 120px; margin-left: 0' class='btn btn-outline' href='"+n+"'>"+'View more photos'+"</a>");i.find(".app-lead-img").after(t),i[0].loadedSlideLead=!0}}e.unlockSwipeToPrev(),$(e.container).parent().find(".app-slider-btn-prev").removeClass("dnone")}!function(e){if($(e.slides[e.activeIndex]).hasClass("app-vendor-slide-load-video"))$(e.container).addClass("icon icon-play-white pointer");else $(e.container).removeClass("icon icon-play-white pointer")}(e)}}function loadLazyImageSwiper(e,a,i){if(!e.container.allImagesLoaded)if(e.params.preloadImages)if(a&&i){var o=$(e.container).find(".swiper-slide > img");o.slice(0,Math.min(a+i,o.length-1)).each(function(){var e=$(this);e.attr("src",e.attr("data-src")),e.removeAttr("data-src")}),e.update(!0)}else{var t=$(e.container).find("img[data-src]").eq(0);if(void 0!==t)t.attr("src",t.attr("data-src")),t.removeAttr("data-src");else e.container.allImagesLoaded=!0}}function vendors_createSliderFullscreen(i,o,e){var t;switch(o=o||{},i){case"photos":t="/vendors/loadPhotos.php";break;case"rw":t="/vendors/loadPhotosRW.php";break;case"videos":t="/vendors/loadVideos.php";break;case"3dtours":t="/vendors/loadTours.php";break;case"real-wedding":t="/load-photos-rw.php"}var a=bodas.sliderManager.getFromMap("fullscreenVendors",i);if(!a||e)a=new bodas.sliderManager.Slider({name:i,container:"#app-slider-album",idEmpresa:o.idEmpresa,sectorTools:o.sectorTools,type:i,loadNextPagePromise:function(e,a){return $(".app-vendor-slider-switch-fullscreen[data-type="+i+"]").addClass("current").siblings().removeClass("current"),$.post(t,{idEmpresa:o.idEmpresa,sectorTools:o.sectorTools,offset:o.offset,size:a,idRealWedding:o.idRealWedding,section:o.section})},onSlideChange:function(e){if("photos"==o.section)$.ajax({url:"/emp-SliderAddPageView.php?idEmpresa="+o.idEmpresa}),ga_trackPageviewAll(e.getCurrentSlideParam("url"),e.getCurrentSlideParam("reduced"))}}),bodas.sliderManager.setToMap("fullscreenVendors",i,a);return a}function vendors_openReviewsGallery(i,o,t,n){if(void 0===t)t=0;bodas.modal=$.modal({url:"/emp-ShowReviewsGallery.php",template:"fullscreen",ajaxParams:{vendorId:i,selectedImageId:o,selectedImageIndex:t,type:n},callback:function(e){var a=bodas.sliderManager.getFromMap("fullscreenReviews",n),d=null;if(!a)a=new bodas.sliderManager.Slider({name:"users-reviews",container:"#app-slider-album",vendorId:i,loadNextPagePromise:function(e,a){return $(".app-vendor-slider-switch-fullscreen[data-type="+n+"]").addClass("current").siblings().removeClass("current"),$.post("/vendors/loadReviews.php",{offset:e,size:a,vendorId:i,reviewImageId:o,selectedImageIndex:t,allImagesLoaded:!0})},backupCurrentReview:function(e,a){var i=e.attr("data-review-id");if(0===$("#rescued-review-"+i).length){var o=$.inArray(i,a);if(-1<o)$(".app-rescue-reviews").append('<div id="rescued-review-'+i+'">'+e.html()+"</div>"),a.splice(o,1),$(".app-missing-reviews").html(a.join())}},hideForm:function(){if(!$(".modal-fullscreen-form").hasClass("dnone"))$(".modal-fullscreen-form").addClass("dnone"),$(".modal-fullscreen-reviews").removeClass("dnone")},showSelectedReviewAndHideForm:function(e,a,i,o){e.html(i),e.attr("data-review-id",a),o.options.hideForm()},onThumbnailChange:function(e,a){var i=$(e).attr("data-imageid"),o=$(e).attr("data-reviewid"),t=$(".app-current-review"),n=$(".app-missing-reviews").html().split(","),r=$.inArray(o.toString(),n);if(o!==t.attr("data-review-id"))if(a.options.backupCurrentReview(t,n),-1<r){if(null!==d)d.abort();d=$.ajax({type:"get",url:"/emp-ShowReviewItemSlider.php",data:{imageId:i,reviewId:o},dataType:"html",success:function(e){a.options.showSelectedReviewAndHideForm(t,o,e,a),d=null}})}else{var s=$("#rescued-review-"+o);a.options.showSelectedReviewAndHideForm(t,o,s.html(),a)}else a.options.hideForm()}}),bodas.sliderManager.setToMap("fullscreenReviews",n,a);a.init().then(function(){a.moveTo(t+1)}),vendors_bind_change_reviewSlider()}})}function changeType(e,a,i){var o=$('[name="granCuenta"]').val();if(e==globals.promos.Type_Black_Friday){if(void 0===a||""==a)$("#SolicFecha2").prop("disabled",!0),$("#divSolicFecha2").removeClass("app-common-datepicker"),$("#SolicFecha2").val(globals.promos.Black_Friday_EndPromos);else if(void 0===i||""==i)$("#SolicFecha2").val(globals.promos.Black_Friday_EndPromos);$("#nombrePromocion").attr("placeholder",globals.promos.Black_Friday_TitlePlaceholder),$("#divDescuento").addClass("pure-u-1-4").removeClass("pure-u-1").show(),$("#discount").prop("disabled",!1),$("#divUrl").removeClass("pure-u-1").addClass("pure-u-3-4").addClass("pr20"),$("#divDescuento span").removeClass("dnone")}else if(e==globals.promos.Type_Black_Friday_Regalos||e==globals.promos.Type_Black_Friday_Oferta){if(void 0===a||""==a)$("#SolicFecha2").prop("disabled",!0),$("#divSolicFecha2").removeClass("app-common-datepicker"),$("#SolicFecha2").val(globals.promos.Black_Friday_EndPromos);else if(void 0===i||""==i)$("#SolicFecha2").val(globals.promos.Black_Friday_EndPromos);$("#nombrePromocion").attr("placeholder",globals.promos.Black_Friday_TitlePlaceholder),$("#divDescuento").hide(),$("#discount").prop("disabled",!0),$("#divUrl").removeClass("pure-u-3-4").addClass("pure-u-1").addClass("pr20"),$("#divUrlDesc").removeClass("pure-u-1-2 pr20")}else if($("#SolicFecha2").prop("readonly",!1).prop("disabled",!1),$("#divSolicFecha2").addClass("app-common-datepicker"),$("#nombrePromocion").removeAttr("placeholder"),$("#divDescuento").addClass("pure-u-1-4").removeClass("pure-u-1").hide(),$("#discount").prop("disabled",!0),$("#divUrl").removeClass("pure-u-3-4").addClass("pure-u-1").removeClass("pr20"),$("#divUrlDesc").removeClass("pure-u-1-2 pr20"),e==globals.promos.Type_Descuento)$("#divDescuento").removeClass("dnone"),$("#divDescuento").show(),$("#divDescuento label span").addClass("dnone"),$("#discount").prop("disabled",!1);if((e==globals.promos.Type_Black_Friday||e==globals.promos.Type_Black_Friday_Regalos||e==globals.promos.Type_Black_Friday_Oferta)&&1==o)if($("#divUrl").show(),!$("#divDescuento").is(":visible"))$("#divUrl").removeClass("pr20");else $("#divUrl").addClass("pr20");else $("#divUrl").hide(),$("#divDescuento").removeClass("pure-u-1-4").addClass("pure-u-1")}function vendors_bindTopFixedBar(){var e=$(document.body);if(e.hasClass("app-profile-enable-fixed-bar"))vendors_loadCompanyInfoBar(e.data("fixed-bar-id-empresa"))}function vendors_bindShowMapVendor(){var e=$(".app-show-map-vendor");if(0<e.length)initMaps(),GShowEmp(e.data("name"),e.data("latitude"),e.data("longitude"),e.data("zoom"),e.data("id-sector"))}function vendors_bindShowMapVendorCustom(){var e=$(".app-show-map-vendor-custom");if(0<e.length)gmaps_showEmpLayerStaticMap(e.data("id-empresa"),$("#map"))}function vendors_bindShowMapVendorAddresses(){if("undefined"!=typeof direcciones){if(0<$(".app-show-map-vendor-addresses").length)for(var e in initMaps(),direcciones)GShowDirecciones(direcciones[e])}}function vendors_showMapOnePage(e){var a=$(".app-static-map:visible"),i=a.parent(".app-static-map-container"),o=$(e).closest(".app-static-map-box").find(".app-static-map"),t=o.parent(".app-static-map-container");if(i.hide(),!$(a).is(o))gmaps_showEmpLayerStaticMap($(e).data("id"),o.parent(".app-static-map-container")),o.attr("src",o.data("src")),t.show()}function vendors_bindCalendarChangeYear(){$(document.body).on("click",".app-vendors-calendar-change-year",function(){var e=$(this).data("year"),a=$(this).closest("form");a.find("input[name=year]").val(e),a.submit()})}function vendors_see_on_map(e){for(var a=0;a<markersDirecciones.length;a++)if(markersDirecciones[a].idDireccion==e)new google.maps.event.trigger(markersDirecciones[a].marker,"click")}function vendors_bindHeaderSearch(){if($("#txtLocSearchReset").on("click",function(){$("#txtLocSearch").val(""),document.frmSearch.id_region.value="",document.frmSearch.id_provincia.value="",document.frmSearch.id_poblacion.value="",$("#txtLocSearch").removeClass("active"),$(this).attr("display","none")}),$("#txtStrSearchReset").on("click",function(){$("#txtStrSearch").val(""),document.frmSearch.id_sector.value="",document.frmSearch.id_grupo.value="",$("#txtStrSearch").removeClass("active"),$(this).attr("display","none")}),$("#txtStrSearchReset").on("keydown",function(){document.frmSearch.id_sector.value="",document.frmSearch.id_grupo.value=""}),$("#txtStrSearch").on("keydown",function(){document.frmSearch.id_sector.value="",document.frmSearch.id_grupo.value=""}),$("#txtLocSearch").length)$("#txtLocSearch").suggest({layer:"layer-suggest-1",source:"/suggest-FindLocations.php",emptySearch:!0,allowNavigation:!0,onFocus:function(e){if($(this).hasClass("search-filled"))$(this).val("").removeClass("search-filled"),$("#app-search-loc-reset").hide();if($(this).attr("placeholder",$(this).data("explain")),urlSource+="&id_grupo="+document.frmSearch.id_grupo.value+"&id_sector="+document.frmSearch.id_sector.value+"&is_search="+document.frmSearch.isSearch.value,$(document.body).hasClass("app-landing-adwords"))if(urlSource+="&fromLanding=1",$(document.body).data("hide-suggest-numbers"))urlSource+="&hideNumbers=1"},success:function(e,a){if(""===e){if(1==document.frmSearch.isHome.value)document.frmSearch.id_region.value="",document.frmSearch.id_provincia.value="",document.frmSearch.id_poblacion.value="";$("#txtLocSearch").removeClass("active"),$("#txtLocSearchReset").attr("display","none")}if("1col"==a.find(".column-container").data("format")){if(!a.hasClass("one-column-result"))a.addClass("one-column-result")}else a.removeClass("one-column-result");a.addClass("multi-column");var i=a.find("a.mainProvincia"),o=a.find("a.mainRegion"),t=(a.find("a.mainGeozona"),a.find("li"));if(1==o.length&&0==i.length){suggestHome_setRegion((n=o.first()).data("id"),n.data("value"),n.data("url"))}else if(1==i.length&&0==o.length){suggestHome_setProvincia((n=i.first()).data("id"),n.data("value"),n.data("url"),n.data("url-parent-1"),n.data("id-ww"))}else if(t.length<4){var n;if((n=t.first().find("a")).hasClass("setPoblacion"))suggestHome_setPoblacion(n.data("id"),n.data("value"),n.data("url"),n.data("url-parent-1"),n.data("url-parent-2"));else if(n.hasClass("setProvincia"))suggestHome_setProvincia(n.data("id"),n.data("value"),n.data("url"),n.data("url-parent-1"),n.data("id-ww"));else if(n.hasClass("setRegion"))suggestHome_setRegion(n.data("id"),n.data("value"),n.data("url"));else if(n.hasClass("setGeozona"))suggestHome_setGeozona(n.data("id"),n.data("value"),n.data("url"))}if(!n)suggesHome_reset()},keyMove:function(e,a){if(void 0!==a){var i="which"in a?a.which:a.keyCode;if(38!=i&&40!=i)e.find("a:first").trigger("mousedown",!0)}else e.find("a:first").trigger("mousedown",!0)},keySelect:function(e){if(e.find("a:first").trigger("mousedown",!0),e.find("a").hasClass("setProvincia"))common_teDIR("SUGGEST_PROVINCIA_GO_KEYBOARD");else common_teDIR("SUGGEST_POBLACION_GO_KEYBOARD");$("#mainSearchBtn").focus()}});if($("#txtStrSearch").length)$("#txtStrSearch").suggest({layer:"layer-suggest-2",source:"/suggest-FindSectores.php",emptySearch:!0,allowNavigation:!0,onFocus:function(e){if($(this).hasClass("search-filled"))$(this).val("").removeClass("search-filled"),$("#app-search-text-reset").hide();if($(this).attr("placeholder",$(this).data("explain")),urlSource+="&id_region="+document.frmSearch.id_region.value+"&id_provincia="+document.frmSearch.id_provincia.value+"&id_poblacion="+document.frmSearch.id_poblacion.value+"&id_geozona="+document.frmSearch.id_geozona.value+"&is_search="+document.frmSearch.isSearch.value,$(document.body).hasClass("app-landing-adwords"))if(urlSource+="&fromLanding=1",urlSource+="&adw="+document.frmSearch.adw.value,$(document.body).data("hide-suggest-numbers"))urlSource+="&hideNumbers=1"},success:function(e,a){if(""===e){if(1==document.frmSearch.isHome.value)document.frmSearch.id_sector.value="",document.frmSearch.id_grupo.value="";$("#txtStrSearch").removeClass("active"),$("#txtStrSearchReset").attr("display","none")}if("1col"==a.find(".column-container").data("format")){if(!a.hasClass("one-column-result"))a.addClass("one-column-result")}else a.removeClass("one-column-result");a.addClass("multi-column")},keyMove:function(e,a){if(void 0!==a){var i="which"in a?a.which:a.keyCode;if(38!=i&&40!=i)if(!e.find("a").hasClass("go-empresa"))e.find("a:first").trigger("mousedown",!0)}else if(!e.find("a").hasClass("go-empresa"))e.find("a:first").trigger("mousedown",!0)},keySelect:function(e){if(e.find("a").hasClass("go-empresa"))common_teDIR("SUGGEST_EMPRESA_GO_KEYBOARD");else{if(e.find("a:first").hasClass("setGrupo"))common_teDIR("SUGGEST_GRUPO_GO_KEYBOARD");else common_teDIR("SUGGEST_SECTOR_GO_KEYBOARD");if(0===$("#txtLocSearch").val().length)$("#txtLocSearch").focus();else $("#mainSearchBtn").focus()}e.find("a:first").trigger("mousedown",!0)}})}function vendors_loadEmpresasSky(){var e=$(".app-vendors-menu-sky-cercade");if($(e).length)$(e).load("/busc-ShowListadoCercadeThumb.php",{id_provincia:$(e).data("id-provincia"),id_poblacion:$(e).data("id-poblacion"),id_sector:$(e).data("id-sector"),id_grupo:$(e).data("id-grupo")})}function vendors_loadPromotionsWidget(){var e=$(".app-vendors-menu-promociones");if($(e).length)$(e).load("/promos-Widget.php",{id_region:$(e).data("id-region"),id_provincia:$(e).data("id-provincia"),id_sector:$(e).data("id-sector"),id_grupo:$(e).data("id-grupo")})}function vendors_loadRecentlyViewedWidget(){var e=$(".app-vendors-menu-recently_viewed");if($(e).length)$(e).load("/vendors-recently-viewed.php",{})}function vendors_loadPocosResultados(){var e=$(".pocosResultados");if(e.length)e.load("/busc-ShowListadoPocosResultados.php?"+$.param({lat:e.data("lat"),long:e.data("long"),id_region:e.data("id-region"),id_provincia:e.data("id-provincia"),id_poblacion:e.data("id-poblacion"),id_geozona:e.data("id-geozona"),id_grupo:e.data("id-grupo"),id_sector:e.data("id-sector"),showmode:e.data("showmode"),exclVendors:e.data("excludeempresas")}),function(){if(common_icon_hover($(".app-icon-hover")),e.find(".app-few-results-list"))vendors_setVendorOptions(),vendors_bindMouseOverPromoLayer(),vendors_initGallery()})}function vendors_bindMouseOverPromoLayer(){$(".app-promo-event").on("mouseenter",function(e){var a=$(this).find(">.app-promo-layer"),i=$(this).data("loaded");$(this).data("noshow");if(!i)$(this).data("loaded",!0),a.load("/promos-LayerList.php?id_empresa="+$(this).data("id-empresa"),function(){if(!a.data("noshow"))a.show()});else a.show()}),$(".app-promo-event").on("mouseleave",function(e){var a=$(this).find(">.app-promo-layer");if(a.is(":visible"))a.hide();else a.data("noshow",!0)}),$(".app-promo-item").each(function(){var e=$(this).find(".app-promo-item-link").attr("href");$(this).find(".app-promo-insert-link").on("click",function(){window.location.href=e})})}function vendors_loadResultsAjax(a,n,e){if(window.vendorsAjaxPromise&&a!=window.vendorsAjaxUrlLoading)window.vendorsAjaxPromise.abort();if(a!=window.location.href&&a!=window.vendorsAjaxUrlLoading){$("#app-vendors-directory-filters").css("opacity",.5);var r=$("#app-vendors-directory-result-list");r.css("opacity",.5);var i=Date.now();globals.debug&&console.log("Start"),function(o){var e=$(".app-vendors-search-txt");e.prop("readonly",!0);var t=e.is(":focus");window.vendorsAjaxUrlLoading=a,window.vendorsAjaxPromise=$.ajax({type:"GET",url:a,headers:{"ajax-results":"1"}}).done(function(e){var a=Date.now();if(globals.debug&&console.log("Time Ajax: "+(a-o)),document.title=e.title,$(".app-common-cab-title").html(e.title),n&&history.pushState({url:e.url},null,e.url),$("#app-vendors-directory-heading").replaceWith(e.header),$("#app-vendors-directory-heading-navigation").replaceWith(e.header_navigation),$("#app-vendors-directory-breadcrumb").html(e.breadcrumb),!e.reloadMap||0==e.numItems)$("#app-vendors-directory-result-list").html(e.results);if($("#app-vendors-directory-results-footer1").html(e.footer1),$("#app-vendors-directory-results-footer2").html(e.footer2),$("#app-vendors-directory-filters").replaceWith(e.filters),common_applyIcheck(),e.reloadMap&&0!=e.numItems){if(0<$("#map").length)$(".app-vendors-paginado").replaceWith($(e.results).find(".app-vendors-paginado"));else $("#app-vendors-directory-result-list").html(e.results),map="",initializeVendorsResultsMap();createMarkersFromHTML(e.markers)}vendors_initializeSpotlight(),vendors_filtersDistanceSuggest(),vendors_fncEmpLNL(),vendors_setVendorOptions(),vendors_loadPocosResultados(),vendors_bindHeaderSearch(),vendors_initGallery(),vendors_loadEmpresasSky(),vendors_bindMouseOverPromoLayer(),vendors_bindSliderInput(),vendors_bindCalendarInput(),vendors_initializeEcommerce(e),ga_trackPageviewAll(e.url,e.reduced),BFP(),vendors_send_trace("user-search");var i={resultVendorsIds:e.resultVendorsIds,searchCity:e.searchCity,searchRegion:e.searchRegion,searchCountry:e.searchCountry};document.body.dispatchEvent(new CustomEvent("vendors_searched_successfully",{detail:i})),globals.debug&&console.log("Time JS: "+(Date.now()-a)),window.vendorsAjaxLoadedOnce=!0}).fail(function(){}).complete(function(){window.vendorsAjaxUrlLoading=null;var e=$(".app-vendors-search-txt");if(e.prop("readonly",!1),t){var a=e[0];a.focus();var i=a.value;a.value="",a.value=i}$("#app-vendors-directory-filters").css("opacity",1),r.css("opacity",1)})}(i)}}function vendors_scrollToTopResultList(){var e=$("#app-vendors-directory-navigation").offset().top;if("map"!=$("#app-vendors-search-filters").find("input[name=showmode]").val())e-=100;$("html,body").stop().animate({scrollTop:e},200)}function vendors_triggerFilter(e,a){var i,o=$(e),t=o[0],n=$("#app-vendors-search-filters"),r=o.closest(".app-filter-vendors"),s=o.data("filter")||r.data("filter"),d=r.data("type-filter"),l=!0;if(a)i=$(e),l=!0;else if("checkbox"==d)if(t.dataset.removeAll)r.find(".app-selected").not(t).removeClass("app-selected"),l=!0;else o.toggleClass("app-selected"),l=!0;else if(r.find(".app-selected").not(t).removeClass("app-selected selected"),o.addClass("app-selected"),"text"!=d)o.addClass("selected");if(l){var c=n.find(".app-filter-vendors");if("id_region"==r.data("filter"))i=i||c.find("[data-filter='"+s+"']");else i=i||c.filter("[data-filter='"+s+"']");var p=i.data("filters-remove"),u=i.data("filters-maintain");p=p?p.split(","):null,u=u?u.split(","):null;var f,v,m=[];if(p){if(m=[],1==p.length)if("dates[]"==p){if((g=$(".app-vendors-input-datepicker")).length)if(g.find("[data-value='"+i.data("value")+"']").removeClass("selected app-selected"),datesPicked=g[0].datesPicked||{},!$.isEmptyObject(datesPicked))delete datesPicked[i.data("value")]}else v=i.data("value");for(var h in p)m.push("[data-filter='"+p[h]+"']");f=n.find(m.join(","))}else if(u)if("id_grupo"==u){var g;if((m=[]).push("[data-filter='id_grupo']"),f=n.find("[data-filter]").not(m.join(",")),(g=$(".app-vendors-input-datepicker")).length)if(datesPicked=g[0].datesPicked||{},!$.isEmptyObject(datesPicked))Object.keys(datesPicked).forEach(function(e){delete datesPicked[e]})}else{for(var h in m=["[data-filter='"+s+"']"],u)m.push("[data-filter='"+u[h]+"']");f=n.find("[data-filter]").not(m.join(","))}else f=n.find("[data-filter='"+s+"']").nextAll(".app-filter-vendors:not([data-maintain-filter])");if(f){if(v){if(Array.isArray(v))v="["+v[0]+","+v[1]+"]";f.find(".app-selected[value='"+v+"']").prop("checked",!1).parent("label").removeClass("active")}else f.find(".app-selected").removeClass("app-selected selected").prop("checked",!1);f.removeClass("app-selected selected"),f.filter(":input[type=text],:input[type=hidden]").val(""),f.find("input[type=text],input[type=hidden]").val(""),f.each(function(e,a){var i=$(a).attr("data-filter");$(".app-vendors-search-filters-container.app-vendors-search-filters, .app-vendors-search-form").find('input[name="'+i+'"]').val("")})}n.find("form").data("filter-changed",s),n.trigger("filter")}}function vendors_bindSliderInput(){if($(".app-input-range").length)new SliderInput}function vendors_bindCalendarInput(){if($(".app-vendors-input-datepicker").length)new bodas.calendarInput({element:".app-vendors-input-datepicker",callbackClickDay:function(e){vendors_triggerFilter(e,!0)}})}function vendors_filtersDistanceSuggest(){$("#app-filters-location").suggest({layer:"app-desktop-common-suggest-list",source:"/suggest-FindLocations.php",emptySearch:!1,allowNavigation:!0,success:function(e,a){if(""===e){if(1==document.frmSearch.isHome.value)document.frmSearch.id_region.value="",document.frmSearch.id_provincia.value="",document.frmSearch.id_poblacion.value="";$("#txtLocSearch").removeClass("active"),$("#txtLocSearchReset").attr("display","none")}if("1col"==a.find(".column-container").data("format")){if(!a.hasClass("one-column-result"))a.addClass("one-column-result")}else a.removeClass("one-column-result");a.addClass("multi-column")},keyMove:function(e,a){if(void 0!==a){var i="which"in a?a.which:a.keyCode;if(38!=i&&40!=i)e.find("a:first").trigger("mousedown",!0)}else e.find("a:first").trigger("mousedown",!0)},keySelect:function(e){if(e.find("a:first").trigger("mousedown",!0),e.find("a").hasClass("setProvincia"))common_teDIR("SUGGEST_PROVINCIA_GO_KEYBOARD");else common_teDIR("SUGGEST_POBLACION_GO_KEYBOARD");$("#mainSearchBtn").focus()}})}function vendors_initializeSpotlight(){var a=$(".app-vendors-directory-spotlight");if(a.length)$.ajax("/spotlight-box.php",{data:{vendorIds:a.data("vendor-ids"),profileIds:a.data("profile-ids"),listData:a.data("list-data")},success:function(e){a.html(e)}})}function vendors_trace_click_banner_designers(e,a){e.preventDefault(),$.post("/vendor/trace_click_banner_designer",{},function(){document.location.href=$(a).attr("href")})}function vendors_send_trace(e){var a=document.getElementById("app-vendors-catalog-trace-info");if(a){if(a=a.textContent,void 0!==e){var i,o=JSON.parse(a);for(i=0;i<o.length;i++)if(o[i].type===e){a=JSON.stringify([o[i]]);break}}if(a.length)$.post("/traces/vendor",a)}}function vendors_fixIframeSwiper(e){var a=e.closest(".swiper-wrapper");e.style.display="none",a.style.display="none",a.offsetWidth,a.style.display="",e.style.display=""}function vendors_initializeEcommerce(e){if(e.ecommerce)$(".app-ecommerce-script").remove(),$(document.body).append(e.ecommerce)}function vendors_bind_change_reviewSlider(){$(".app_reviewSlider_form").on("click",function(){var e=$(this).closest(".app-modal-content");e.find(".modal-fullscreen-form").removeClass("dnone"),e.find(".modal-fullscreen-reviews").addClass("dnone"),ga_trackEventAll("LeadTracking","a-step1","d-desktop+s-review_photo_slider",1,0)})}_filtersScroll.provincia=!0,_filtersScroll.grupo=!0,_filtersScroll.sector=!0,_filtersScroll.poblacion=!0;var vendors_saveVendor=function(i){function o(i,e){return i.mode=i.mode||"",$.post("/vendor/save-as-favorite",i,function(e){if(e.success){var a={vendorId:i.id_empresa};["city","country","region","address","currency","price","sector"].forEach(function(e){if(i[e])a[e]=i[e]}),document.body.dispatchEvent(new CustomEvent("vendor_saved_as_favorite",{detail:a})),common_teDIR("EMP_C_ADDVENDOR")}})}function n(a,e){if(r){if(isNaN(parseInt(a.idCategory)))return!1;a.zonaInsert=a.zonaInsert||-1,a.listed=1,a.rating=1,a.status=a.status||3;return $.post("/tools/VendorsAdd",a,function(e){if(e.success){if(globals.Request_mis_empresas)common_openLayer("/tools/newBookedVendorVisibility?idEmpresa="+a.idEmpresa+"&isNewEmpresa=false");ga_trackEventAll("HiredVendorStorefront","a-hired","d-desktop+s-storefront_header",0,0),r=!1}})}else{var i=$(".app-save-vendor[data-type=hired]");return s.enable(i),$.Deferred()}}var r=!1,s={enable:function(e){e.css({opacity:"1",cursor:"pointer"}),e.attr("loading",!1)},disable:function(e){e.css({opacity:".6",cursor:"not-allowed"}),e.attr("loading",!0)},remove:function(e){e.next().show(),e.remove()}};common_callEnsureLogged(function(){var e=$(i).data("type"),a=$(i).data("params");!function(i,e,a){var o=$(".app-save-vendor[data-type="+i+"]");if(1!=o.attr("loading")){s.disable(o);function t(){e(a).done(function(e){var a=$(".app-save-vendor[data-type="+i+"]");if(e.success){if(s.remove(a),"hired"===i){a=$(".app-save-vendor[data-type=save]");s.remove(a)}}else s.enable(a),alert(e.msg)})}if(e==n)$.get("/vendor-profile-hired").then(function(e){$("#app-common-layer").html(e).modal().on("hidden.bs.modal",function(){t()}),$(".app-save-action").on("click",function(){r=parseInt($(this).data("action"),10),$("#app-common-layer").modal("hide")})});else t()}}(e,"save"===e?o:n,a)},"vendors")},vendors_open_gallery_fullscreen=function(){var e=$(".app-profile-trigger-photos");if(e.length)e.on("click",function(){var e=$("body").data("sector-tools"),a=$("body").data("id-empresa"),i=$("body").data("section"),o={idEmpresa:a,sectorTools:e};bodas.modal=$.modal({url:"/vendors/vendorSlider.php?idEmpresa="+o.idEmpresa+"&size=20&sectorTools="+o.sectorTools+"&section="+i,template:"fullscreen",callback:function(){vendors_createSliderFullscreen("photos",o,!0).init()},onBeforeClose:function(){$(".app-mobile-modal").find(".app-internal-tracking-form").trigger("submit-abandon"),$(document).off("keyup.listenerSlider")}})})};function vendors_toggleTranslation(e){var a=$(e),i=a.closest(".app-translation-container"),o=a.data("state"),t=a,n=a.find(".app-translate-button-text");if(0<n.length)t=n;i.find(".app-visible-text-box").each(function(){var e=$(this).data("type");if("translated"==o)$(this).html(i.find(".app-original-text-box[data-type="+e+"]").html()),t.html('See translation');else $(this).html(i.find(".app-translated-text-box[data-type="+e+"]").html()),t.html('See original text')});var r=o;if("translated"==o)r="original";else r="translated";a.data("state",r)}var KEY_CODES={UP:38,DOWN:40,LEFT:37,RIGHT:39,ENTER:13};function vendors_searchDestinationWeddings(n,e){if(e){var a="which"in e?e.which:e.keyCode;$(n).data("resetField",!1)}if(window.destinationWeddingsSearchBoxCache=window.destinationWeddingsSearchBoxCache||{},window.searchPromise&&a!=KEY_CODES.ENTER)window.searchPromise.abort();var r=$(".app-suggest-vendors-dw-div-"+$(n).data("suffix")+":first");if(!(e&&a==KEY_CODES.LEFT||e&&a==KEY_CODES.RIGHT)){var i=$(n).data("value"),o=document.frmSearch.searchCountry.value;if(!e&&!$(n).data("resetField")&&o==i)document.frmSearch.searchCountry.value="";var s=$(n).val();if(!(40<s.length))if(!(0<s.length&&s.length<3)){var t=window.destinationWeddingsSearchBoxCache[s];if(t&&a!=KEY_CODES.UP&&a!=KEY_CODES.DOWN)return r.html(t),void $("#dwVendors").show();if(!e||e&&a!=KEY_CODES.UP&&a!=KEY_CODES.DOWN&&a!=KEY_CODES.ENTER)$(n).data("loading",s),window.searchPromise=$.getJSON("/suggest-DestinationWeddings.php?term="+s).done(function(e){if($(n).data("loading")==s){if(e.html)return window.destinationWeddingsSearchBoxCache[s]=e.html,r.html(e.html),void $("#dwVendors").show();var a,i,o;if($(n).data("loading",""),r.removeClass("loading").html("").show(),navigationPos=0,maxNavigationPos=e.length,!(e.length<1)){a=$("");for(var t=0;t<e.length;t++)(i=e[t]).type,o='<li class="suggest-navigation app-mirror-link app-dw-suggest-item app-suggest-item app-suggest-item-navigation-'+(t+1)+'">    <a class="mr5" href="'+i.url1+'">'+i.label1+"</a>"+(i.label2&&i.url2?'    <span class="app-mirror-link"><a class="color-greyligth" href="'+i.url2+'">'+i.label2+"</a></span>":"")+"</li>",a=a.add(o);r.append($("<div/>").addClass("box-scroll column-container").append($("<ul />").append(a))),window.destinationWeddingsSearchBoxCache[s]=r.html(),$("#dwVendors").show()}else if(!$(n).val())r.append($("<div />").addClass("suggest-message-start-writing").html('Search and choose your city from the list.'));else r.append($("<div />").addClass("suggest-message-no-results").html('No matches have been found'))}}).fail(function(){if($(n).data("loading")==s)$(n).data("loading","")});if(e){if(a==KEY_CODES.UP)if(0<navigationPos)navigationPos--;if(a==KEY_CODES.DOWN)if(navigationPos<maxNavigationPos)navigationPos++;r.find(".app-dw-suggest-item").removeClass("bg");var d=r.find(".app-suggest-item-navigation-"+navigationPos);if(d.length)d.addClass("bg"),r.closest(".app-vendors-search-form").attr("action",d.find("a").attr("href"))}}else $("#dwVendors").hide()}}function vendors_verificaSearchDW(e,a){e.preventDefault();var i=a.searchCountry.value;if(!(40<i.length))if(!(0<i.length&&i.length<3))if(0!=$("#dwVendors").find(".app-dw-suggest-item").length){var o=$(a).attr("action");if(!(o&&0<o.length)){var t=$(".app-suggest-item-navigation-1").find("a").attr("href");if(0<t.length&&$(".app-suggest-item-navigation-1").is(":visible"))window.location.href=t}else window.location.href=o}}var BannerCovid19AjaxBlock=function(a){function i(e){if(!document.querySelector(e))return!1;if(null!==GetCookie(o))return!1;else return!0}var o="BC19CLOSED",t="BC19TCLOSED",n=function(){var e=s();if(0===e)SetCookieTime(o,1,1),SetCookieTime(t,1,30);else SetCookieTime(o,1,30),SetCookieTime(t,e+1,30);r()},r=function(){$(".app-banner-covid-container").hide()},s=function(){var e=GetCookie(t);if(null!==e)return parseInt(e);else return 0};return{load:function(e){if(i(e))a.load("/ajax/banner-covid",e).then(function(){$(".app-banner-covid-close-btn").on("click",function(e){e.preventDefault(),n()})})}}}(AjaxBlockManager),CatalogListPage=function(e){return{init:function(){if($(document.body).hasClass("app-page-catalog-list"))e.load(".app-banner-announcement-catalog-header")}}}(BannerCovid19AjaxBlock);$(document).ready(function(){if(vendors_setVendorOptions(),vendors_showSaveOption(),vendors_loadPocosResultados(),vendors_bindHeaderSearch(),vendors_initGallery(),vendors_loadEmpresasSky(),vendors_loadRecentlyViewedWidget(),vendors_loadPromotionsWidget(),vendors_bindMouseOverPromoLayer(),vendors_initializeSpotlight(),vendors_bind_review_items_events(),vendors_bind_change_reviewSlider(),vendors_open_gallery_fullscreen(),$(document.body).hasClass("listener-vendors-list")){if("scrollRestoration"in history)history.scrollRestoration="manual";window.onpopstate=function(e){if(e.state&&e.state.url)vendors_loadResultsAjax(e.state.url,!1);else window.location=document.location.href}}$(document.body).on("mousedown","li.setRegion",function(e,a){if(!a)if(common_teDIR("SUGGEST_REGION_GO_CLICK"),""===$("#txtLocSearch").val())common_teDIR("SUGGEST_MAIN_REGION_GO_CLICK");else common_teDIR("SUGGEST_SEARCH_REGION_GO_CLICK");var i=$(this).data("id"),o=$(this).data("value");suggestHome_setRegion(i,o,$(this).data("url")),r(o)});var e="a.setProvincia, li.setProvincia";if("US"==globals.Request_Country)e="li.setProvincia";$(document.body).on("mousedown",e,function(e,a){if(e.stopPropagation(),!a)if(common_teDIR("SUGGEST_PROVINCIA_GO_CLICK"),""===$("#txtLocSearch").val())common_teDIR("SUGGEST_MAIN_PROVINCIA_GO_CLICK");else common_teDIR("SUGGEST_SEARCH_PROVINCIA_GO_CLICK");var i=$(this).data("id"),o=$(this).data("value");suggestHome_setProvincia(i,o,$(this).data("url"),$(this).data("url-parent-1"),$(this).data("id-ww")),r(o)});var a="a.setPoblacion, li.setPoblacion";if("US"==globals.Request_Country)a="li.setPoblacion";function n(e){if($("#txtStrSearch").val(e),$("#txtStrSearch").addClass("active"),$("#txtStrSearchReset").attr("display","block"),$("#txtStrSearch").addClass("search-filled"),0==$("form input[name='isHome']").val())if($(this).hasClass("app-suggest-link"))window.location.href=$(this).find("a").attr("href");else vendors_verificaSearch(document.frmSearch);common_removeBlackOver(),$("#txtStrSearch").trigger("change")}function r(e){if($("#txtLocSearch").val(e),$("#txtLocSearch").addClass("active"),$("#txtLocSearchReset").attr("display","block"),$("#txtLocSearch").addClass("search-filled"),0==$("form input[name='isHome']").val())if($(this).hasClass("app-suggest-link"))window.location.href=$(this).find("a").attr("href");else vendors_verificaSearch(document.frmSearch);common_removeBlackOver(),$("#txtLocSearch").trigger("change")}$(document.body).on("mousedown",a,function(e,a){if(e.stopPropagation(),!a)if(common_teDIR("SUGGEST_POBLACION_GO_CLICK"),""===$("#txtLocSearch").val())common_teDIR("SUGGEST_MAIN_POBLACION_GO_CLICK");else common_teDIR("SUGGEST_SEARCH_POBLACION_GO_CLICK");var i=$(this).data("id"),o=$(this).data("value");suggestHome_setPoblacion(i,o,$(this).data("url"),$(this).data("url-parent-1"),$(this).data("url-parent-2"),$(this).data("id-ww")),r(o)}),$(document.body).on("mousedown","a.setGeozona, li.setGeozona",function(e,a){if(!a)if(common_teDIR("SUGGEST_GEOZONA_GO_CLICK"),""===$("#txtLocSearch").val())common_teDIR("SUGGEST_MAIN_GEOZONA_GO_CLICK");else common_teDIR("SUGGEST_SEARCH_GEOZONA_GO_CLICK");var i=$(this).data("id"),o=$(this).data("value");suggestHome_setGeozona(i,o,$(this).data("url"));var t=document.frmSearch;if($(this).hasClass("app-dynamic-link")){if(""!=t.id_sector.value||""!=t.id_grupo.value)$(t).find("#txtStrSearch").val("");document.frmSearch.submit()}else r(o)}),$(document.body).on("mousedown","a.setSector,li.setSector",function(e,a){if(!a)if(common_teDIR("SUGGEST_SECTOR_GO_CLICK"),""===$("#txtStrSearch").val())common_teDIR("SUGGEST_MAIN_SECTOR_GO_CLICK");else common_teDIR("SUGGEST_SEARCH_SECTOR_GO_CLICK");var i=$(this).data("id"),o=$(this).data("value");suggestHome_setSector(i,o,$(this).data("url"),$(this).data("id-ww")),n(o)}),$(document.body).on("mousedown","a.setGrupo,li.setGrupo",function(e,a){if(e.stopPropagation(),!a)if(common_teDIR("SUGGEST_GRUPO_GO_CLICK"),""===$("#txtStrSearch").val())common_teDIR("SUGGEST_MAIN_GRUPO_GO_CLICK");else common_teDIR("SUGGEST_SEARCH_GRUPO_GO_CLICK");var i=$(this).data("id"),o=$(this).data("id-ww"),t=$(this).data("value");suggestHome_setGrupo(i,t,$(this).data("url"),o),n(t)}),$(document.body).on("mousedown",".go-empresa",function(e,a){if(!a)common_teDIR("SUGGEST_EMPRESA_GO_CLICK");$("#txtStrSearch").val($(this).data("value")),$("#txtStrSearch").addClass("search-filled"),goEmpresa($(this).data("url"))}),$(function(){$("[class*= appVendorGallery_]").each(function(){var e=$(this).attr("id").split("_")[1],a="0";if(0<$(this).find("[class*=app_lnkEsc_]").length)a=$(this).find("[class*=app_lnkEsc_]:first").attr("class").split("app_lnkEsc_")[1].split(" ")[0];vendorGallery.nFotos[e]=$(this).attr("class").split("appVendorGallery_")[1].split(" ")[0];var i=$("<div />").attr("id","mgall_"+e).addClass("vendor-slider-controls");if($(this).find(".app-vendors-slider").append($(i)),!common_isMobileDevice())$(this).mouseover(function(){vendorGallery.show(e,a,"0px")})})}),$(function(){$("[class*= appVendorGalleryMedium_]").each(function(){var e=$(this).attr("id").split("_")[1],a="0";if(0<$(this).find("[class*=app_lnkEsc_]").length)a=$(this).find("[class*=app_lnkEsc_]:first").attr("class").split("app_lnkEsc_")[1].split(" ")[0];vendorGalleryMedium.nFotos[e]=$(this).attr("class").split("appVendorGalleryMedium_")[1].split(" ")[0];var i=$("<div />").attr("id","mgall_"+e).addClass("vendor-slider-controls");if($(this).find(".app-vendors-sliderMedium").append($(i)),!common_isMobileDevice())$(this).on("mouseover",function(){vendorGalleryMedium.show(e,a,"0px")})})}),$(document.body).on("click touchstart",".app-toggle-navigators",function(e){e.preventDefault();var a=$(this).next();if("suggest"==$(this).data("toggle-type"))a=a.find(".app-vendors-box-scroll");a.slideToggle(400,function(){var e=$(this).data("jsp");if(void 0!==e)e.reinitialise()}),vendors_nagigatorScrollto($(this))}),$(document.body).on("ifClicked","input[name=Rol]",function(){var e=$(this).val(),a=$(this).closest("form");vendors_showCamposNovios(e,a)}),$(document.body).on;var i=$(".app-vendors-menus");if(i.length)i.on("click",function(e){e.preventDefault();var a=$(this).data("idmenu"),i=$("#app-menu-"+a);if(i.is(":hidden"))$(".app-vendors-menu").hide(),$(i).show(),$(".app-vendors-menus").removeClass("active"),$(this).addClass("active")});if($(document.body).on("click touchstart","#app-search-text-reset",function(e){$(this).parent().find("input").val(""),$(this).hide();var a=$("#app-frm-search");if($("input[name='id_grupo']",a).val("").data("value",""),$("input[name='id_sector']",a).val("").data("value",""),"US"==globals.Request_Country){var i=$("#app-vendors-directory-filters");$(i).find("input[name='id_grupo']").val("").data("value",""),$(i).find("input[name='id_sector[]']").val("").data("value",""),$("div[data-filter='id_sector[]']").find(".selected").removeClass("selected app-selected"),$("#app-vendors-search-filters").trigger("filter")}else vendors_search_applyFilters()}),$(document.body).on("click touchstart","#app-search-loc-reset",function(e){$(this).parent().find("input").val(""),$(this).hide();var a=$("#app-frm-search");if($("input[name='id_provincia']",a).val("").data("value",""),$("input[name='id_region']",a).val("").data("value",""),$("input[name='id_poblacion']",a).val("").data("value",""),SetCookie("GEO_LAST",""),1==$("input[name='isSearch']",a).val())$(a).submit();else vendors_search_applyFilters()}),$(document.body).on("click touchstart","#txtStrSearch",function(e){if($(this).hasClass("search-filled"))$(this).val("").removeClass("search-filled"),$("#app-search-text-reset").hide();$(this).attr("placeholder",$(this).data("explain"))}),$(document.body).on("blur","#txtStrSearch",function(e){var a=$(this).data("value");if(""!==a&&""===$(this).val())$(this).val(a).addClass("search-filled"),$("#app-search-text-reset").show();else $(this).attr("placeholder",$(this).data("placeholder"))}),$(document.body).on("click touchstart","#txtLocSearch",function(e){if($(this).hasClass("search-filled"))$(this).val("").removeClass("search-filled"),$("#app-search-loc-reset").hide();$(this).attr("placeholder",$(this).data("explain"))}),$(document.body).on("blur","#txtLocSearch",function(e){var a=$(this).data("value");if(""!==a&&""===$(this).val())$(this).val(a).addClass("search-filled"),$("#app-search-loc-reset").show();else $(this).attr("placeholder",$(this).data("placeholder"))}),0<$("#app-vendors-search-ads").length)$("#app-vendors-search-ads").html('<p class="h3">'+'Advertisement'+"</p>");if($(document.body).on("click touchstart",".app-tag-discount",function(){window.location.href=$(this).data("href")}),0<".app-vendors-search-filters".length)$(document).mouseup(function(e){var a=$("#txtStrSearch"),i=$("#layer-suggest-2");if(!i.is(e.target)&&0===i.has(e.target).length)if(!a.is(e.target)&&0===a.has(e.target).length)blurEnable=!0,$("#txtStrSearch").trigger("blur",!0)});if($(document.body).on("click",".app-home-bindhref",function(){var e=$(this).data("group");window.location=$(".app-home-bindhref-container").find("a[data-group="+e+"]").attr("href")}),0<$(".app-prefered-suppliers").length&&0<$(".app-prefered-supplier-logout").length){var o=$(".app-prefered-suppliers");if(0<o.length)o.html("<div id='app-proveedores-favoritos' class='breadcrumb-saved'>           <i class='svgIcon svgIcon__heartOutline app-proveedores-heart-empty'>               <svg viewBox='0 0 32 32'>                   <use xlink:href='#svg-_common-heartOutline'></use>               </svg>           </i>           <i class='svgIcon svgIcon__heart app-proveedores-heart-saved dnone'>               <svg viewBox='0 0 32 32'>                   <use xlink:href='#svg-_common-heart'></use>               </svg>           </i>            <p>"+'Favourites'+"</p>            <span class='app-vendors-num-saved'>0</span>        </div>")}if($(document.body).on("click","#app-proveedores-favoritos",function(e){e.preventDefault(),common_goEnsureLogged("/tools/Vendors","vendors")}),$(document.body).on("click",".app-vendor-show-more-designers",function(e){e.preventDefault();var a=$(this).data("group"),i=$(this).closest("div").find("div.app-designer-type-"+a+".dnone").first();if(i.hasClass("dnone")){if(i.removeClass("dnone").addClass("inline"),i.hasClass("last"))$(this).hide()}else $(this).hide()}),$(document.body).on("click",".app-vendor-show-all-designers",function(e){e.preventDefault(),$(".app-counter-designer").each(function(){if($(this).hasClass("dnone")){var e=$(this).data("appgroupitem");$(this).removeClass("dnone"),$(this).siblings("[data-appgroupitem='"+e+"']").removeClass("dnone")}}),$(this).hide()}),$(document.body).on("click",".app-show-more-review",function(){$(this).hide(),$(this).prev().hide(),$(this).next().show()}),$(document.body).on("click",".app-show-more-owner",function(){var e=$(this);e.closest(".app-visible-section-owner").addClass("dnone"),e.closest(".app-container-section-owner").find(".app-hidden-section-owner").removeClass("dnone")}),$(document.body).on("click",".app-vendor-show-search-button",function(){$(this).toggleClass("active"),$(".app-vendor-show-search-form").slideToggle(200)}),$(document.body).on("click",".app-vendor-slide-load-video",function(e){vendors_slideLoadVideo($(this),!1,$(e.target).hasClass("app-vendor-slide-load-video-full-screen"))}),0<$(".app-vendor-slide-load-video-autoplay").length){var t=$(".app-vendor-slide-load-video-autoplay");if(!common_isIpadNew())setTimeout(function(){vendors_slideLoadVideo(t,!0)},500)}$(document.body).on("click",".app-vendor-slide-load-tour",function(){vendors_slideLoadTour($(this))}),$(document.body).on("click ifChecked ifUnchecked",".app-vendors-search-redirect",function(){vendors_triggerFilter(this)}),$(document.body).on("click",".app-vendors-search-filters-submit",function(){var e=$(this).closest("form"),a=e.find("input[name='id_sector[]']");if(a.length==a.filter(":checked").length)a.removeAttr("checked","");e.submit()}),$(document.body).on("keydown",".app-vendors-search-txt",function(e){if(13==e.keyCode)e.preventDefault(),e.stopPropagation(),vendors_triggerFilter(this)}),$(document.body).on("filter","#app-vendors-search-filters",function(e){var t={},n=[],a={},i=$(this).find("form"),o=i.find(".app-vendors-input-datepicker");if(o.length)a=o[0].datesPicked||{},o.data("currentPickedMonth");var r=["id_poblacion","id_provincia","id_region","id_grupo","id_sector[]"],s=["id_poblacion","id_provincia","id_region","id_grupo"];if("US"!=globals.Request_Country)r.push("id_geozona"),s.push("id_geozona");var d=!1,l=!1;if($(this).find(".app-filter-vendors").find(".app-vendors-search-redirect.app-selected, .app-vendors-search-txt").each(function(){var e=$(this).closest(".app-filter-vendors"),a=$(this).data("filter")||e.data("filter"),i=e.data("type-filter");if("id_provincia"==$(this).data("filter")&&"id_poblacion"==e.data("filter"))s.shift();var o={idValue:+this.dataset.inputval||+this.value,textValue:this.value,url:this.dataset.value,idWW:this.dataset.idWw,element:$(this)};if("id_provincia"===a&&"-1"==this.dataset.value)d=!0;if("id_poblacion"===a&&"-1"==this.dataset.value)l=!0;if("text"!=i&&"popularPriceRange[]"!=a&&"capacityRange"!=a){if(isNaN(o.idValue)||o.idValue<=0){if(void 0===o.idValue)console.warn("Undefined ID Value in "+a);return}if(void 0===o.url)if(-1!==r.indexOf(a))return void console.warn("Undefined Static Value in "+a)}else if(""==o.textValue.trim())return;if(!t[a])t[a]=[],n.push({name:a,type:i});t[a].push(o)}),$(s).each(function(e,a){if(data=$(".app-vendors-search-filters input[name="+a+"]"),0<data.length)if(""!==data[0].value)if(v={idValue:+data[0].value,idWW:data[0].dataset.idww,url:data[0].dataset.value,element:null},!t[a])t[a]=[],t[a].push(v)}),d)delete t.id_provincia;if(l)delete t.id_poblacion;var c=!0;if(t.id_provincia&&!t.id_region){var p=t.id_provincia[0].element;if(p){var u=p.prevAll(".app-vendors-search-region-adm1").first();if(u.length){var f=u[0],v={idValue:+f.dataset.inputval||+f.value,url:f.dataset.value};if(!t.id_region)t.id_region=[],n.push({name:"id_region"});t.id_region.push(v)}}}if(!t.id_poblacion)delete t.distanceFilter;for(var m in n){var h=n[m].name;if("checkbox"!==n[m].type||t[h].length!=i.find("input[type=checkbox][name='"+h+"']").length){if("id_sector[]"===h&&1<t[h].length)c=!1;if(("popularPriceRange[]"===h||"capacityRange"===h)&&1<t[h].length)c=!1;if(-1===r.indexOf(h))c=!1}else delete t[h]}var g=!1;if(0<i.find("input[name=destCountry]").val())g=!(c=!1);var _=null;if("US"===globals.Request_Country&&!g)_=i.find("input[name=id_grupo]").val();else{var w=$(this).find(".app-filter-vendors[data-filter='id_grupo'] .app-vendors-search-redirect.app-selected");if("-1"==w.data("value"))i.find("input[name=id_grupo]").val(""),i.find("input[name=id_grupo]").data("value",""),delete t.id_grupo;else _=w.data("inputval"),i.find("input[name=id_grupo]").val(w.data("inputval")),i.find("input[name=id_grupo]").data("value",w.data("value"))}var y=i.find("input[name=showmode]").val(),b=i.find("input[name=distance]").val(),S=i.find("input[name=lat]").val(),C=i.find("input[name=long]").val(),k=i.find("input[name=exclFields]").val(),E=i.find("input[name=txtStrSearch]").val(),x=i.find("input[name=NumPage]").val();i.find("input[name=destCountry]").val();if(0<+b&&0!=+S&&0!=+C&&("NumPage"==i.data("filter-changed")||"showmode"==i.data("filter-changed")))t.distance=[{idValue:b}],t._lat=[{idValue:S}],t._long=[{idValue:C}],c=!(t.exclFields=[{idValue:k}]);if(""!=y&&"listado"!=y)c=!1;if(!$.isEmptyObject(a))c=!1;if(""!=E&&("NumPage"==i.data("filter-changed")||"showmode"==i.data("filter-changed")))c=!1;else i.find("input[name=txtStrSearch]").val("");if(_)t.id_grupo=[{idValue:_,textValue:_,url:i.find("input[name=id_grupo]").data("value"),idWW:1==_?11:2==_?605:null}];if(c){var I={regionAdm1:t.id_region?t.id_region[0]:null,region:t.id_provincia?t.id_provincia[0]:null,city:t.id_poblacion?t.id_poblacion[0]:null,grupo:t.id_grupo?t.id_grupo[0]:null,sector:t["id_sector[]"]?t["id_sector[]"][0]:null,geozone:t.id_geozona?t.id_geozona[0]:null,page:+x};vendors_loadResultsAjax(bodas.generateStaticVendorURL(I,!0),!0)}else{var P=["id_poblacion","id_region","id_provincia","id_geozona","id_sector[]","geoSearch","distanceFilter","_lat","_long","distance","exclFields","destCountry"];for(var G in P)if(t[h=P[G]]){var L=i.find("input[name='"+h+"']");if("hidden"==L.attr("type")){var T;for(var R in L.remove(),t[h])T=t[h][R],i.append("<input type='hidden' name='"+h+"' value='"+T.idValue+"'/>")}else if("checkbox"==L.attr("type")){for(var R in L.attr("checked","").prop("checked",!1),t[h])T=t[h][R],L.filter("[data-inputval='"+T.idValue+"']").attr("checked","checked").prop("checked",!0);if(L.length==L.filter(":checked").length)L.attr("checked",""),L.prop("checked",!1),L.closest("icheckbox_minimal").removeClass("checked")}else if("radio"==L.attr("type"));else if("text"==L.attr("type"))L.attr("value",L.val())}else i.find("input[name='"+h+"']").attr("disabled","disabled");i.find("input[name=geozone]").attr("disabled","disabled"),i.find("input[value=''], input[value='0'], input[value='-1']").attr("disabled","disabled");var M=i.attr("action"),O="";for(var V in a)O+="&dates%5B%5D="+V;if(o.length)O+="&currentPickedMonth="+o.data("currentPickedMonth");vendors_loadResultsAjax(M+"?"+bodas.serializeSearchParameters(i)+O,!0),i.find("input").removeAttr("disabled")}}),$(document.body).on("click",".app-directory-filters-change-mode",function(){var e=$("#app-vendors-search-filters"),a=e.find("form");e.find("input[name=showmode]").val(this.dataset.showmode),vendors_scrollToTopResultList(),a.data("filter-changed","showmode"),e.find("form").trigger("filter")}),$(document.body).on("click",".app-directory-filters-change-page",function(e){var a=$("#app-vendors-search-filters");if("US"==globals.Request_Country||-1!==window.location.href.indexOf("busc.php")||window.vendorsAjaxLoadedOnce)if("US"!=globals.Request_Country||-1!==window.location.href.indexOf("shared/search")||window.vendorsAjaxLoadedOnce){e.preventDefault();var i=a.find("form");a.find("input[name=NumPage]").val(this.dataset.page),vendors_scrollToTopResultList(),i.data("filter-changed","NumPage"),a.find("form").trigger("filter")}}),$(document.body).on("click",".app-directory-filters-change",function(){SetCookie("GEO_LAST",""),vendors_triggerFilter(this,!0)}),$(document.body).on("contextmenu",".app-rw-video",function(e){e.preventDefault()}),$(document.body).on("click",".app-vendor-slider-switch",function(e){$(".app-vendor-slider-switch").each(function(){$(this).removeClass("active")}),$(this).addClass("active");var c=$("#app-vendor-slider-box"),a=c.data("id-empresa"),i=c.data("sector"),p=$(this).data("type"),u=c.find("[data-section]:visible"),f=c.find("[data-section="+p+"]"),v=c.find(".swiper-container"),t=!1;if(f.data("force-switch"))f.data("force-switch",0),t=!0;else if(c[0].switchingTo||f.data("section")==u.data("section"))return;c[0].switchingTo=p,$(".app-vendor-slider-switch").removeClass("active"),$(".app-vendor-slider-switch[data-type="+p+"]").addClass("active"),$(".app-profile-tab").parent().removeClass("current"),$(".app-profile-tab[data-hash=#"+p+"]").parent().addClass("current"),c.find("video").each(function(){this.pause()});var o=u.find(".swiper-wrapper"),n=f.find(".swiper-wrapper");if(o.data("saved-style",o.attr("style")),f.stop(),u.stop(),""!=f.html().trim()){if($("#app-carousel-photos").is(":visible"))f.find(".app-slider-container").trigger("fullscreen-slider");return u.fadeOut(function(){n.attr("style",n.data("saved-style")),f.css("opacity","0").show();var e=f.find(".app-slider-container")[0].swiper;if(t){var a=f.find(".app-vendor-slide-load-video, .app-vendor-3d-tour").length,i=f.find(".app-slider-container").data("total-imgs"),o=parseInt(i-a);for(f.find(".app-slider-container").attr("data-total-imgs",o),f.find(".app-slider-container").data("total-imgs",o);a;)e.removeSlide(a--);e.slideTo(0,1e3,!0)}if(e)e.update(!0);f.css("opacity","1").hide(),f.fadeIn(function(){delete c[0].switchingTo})}),void v.closest(".storefront-slider").data("mixed-items",!1)}var r="",m="",h="",g="",_=!1;if("videos"==p)h="app-vendor-slide-load-video",g="icon icon-play-white pointer",r="/vendors/loadVideos.php",_='<i data-id="[VENDOR_VIDEO_ID]" class="icon-vendor icon-vendor-fullscreen app-vendor-slide-load-video-full-screen"></i>';else if("rw"==p)r="/vendors/loadPhotosRW.php",m="pointer";else if("3dtours"==p)r="/vendors/loadTours.php";if(!f[0].beingLoaded)f[0].beingLoaded=!0,$.post(r+"?size=400",{idEmpresa:a,sectorTools:i}).done(function(i){if("object"!=typeof i)i=JSON.parse(i);var e="",a=0;f.append(u.html());var o=f.find(".swiper-wrapper");if(i.tours)for(var t in a=i.tours.length,i.tours){if(e+="<figure class='app-vendor-3d-tour swiper-slide'>",e+='<div style="background-color: #000; background-size: 100% auto; text-align: center;">',1<=t)e+='<iframe class="lazyload" style="display:none" width="700" height="450" onload="vendors_fixIframeSwiper(this);" data-src="https://my.matterport.com/show/?m='+i.tours[t].replace("&play=1","")+'" allowfullscreen></iframe>';else e+='<iframe width="700" height="450" src="https://my.matterport.com/show/?m='+i.tours[t].replace("&play=1","")+'" allowfullscreen></iframe>';if(e+="</div>",e+='<i data-id="'+i.toursIds[t]+'" class="icon-vendor icon-vendor-fullscreen app-vendor-slide-load-tour-full-screen"></i>',e+="</figure>",t==i.tours.length-1)e="<div class='swiper-slide'><img src='"+i.thumbnailsTour[t]+"' /></div>"+e,e+="<div class='swiper-slide'><img class='app-lead-img' src='"+i.thumbnailsTour[0]+"' /></div>",e+="<div class='swiper-slide'><img src='"+i.thumbnailsTour[0+(1<i.tours.length)]+"' /></div>"}else{if(!i.photos)return;function n(e){var a="";if("rw"==p)if("rw-emp"!=i.captions[e].type)a="<div class='swiper-slide-user-caption'><img src='"+i.captions[e].avatar+"' /><span>"+i.captions[e].name+"</span></div><i class='icon-vendor icon-vendor-fullscreen'></i>";else a="<figcaption><i class='icon-vendor icon-vendor-camera-white icon-left'></i>"+i.captions[e].name+"</figcaption><i class='icon-vendor icon-vendor-fullscreen'></i>";else if("videos"==p)a="<figcaption>"+i.captions[e]+"</figcaption>";return a}for(var r in i.thumbnailsVideo=i.thumbnailsVideo||{},i.photos){var s=10<r,d=_?_.replace("[VENDOR_VIDEO_ID]",i.videoId[r]):"";if(2==i.type[r]){if(e+="<div class='swiper-slide embedded'>"+(s?i.embedded[r]:i.embedded[r].replace("data-src=","src="))+"</div>",r==i.photos.length-1){if(e="<div class='swiper-slide embedded'>"+i.embedded[r].replace("data-src=","src=")+"</div>"+e,2==i.type[0])e+="<div class='swiper-slide'><img class='app-lead-img'/></div>";else e+="<div class='swiper-slide'><img class='app-lead-img' "+(s?"data-":"")+"src='"+i.thumbnails[0]+"' />"+n(0)+"</div>";var l=0+(1<i.photos.length);if(2==i.type[l])e+="<div class='swiper-slide embedded'>"+(s?i.embedded[l]:i.embedded[l].replace("data-src=","src="))+"</div>";else e+="<div class='swiper-slide'><img "+(s?"data-":"")+"src='"+i.thumbnails[l]+"' />"+n(l)+"</div>"}}else if(e+="<div class='"+h+m+" swiper-slide' data-url-video='"+i.photos[r]+"' data-url-poster='"+(i.thumbnailsVideo[r]?i.thumbnailsVideo[r]:"")+"'><img "+(s?"data-":"")+"src='"+(i.thumbnailsVideo[r]||i.photos[r])+"' />"+d+n(r)+"</div>",r==i.photos.length-1){if(e="<div class='swiper-slide'><img src='"+i.thumbnails[r]+"' />"+n(r)+"</div>"+e,2==i.type[0])e+="<div class='swiper-slide'><img class='app-lead-img'/></div>";else e+="<div class='swiper-slide'><img class='app-lead-img' "+(s?"data-":"")+"src='"+i.thumbnails[0]+"' />"+n(0)+"</div>";if(l=0+(1<i.photos.length),2==i.type[l])e+="<div class='swiper-slide embedded'>"+(s?i.embedded[l]:i.embedded[l].replace("data-src=","src="))+"</div>";else e+="<div class='swiper-slide'><img "+(s?"data-":"")+"src='"+i.thumbnails[l]+"' />"+n(l)+"</div>"}}a=i.photos.length}f.find(".swiper-wrapper").html("").attr("style",""),f.find(".app-slider-container").addClass(g).data("total-imgs",a),o.html(e),f.css("height",u.css("height")),u.fadeOut(function(){f.removeClass("dnone").css("opacity","0"),bodas.sliderManagerExternal.create({mode:"swiper-vendors",idEmpresa:$(document.body).data("id-empresa"),sectorTools:$(document.body).data("sector-tools"),section:$(document.body).data("section"),callback:function(){if($("#app-carousel-photos").is(":visible"))f.find(".app-slider-container").trigger("fullscreen-slider")},sliderOptions:{container:f.find(".app-slider-container"),nImagesToShow:3,preloadImages:!0,onImagesReadyCallback:function(e){e.closest("[data-section]").css("opacity","1").fadeIn(function(){delete c[0].switchingTo}),e[0].swiper.update(!0)}}})}),v.closest(".storefront-slider").data("mixed-items",!1)});else delete c[0].switchingTo});var u=$("#app-emp-form-contactar");if(0<u.length){var s,f,d={id_empresa:u.data("id-empresa"),isAjaxInline:1};if(u.data("concertar-cita"))s="/emp-FormCita.php",f=$("#app-lateral-concertar");else s="/emp-Form.php",f=$("#app-lateral-form");$.get(s,d).then(function(e){if(f.hide(),f.html(e).fadeIn(),0<$("#divVenueSaved").length)vendors_usuarioRegistradoAndVenue(u.find("input[name=Mail]")[0]);if(0<$(".app-sticky-form").length&&768<=window.innerHeight){var o=$(".storefront-aside"),a=$(".storefront-content"),t=o.offset().top,n=$(".app-footer"),r=0,s=0;if($(".app-emp-tabs-footer").length)r=50;if($(".app-storefrontContest").length)r=120;if($("#js-navbar-responsive").length)s=75;if($(".app-profile-top-fixed-bar"))s=95;if(0==a.length||a.outerHeight()>=o.outerHeight())$(window).scroll(function(){var e=o.height(),a=n.offset().top-r,i=$(this).scrollTop()+s;if(t<=i&&i+e<a)o.addClass("form-fixed").removeClass("form-absolute").css("top","");else if(t<=i&&a<=i+e)o.removeClass("form-fixed").addClass("form-absolute").css("top",a-e);else o.removeClass("form-fixed form-absolute").css("top","")})}if(0<$(".app-sticky-aside-storefront").length)for(var i=document.getElementsByClassName("app-sticky-aside-storefront"),d=0;d<i.length;d++){var l=i[d],c=document.querySelector(".app-sticky-aside-parent")||l.parentElement,p=l.getAttribute("data-gap")||null;stickyAside(p,l,c)}})}if($(document.body).on("keydown",".app-vendors-province-search-input:focus",function(e){var a,i=$(this).closest(".app-box-filter"),o=i.find(".app-vendors-province-search-list li.app-vendors-filters-change, .app-vendors-province-search-list li.app-vendors-province-search-item"),t=o.filter(".icon-radio-red");if(38==e.keyCode){e.preventDefault();var n=t.prevAll(".app-vendors-filters-change:visible, .app-vendors-province-search-item:visible").eq(0);if(0<n.length)if(t.removeClass("icon-radio-red"),n.addClass("icon-radio"),a=t.closest(".app-vendors-box-scroll"),n[0].offsetTop-a[0].scrollTop-n.height()-100<0)a[0].scrollTop=n[0].offsetTop-~~(a.height()/2)+n.height()}else if(40==e.keyCode){var r;if(e.preventDefault(),!t.length)t=r=o.filter(":visible").eq(0);else r=t.nextAll(".app-vendors-filters-change:visible, .app-vendors-province-search-item:visible").eq(0);if(0<r.length)if(t.removeClass("icon-radio-red"),r.addClass("icon-radio"),a=t.closest(".app-vendors-box-scroll"),r[0].offsetTop-a[0].scrollTop>~~(a.height()/2))a[0].scrollTop=r[0].offsetTop-~~(a.height()/2)-r.height()}else if(13==e.keyCode)e.preventDefault(),t=i.find(".app-vendors-filters-change:visible, .app-vendors-province-search-item:visible").eq(0),i.find(".app-vendors-province-search-input").val(t.data("name").trim()),t.click()}),$(document.body).on("keyup change",".app-vendors-province-search-input",function(e){if(-1==[38,40,13].indexOf(e.keyCode)){var a=$(this).closest(".app-box-filter"),i=a.find(".app-vendors-province-search-list li.app-vendors-filters-change, .app-vendors-province-search-list li.app-vendors-province-search-item"),n=$(this).val().trim().toUpperCase();n=strtr(n,"ÀÁÂÃÄÅàáâãäåÒÓÔÕÖØòóôõöøÈÉÊËèéêëÇçÌÍÎÏìíîïÙÚÛÜùúûüÿÑñ","AAAAAAaaaaaaOOOOOOooooooEEEEeeeeCcIIIIiiiiUUUUuuuuyNn");var r=0,s=0;if(i.each(function(){var e=$(this).data("name-suggest"),a=$(this).data("filter"),i=e.split(" "),o=!1;if(0==e.indexOf(n))$(this).show(),o=!0;if(1<i.length&&!o)for(var t in i)if(0==i[t].indexOf(n))$(this).show(),o=!0;if(void 0!==a&&0===a.indexOf("id_geozona")&&o)s++;if(!o)r++,$(this).hide()}),0<s)a.find(".app-vendors-province-search-list > li.app-vendors-province-filters-divider").show();else a.find(".app-vendors-province-search-list > li.app-vendors-province-filters-divider").hide();if(r!=i.length)a.find(".app-vendors-province-search-list li.app-vendors-province-filters-zero-result").hide(),a.find(".app-vendors-box-scroll")[0].scrollTop=0;else a.find(".app-vendors-province-search-list li.app-vendors-province-filters-zero-result").show()}}),$(document.body).on("keydown",".app-vendors-town-search-input:focus",function(e){var a,i=$(this).closest(".app-box-filter"),o=i.find(".app-vendors-town-search-list > li.app-vendors-filters-change"),t=o.filter(".icon-radio-red");if(38==e.keyCode){e.preventDefault();var n=t.prevAll(".app-vendors-filters-change:visible").eq(0);if(0<n.length)if(t.removeClass("icon-radio-red"),n.addClass("icon-radio"),a=t.closest(".app-vendors-box-scroll"),n[0].offsetTop-a[0].scrollTop-n.height()-100<0)a[0].scrollTop=n[0].offsetTop-~~(a.height()/2)+n.height()}else if(40==e.keyCode){var r;if(e.preventDefault(),!t.length)t=r=o.filter(":visible").eq(0);else r=t.nextAll(".app-vendors-filters-change:visible").eq(0);if(0<r.length)if(t.removeClass("icon-radio-red"),r.addClass("icon-radio"),a=t.closest(".app-vendors-box-scroll"),r[0].offsetTop-a[0].scrollTop>~~(a.height()/2))a[0].scrollTop=r[0].offsetTop-~~(a.height()/2)-r.height()}else if(13==e.keyCode)e.preventDefault(),i.find(".app-vendors-town-search-input").val(t.text().trim()),t.click()}),$(document.body).on("keyup change",".app-vendors-town-search-input",function(e){if(-1==[38,40,13].indexOf(e.keyCode)){var a=$(this).closest(".app-box-filter"),i=a.find(".app-vendors-town-search-list > li.app-vendors-filters-change"),o=$(this).val().trim().toUpperCase();o=strtr(o,"ÀÁÂÃÄÅàáâãäåÒÓÔÕÖØòóôõöøÈÉÊËèéêëÇçÌÍÎÏìíîïÙÚÛÜùúûüÿÑñ","AAAAAAaaaaaaOOOOOOooooooEEEEeeeeCcIIIIiiiiUUUUuuuuyNn");var t=0;if(i.each(function(){var e=$(this).data("name-suggest"),a=e.split(" ");if(0!=e.indexOf(o)){if(1<a.length)for(var i in a)if(0==a[i].indexOf(o))return void $(this).show();t++,$(this).hide()}else $(this).show()}),t!=i.length)a.find(".app-vendors-town-search-list > li.app-vendors-town-filters-zero-result").hide(),a.find(".app-vendors-box-scroll")[0].scrollTop=0;else a.find(".app-vendors-town-search-list > li.app-vendors-town-filters-zero-result").show()}}),$(document.body).on("focus",".app-vendors-search-input",function(){if(""!==$(this).val())$(this).data("prev_value",$(this).val());$(this).val(""),$(this).parent().next().slideDown(400)}),$(document.body).on("blur",".app-vendors-search-input",function(){if($(this).parent().next().is(":visible"))if(""==$(this).val()&&""!==$(this).data("prev_value"))$(this).val($(this).data("prev_value"))}),$(document.body).on("click",".app-vendors-search-item",function(){$(this).parent().prev(".filter-search").find(".app-vendors-search-input").val($(this).data("name"))}),$(document.body).on("click",".app-vendors-search-clear",function(){var e=$(this).prev(".app-vendors-search-input");if(void 0===e.data("prev_value"))e.data("prev_value",e.val());e.val("").focus().trigger("change")}),$(document.body).on("click",".app-capa-rol",function(){var e=$(this).next("input[name=Rol]").val(),a=$(this).closest("form");$(".app-capa-rol",a).removeClass("current"),$("input[name='Rol']").removeAttr("checked").trigger("change"),$(this).addClass("current"),vendors_setCamposRol(e,a),vendors_showCamposNovios(e,a)}),$(document.body).on("change","#select-otros",function(){vendors_setCamposRol(void 0,this.closest("form"))}),$(document.body).hasClass("app-slider-vendor-profile-start")&&0<$(".app-slider-container").length)bodas.sliderManagerExternal.create({mode:"swiper-vendors",idEmpresa:$(document.body).data("id-empresa"),sectorTools:$(document.body).data("sector-tools"),section:$(document.body).data("section"),sliderOptions:{container:$(".app-slider-container").first(),nImagesToShow:3,preloadImages:!0,onImagesReadyCallback:function(e){e.closest("[data-section]").removeClass("dnone"),e.fadeIn(400,function(){e[0].swiper.update(!0),e[0].swiper.update(!0)})}}});$(document.body).on("change",".app-item-selector-checker",function(){var e=$(this),a=e[0].value;if(e.data("current",!0),2==a||1==a)e.closest("#SWFUploadFileListingFiles").find(".app-item-select").each(function(){if(1!=$(this).data("current")&&$(this)[0].value==a)$(this)[0].value=0});e.removeData("current")}),$(document.body).on("click",".app-vendor-slider-switch-fullscreen",function(e){var a=this.dataset.type,i=$(this).closest(".app-slider-actions"),o=i.data("id-empresa"),t=i.data("sector-tools");if(bodas.sliderManager.getSlider("#app-slider-album").name!=a){var n=vendors_createSliderFullscreen(a,{idEmpresa:o,sectorTools:t},!0);$(this).siblings().removeClass("current"),$(this).addClass("current"),n.init()}}),$(document.body).on("click",".app-review-show-rating",function(){$(this).closest(".app-review-rating-container").find(".app-review-rating-user").show(),this.remove()});var l=$(".app-va-slider-faq");if(l.length)l.each(function(){var i=$(this),o=i.closest(".app-va-question-prices-ww").find("input:text"),t=o.closest(".app-va-question-prices-ww-right-section"),e=t.find(".app-va-question-prices-ww-not-apply");i.slider({range:"min",min:i.data("min-price"),max:i.data("max-price"),value:i.data("current-price"),step:i.data("interval"),animate:!0,slide:function(e,a){t.show(),o.val(a.value.currency_format()+(a.value==i.data("max-price")?"+":""))}});var a=+i.data("current-price");if(15==globals.Request_id_project)try{o.val(a.currency_format())}catch(e){o.val(a)}e.on("click",function(){o.val(""),t.hide(),i.slider("value",i.data("min-price"))})});if(vendors_bindTopFixedBar(),vendors_bindCalendarChangeYear(),$(".app-show-static-map").length)initializeStaticGmapOnDemand("map",function(){var e=$("#map");gmaps_showEmpLayerStaticMap(e.data("id-empresa"),e)});else vendors_bindShowMapVendorCustom(),vendors_bindShowMapVendorAddresses();if(function(){if($(document.body).hasClass("app-vendor-profile-home-bindings"))if("function"==typeof comproveContactarEmp)comproveContactarEmp()}(),$(document.body).hasClass("app-vendors-catalog-trace"))vendors_send_trace();if($(document.body).on("click",".app-toggle-box",function(){var e=$(this).parent().find(".app-toggle-box-target");$(this).toggleClass("toggleActive"),e.stop().slideToggle(300)}),$(document.body).on("click",".app-filter-show-all",function(){$(this).addClass("dnone").parents(".app-filter-vendors").find(".app-filter-show-all-target").removeClass("dnone")}),$(document.body).on("click",".app-custom-seo-text-more",function(){$(this).addClass("dnone").parent().find(".app-custom-seo-text-toggle").removeClass("dnone")}),$(document.body).on("click",".input-group-line input:checkbox, .input-group-line input:radio",function(){$(this).parents("label").toggleClass("active")}),0<$(".app-swiper-awards").length){var c=$(".app-swiper-awards")[0],p=$(c).hasClass("swiper-add-margin-left")?35:0,v=new Swiper(".app-swiper-awards",{slidesPerView:"auto",freeMode:!0,slidesOffsetBefore:p,slidesOffsetAfter:35,watchSlidesVisibility:!0,watchSlidesProgress:!0,grabCursor:!0,nextButton:".storefrontSlider__button--next",prevButton:".storefrontSlider__button--prev"});setTimeout(function(){v.update()},500)}if($(document.body).on("click",".app-storefront-share",function(){$(this).find("div:first").toggle()}),$(document.body).on("click",".app-save-vendor",function(){vendors_saveVendor(this)}),$(".app-reviews-sort-mode").on("change",function(){if($moreReviewsBtn=$(".app-btn-more-reviews"),$reviewsList=$(".app-reviews-list"),$reviewsList.empty(),$moreReviewsBtn.length)$moreReviewsBtn.off("click"),loadMoreVendorItemsBtnInit($moreReviewsBtn,$reviewsList,"get-reviews",10,vendors_bind_review_items_events,{offset:1,sortMode:$(this).val()}),$moreReviewsBtn.data("page",1).show().click();else loadMoreVendorItems("get-reviews",1,10,$(this).data("vendorid"),{offset:1,sortMode:$(this).val()}).done(function(e){$reviewsList.append(e.content),vendors_bind_review_items_events()})}),$(document.body).on("click","#app_make_payment",function(){document.paymentForm.submit(),$("#app_make_payment").css("pointer-events","none"),$("#app_make_payment").hide("slow")}),$(document.body).hasClass("app-vendors-home-aside-conv-thread"))$(document.body).on("click",".app-vendors-change-status-aside",function(){var a=$(this),i=a.closest(".app-vendors-change-status-aside-wp"),e=+i.attr("data-status"),o=a.data("status");if(e!==o){var t={idEmpresa:i.data("vendor-id"),public:i.data("public"),Status:o,Precio:i.data("precio"),Notes:i.data("notes"),Rating:i.data("rating")};$.post("/tools/VendorsModifRun",t,function(e){if(e.success)if(i.find(".app-vendors-change-status-aside-icon").removeClass("active"),a.find(".app-vendors-change-status-aside-icon").addClass("active"),i.attr("data-status",o),6==o&&globals.Request_mis_empresas)common_openLayer("/tools/newBookedVendorVisibility?idEmpresa="+t.idEmpresa+"&isNewEmpresa=false")})}});if($(document.body).hasClass("app-user-marketplace-page"))$(document.body).on("click",".app-user-review-layer",function(){$.post($(this).data("href"),function(e){if(e.view)$("#app-common-layer").html(e.view).modal()})});$(document.body).on("click",".app-video-player",function(){var e=$(this),a=e.find("video");if(a.hasClass("init"))e.find(".app-video-player-icon").remove(),a.attr("controls",!0).removeClass("init"),a[0].play()}),$(document.body).on("click",".app-open-modal-more-reviews-user",function(){var e={avoidReviewId:$(this).data("review-id")};$.ajax({url:"/reviews/user/"+$(this).data("user-id"),data:e}).then(function(e){$("#app-common-layer").html(e).modal(),vendors_bind_review_items_events()})}),$(document.body).on("click",".app-readmore-vendor-review",function(){$(this).addClass("dnone"),$(this).parent().find(".app-preview-vendor-review").addClass("dnone"),$(this).parent().find(".app-common-ellipsis").addClass("dnone"),$(this).parent().find(".storefrontUserReview__description--big").removeClass("dnone")}),$(document.body).on("click",".app-catalog-lead-btn, .app-vendor-marker-lead-btn",function(){var e=$(this).closest(".app-catalog-list-vendor, .app-vendors-item");if(e.length){var a=e.attr("data-vendor-info");a=void 0!==a?JSON.parse(a):{},document.body.dispatchEvent(new CustomEvent("vendor_requested_pricing",{detail:a}))}}),$(document.body).on("click",".app-profile-lead-btn",function(){if(ReducedMatcher.isVendorProfile(CurrentPageInfo.getReduced())){var e=CurrentPageInfo.getPageData();document.body.dispatchEvent(new CustomEvent("vendor_requested_pricing",{detail:e}))}}),$(document.body).on("click",".app-translate-button",function(){vendors_toggleTranslation(this)});var m=$(".app-destination-weddings-load-related-box");if(globals.isDestinationWeddingEnabled&&0<m.length)$.post("/busc-DestinationWeddingsBox.php",m.data(),function(e){m.replaceWith(e),initializeSwipers()});if($(".directory-search-layer-custom").length)$(document).mouseup(function(e){for(var a=["#searchCountry",".app-suggest-vendors-dw-div-default"],i=0;i<a.length;i++){var o=$(a[i]);if(o.is(e.target)||0<o.has(e.target).length)break}if(!o.is(e.target)&&0===o.has(e.target).length)if($(".app-suggest-vendors-dw-div-default").hide(),0==document.frmSearch.searchCountry.value.length)document.frmSearch.searchCountry.value=$(".app-vendors-search-form").find("input").data("value")});CatalogListPage.init()});/*
 * jScrollPane - v2.0.19 - 2013-11-16
 * http://jscrollpane.kelvinluck.com/
 *
 * Copyright (c) 2013 Kelvin Luck
 * Dual licensed under the MIT or GPL licenses.
 */
!function(a,b,c){a.fn.jScrollPane=function(d){function e(d,e){function f(b){var e,h,j,l,m,n,q=!1,r=!1;if(P=b,Q===c)m=d.scrollTop(),n=d.scrollLeft(),d.css({overflow:"hidden",padding:0}),R=d.innerWidth()+tb,S=d.innerHeight(),d.width(R),Q=a('<div class="jspPane" />').css("padding",sb).append(d.children()),T=a('<div class="jspContainer" />').css({width:R+"px",height:S+"px"}).append(Q).appendTo(d);else{if(d.css("width",""),q=P.stickToBottom&&C(),r=P.stickToRight&&D(),l=d.innerWidth()+tb!=R||d.outerHeight()!=S,l&&(R=d.innerWidth()+tb,S=d.innerHeight(),T.css({width:R+"px",height:S+"px"})),!l&&ub==U&&Q.outerHeight()==V)return d.width(R),void 0;ub=U,Q.css("width",""),d.width(R),T.find(">.jspVerticalBar,>.jspHorizontalBar").remove().end()}Q.css("overflow","auto"),U=b.contentWidth?b.contentWidth:Q[0].scrollWidth,V=Q[0].scrollHeight,Q.css("overflow",""),W=U/R,X=V/S,Y=X>1,Z=W>1,Z||Y?(d.addClass("jspScrollable"),e=P.maintainPosition&&(ab||db),e&&(h=A(),j=B()),g(),i(),k(),e&&(y(r?U-R:h,!1),x(q?V-S:j,!1)),H(),E(),N(),P.enableKeyboardNavigation&&J(),P.clickOnTrack&&o(),L(),P.hijackInternalLinks&&M()):(d.removeClass("jspScrollable"),Q.css({top:0,left:0,width:T.width()-tb}),F(),I(),K(),p()),P.autoReinitialise&&!rb?rb=setInterval(function(){f(P)},P.autoReinitialiseDelay):!P.autoReinitialise&&rb&&clearInterval(rb),m&&d.scrollTop(0)&&x(m,!1),n&&d.scrollLeft(0)&&y(n,!1),d.trigger("jsp-initialised",[Z||Y])}function g(){Y&&(T.append(a('<div class="jspVerticalBar" />').append(a('<div class="jspCap jspCapTop" />'),a('<div class="jspTrack" />').append(a('<div class="jspDrag" />').append(a('<div class="jspDragTop" />'),a('<div class="jspDragBottom" />'))),a('<div class="jspCap jspCapBottom" />'))),eb=T.find(">.jspVerticalBar"),fb=eb.find(">.jspTrack"),$=fb.find(">.jspDrag"),P.showArrows&&(jb=a('<a class="jspArrow jspArrowUp" />').bind("mousedown.jsp",m(0,-1)).bind("click.jsp",G),kb=a('<a class="jspArrow jspArrowDown" />').bind("mousedown.jsp",m(0,1)).bind("click.jsp",G),P.arrowScrollOnHover&&(jb.bind("mouseover.jsp",m(0,-1,jb)),kb.bind("mouseover.jsp",m(0,1,kb))),l(fb,P.verticalArrowPositions,jb,kb)),hb=S,T.find(">.jspVerticalBar>.jspCap:visible,>.jspVerticalBar>.jspArrow").each(function(){hb-=a(this).outerHeight()}),$.hover(function(){$.addClass("jspHover")},function(){$.removeClass("jspHover")}).bind("mousedown.jsp",function(b){a("html").bind("dragstart.jsp selectstart.jsp",G),$.addClass("jspActive");var c=b.pageY-$.position().top;return a("html").bind("mousemove.jsp",function(a){r(a.pageY-c,!1)}).bind("mouseup.jsp mouseleave.jsp",q),!1}),h())}function h(){fb.height(hb+"px"),ab=0,gb=P.verticalGutter+fb.outerWidth(),Q.width(R-gb-tb);try{0===eb.position().left&&Q.css("margin-left",gb+"px")}catch(a){}}function i(){Z&&(T.append(a('<div class="jspHorizontalBar" />').append(a('<div class="jspCap jspCapLeft" />'),a('<div class="jspTrack" />').append(a('<div class="jspDrag" />').append(a('<div class="jspDragLeft" />'),a('<div class="jspDragRight" />'))),a('<div class="jspCap jspCapRight" />'))),lb=T.find(">.jspHorizontalBar"),mb=lb.find(">.jspTrack"),bb=mb.find(">.jspDrag"),P.showArrows&&(pb=a('<a class="jspArrow jspArrowLeft" />').bind("mousedown.jsp",m(-1,0)).bind("click.jsp",G),qb=a('<a class="jspArrow jspArrowRight" />').bind("mousedown.jsp",m(1,0)).bind("click.jsp",G),P.arrowScrollOnHover&&(pb.bind("mouseover.jsp",m(-1,0,pb)),qb.bind("mouseover.jsp",m(1,0,qb))),l(mb,P.horizontalArrowPositions,pb,qb)),bb.hover(function(){bb.addClass("jspHover")},function(){bb.removeClass("jspHover")}).bind("mousedown.jsp",function(b){a("html").bind("dragstart.jsp selectstart.jsp",G),bb.addClass("jspActive");var c=b.pageX-bb.position().left;return a("html").bind("mousemove.jsp",function(a){t(a.pageX-c,!1)}).bind("mouseup.jsp mouseleave.jsp",q),!1}),nb=T.innerWidth(),j())}function j(){T.find(">.jspHorizontalBar>.jspCap:visible,>.jspHorizontalBar>.jspArrow").each(function(){nb-=a(this).outerWidth()}),mb.width(nb+"px"),db=0}function k(){if(Z&&Y){var b=mb.outerHeight(),c=fb.outerWidth();hb-=b,a(lb).find(">.jspCap:visible,>.jspArrow").each(function(){nb+=a(this).outerWidth()}),nb-=c,S-=c,R-=b,mb.parent().append(a('<div class="jspCorner" />').css("width",b+"px")),h(),j()}Z&&Q.width(T.outerWidth()-tb+"px"),V=Q.outerHeight(),X=V/S,Z&&(ob=Math.ceil(1/W*nb),ob>P.horizontalDragMaxWidth?ob=P.horizontalDragMaxWidth:ob<P.horizontalDragMinWidth&&(ob=P.horizontalDragMinWidth),bb.width(ob+"px"),cb=nb-ob,u(db)),Y&&(ib=Math.ceil(1/X*hb),ib>P.verticalDragMaxHeight?ib=P.verticalDragMaxHeight:ib<P.verticalDragMinHeight&&(ib=P.verticalDragMinHeight),$.height(ib-5+"px"),_=hb-ib,s(ab))}function l(a,b,c,d){var e,f="before",g="after";"os"==b&&(b=/Mac/.test(navigator.platform)?"after":"split"),b==f?g=b:b==g&&(f=b,e=c,c=d,d=e),a[f](c)[g](d)}function m(a,b,c){return function(){return n(a,b,this,c),this.blur(),!1}}function n(b,c,d,e){d=a(d).addClass("jspActive");var f,g,h=!0,i=function(){0!==b&&vb.scrollByX(b*P.arrowButtonSpeed),0!==c&&vb.scrollByY(c*P.arrowButtonSpeed),g=setTimeout(i,h?P.initialDelay:P.arrowRepeatFreq),h=!1};i(),f=e?"mouseout.jsp":"mouseup.jsp",e=e||a("html"),e.bind(f,function(){d.removeClass("jspActive"),g&&clearTimeout(g),g=null,e.unbind(f)})}function o(){p(),Y&&fb.bind("mousedown.jsp",function(b){if(b.originalTarget===c||b.originalTarget==b.currentTarget){var d,e=a(this),f=e.offset(),g=b.pageY-f.top-ab,h=!0,i=function(){var a=e.offset(),c=b.pageY-a.top-ib/2,f=S*P.scrollPagePercent,k=_*f/(V-S);if(0>g)ab-k>c?vb.scrollByY(-f):r(c);else{if(!(g>0))return j(),void 0;c>ab+k?vb.scrollByY(f):r(c)}d=setTimeout(i,h?P.initialDelay:P.trackClickRepeatFreq),h=!1},j=function(){d&&clearTimeout(d),d=null,a(document).unbind("mouseup.jsp",j)};return i(),a(document).bind("mouseup.jsp",j),!1}}),Z&&mb.bind("mousedown.jsp",function(b){if(b.originalTarget===c||b.originalTarget==b.currentTarget){var d,e=a(this),f=e.offset(),g=b.pageX-f.left-db,h=!0,i=function(){var a=e.offset(),c=b.pageX-a.left-ob/2,f=R*P.scrollPagePercent,k=cb*f/(U-R);if(0>g)db-k>c?vb.scrollByX(-f):t(c);else{if(!(g>0))return j(),void 0;c>db+k?vb.scrollByX(f):t(c)}d=setTimeout(i,h?P.initialDelay:P.trackClickRepeatFreq),h=!1},j=function(){d&&clearTimeout(d),d=null,a(document).unbind("mouseup.jsp",j)};return i(),a(document).bind("mouseup.jsp",j),!1}})}function p(){mb&&mb.unbind("mousedown.jsp"),fb&&fb.unbind("mousedown.jsp")}function q(){a("html").unbind("dragstart.jsp selectstart.jsp mousemove.jsp mouseup.jsp mouseleave.jsp"),$&&$.removeClass("jspActive"),bb&&bb.removeClass("jspActive")}function r(a,b){Y&&(0>a?a=0:a>_&&(a=_),b===c&&(b=P.animateScroll),b?vb.animate($,"top",a,s):($.css("top",a),s(a)))}function s(a){a===c&&(a=$.position().top),T.scrollTop(0),ab=a;var b=0===ab,e=ab==_,f=a/_,g=-f*(V-S);(wb!=b||yb!=e)&&(wb=b,yb=e,d.trigger("jsp-arrow-change",[wb,yb,xb,zb])),v(b,e),Q.css("top",g),d.trigger("jsp-scroll-y",[-g,b,e]).trigger("scroll")}function t(a,b){Z&&(0>a?a=0:a>cb&&(a=cb),b===c&&(b=P.animateScroll),b?vb.animate(bb,"left",a,u):(bb.css("left",a),u(a)))}function u(a){a===c&&(a=bb.position().left),T.scrollTop(0),db=a;var b=0===db,e=db==cb,f=a/cb,g=-f*(U-R);(xb!=b||zb!=e)&&(xb=b,zb=e,d.trigger("jsp-arrow-change",[wb,yb,xb,zb])),w(b,e),Q.css("left",g),d.trigger("jsp-scroll-x",[-g,b,e]).trigger("scroll")}function v(a,b){P.showArrows&&(jb[a?"addClass":"removeClass"]("jspDisabled"),kb[b?"addClass":"removeClass"]("jspDisabled"))}function w(a,b){P.showArrows&&(pb[a?"addClass":"removeClass"]("jspDisabled"),qb[b?"addClass":"removeClass"]("jspDisabled"))}function x(a,b){var c=a/(V-S);r(c*_,b)}function y(a,b){var c=a/(U-R);t(c*cb,b)}function z(b,c,d){var e,f,g,h,i,j,k,l,m,n=0,o=0;try{e=a(b)}catch(p){return}for(f=e.outerHeight(),g=e.outerWidth(),T.scrollTop(0),T.scrollLeft(0);!e.is(".jspPane");)if(n+=e.position().top,o+=e.position().left,e=e.offsetParent(),/^body|html$/i.test(e[0].nodeName))return;h=B(),j=h+S,h>n||c?l=n-P.horizontalGutter:n+f>j&&(l=n-S+f+P.horizontalGutter),isNaN(l)||x(l,d),i=A(),k=i+R,i>o||c?m=o-P.horizontalGutter:o+g>k&&(m=o-R+g+P.horizontalGutter),isNaN(m)||y(m,d)}function A(){return-Q.position().left}function B(){return-Q.position().top}function C(){var a=V-S;return a>20&&a-B()<10}function D(){var a=U-R;return a>20&&a-A()<10}function E(){T.unbind(Bb).bind(Bb,function(a,b,c,d){var e=db,f=ab,g=a.deltaFactor||P.mouseWheelSpeed;return vb.scrollBy(c*g,-d*g,!1),e==db&&f==ab})}function F(){T.unbind(Bb)}function G(){return!1}function H(){Q.find(":input,a").unbind("focus.jsp").bind("focus.jsp",function(a){z(a.target,!1)})}function I(){Q.find(":input,a").unbind("focus.jsp")}function J(){function b(){var a=db,b=ab;switch(c){case 40:vb.scrollByY(P.keyboardSpeed,!1);break;case 38:vb.scrollByY(-P.keyboardSpeed,!1);break;case 34:case 32:vb.scrollByY(S*P.scrollPagePercent,!1);break;case 33:vb.scrollByY(-S*P.scrollPagePercent,!1);break;case 39:vb.scrollByX(P.keyboardSpeed,!1);break;case 37:vb.scrollByX(-P.keyboardSpeed,!1)}return e=a!=db||b!=ab}var c,e,f=[];Z&&f.push(lb[0]),Y&&f.push(eb[0]),Q.focus(function(){d.focus()}),d.attr("tabindex",0).unbind("keydown.jsp keypress.jsp").bind("keydown.jsp",function(d){if(d.target===this||f.length&&a(d.target).closest(f).length){var g=db,h=ab;switch(d.keyCode){case 40:case 38:case 34:case 32:case 33:case 39:case 37:c=d.keyCode,b();break;case 35:x(V-S),c=null;break;case 36:x(0),c=null}return e=d.keyCode==c&&g!=db||h!=ab,!e}}).bind("keypress.jsp",function(a){return a.keyCode==c&&b(),!e}),P.hideFocus?(d.css("outline","none"),"hideFocus"in T[0]&&d.attr("hideFocus",!0)):(d.css("outline",""),"hideFocus"in T[0]&&d.attr("hideFocus",!1))}function K(){d.attr("tabindex","-1").removeAttr("tabindex").unbind("keydown.jsp keypress.jsp")}function L(){if(location.hash&&location.hash.length>1){var b,c,d=escape(location.hash.substr(1));try{b=a("#"+d+', a[name="'+d+'"]')}catch(e){return}b.length&&Q.find(d)&&(0===T.scrollTop()?c=setInterval(function(){T.scrollTop()>0&&(z(b,!0),a(document).scrollTop(T.position().top),clearInterval(c))},50):(z(b,!0),a(document).scrollTop(T.position().top)))}}function M(){a(document.body).data("jspHijack")||(a(document.body).data("jspHijack",!0),a(document.body).delegate("a[href*=#]","click",function(c){var d,e,f,g,h,i,j=this.href.substr(0,this.href.indexOf("#")),k=location.href;if(-1!==location.href.indexOf("#")&&(k=location.href.substr(0,location.href.indexOf("#"))),j===k){d=escape(this.href.substr(this.href.indexOf("#")+1));try{e=a("#"+d+', a[name="'+d+'"]')}catch(l){return}e.length&&(f=e.closest(".jspScrollable"),g=f.data("jsp"),g.scrollToElement(e,!0),f[0].scrollIntoView&&(h=a(b).scrollTop(),i=e.offset().top,(h>i||i>h+a(b).height())&&f[0].scrollIntoView()),c.preventDefault())}}))}function N(){var a,b,c,d,e,f=!1;T.unbind("touchstart.jsp touchmove.jsp touchend.jsp click.jsp-touchclick").bind("touchstart.jsp",function(g){var h=g.originalEvent.touches[0];a=A(),b=B(),c=h.pageX,d=h.pageY,e=!1,f=!0}).bind("touchmove.jsp",function(g){if(f){var h=g.originalEvent.touches[0],i=db,j=ab;return vb.scrollTo(a+c-h.pageX,b+d-h.pageY),e=e||Math.abs(c-h.pageX)>5||Math.abs(d-h.pageY)>5,i==db&&j==ab}}).bind("touchend.jsp",function(){f=!1}).bind("click.jsp-touchclick",function(){return e?(e=!1,!1):void 0})}function O(){var a=B(),b=A();d.removeClass("jspScrollable").unbind(".jsp"),d.replaceWith(Ab.append(Q.children())),Ab.scrollTop(a),Ab.scrollLeft(b),rb&&clearInterval(rb)}var P,Q,R,S,T,U,V,W,X,Y,Z,$,_,ab,bb,cb,db,eb,fb,gb,hb,ib,jb,kb,lb,mb,nb,ob,pb,qb,rb,sb,tb,ub,vb=this,wb=!0,xb=!0,yb=!1,zb=!1,Ab=d.clone(!1,!1).empty(),Bb=a.fn.mwheelIntent?"mwheelIntent.jsp":"mousewheel.jsp";"border-box"===d.css("box-sizing")?(sb=0,tb=0):(sb=d.css("paddingTop")+" "+d.css("paddingRight")+" "+d.css("paddingBottom")+" "+d.css("paddingLeft"),tb=(parseInt(d.css("paddingLeft"),10)||0)+(parseInt(d.css("paddingRight"),10)||0)),a.extend(vb,{reinitialise:function(b){b=a.extend({},P,b),f(b)},scrollToElement:function(a,b,c){z(a,b,c)},scrollTo:function(a,b,c){y(a,c),x(b,c)},scrollToX:function(a,b){y(a,b)},scrollToY:function(a,b){x(a,b)},scrollToPercentX:function(a,b){y(a*(U-R),b)},scrollToPercentY:function(a,b){x(a*(V-S),b)},scrollBy:function(a,b,c){vb.scrollByX(a,c),vb.scrollByY(b,c)},scrollByX:function(a,b){var c=A()+Math[0>a?"floor":"ceil"](a),d=c/(U-R);t(d*cb,b)},scrollByY:function(a,b){var c=B()+Math[0>a?"floor":"ceil"](a),d=c/(V-S);r(d*_,b)},positionDragX:function(a,b){t(a,b)},positionDragY:function(a,b){r(a,b)},animate:function(a,b,c,d){var e={};e[b]=c,a.animate(e,{duration:P.animateDuration,easing:P.animateEase,queue:!1,step:d})},getContentPositionX:function(){return A()},getContentPositionY:function(){return B()},getContentWidth:function(){return U},getContentHeight:function(){return V},getPercentScrolledX:function(){return A()/(U-R)},getPercentScrolledY:function(){return B()/(V-S)},getIsScrollableH:function(){return Z},getIsScrollableV:function(){return Y},getContentPane:function(){return Q},scrollToBottom:function(a){r(_,a)},hijackInternalLinks:a.noop,destroy:function(){O()}}),f(e)}return d=a.extend({},a.fn.jScrollPane.defaults,d),a.each(["arrowButtonSpeed","trackClickSpeed","keyboardSpeed"],function(){d[this]=d[this]||d.speed}),this.each(function(){var b=a(this),c=b.data("jsp");c?c.reinitialise(d):(a("script",b).filter('[type="text/javascript"],:not([type])').remove(),c=new e(b,d),b.data("jsp",c))})},a.fn.jScrollPane.defaults={showArrows:!1,maintainPosition:!0,stickToBottom:!1,stickToRight:!1,clickOnTrack:!0,autoReinitialise:!1,autoReinitialiseDelay:500,verticalDragMinHeight:0,verticalDragMaxHeight:99999,horizontalDragMinWidth:0,horizontalDragMaxWidth:99999,contentWidth:c,animateScroll:!1,animateDuration:300,animateEase:"linear",hijackInternalLinks:!1,verticalGutter:4,horizontalGutter:4,mouseWheelSpeed:3,arrowButtonSpeed:0,arrowRepeatFreq:50,arrowScrollOnHover:!1,trackClickSpeed:0,trackClickRepeatFreq:70,verticalArrowPositions:"split",horizontalArrowPositions:"split",enableKeyboardNavigation:!0,hideFocus:!1,keyboardSpeed:0,initialDelay:300,speed:30,scrollPagePercent:.8}}(jQuery,this);
